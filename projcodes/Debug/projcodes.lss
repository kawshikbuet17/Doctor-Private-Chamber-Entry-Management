
projcodes.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f44  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000024  00800060  00000f44  00000fd8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800084  00800084  00000ffc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ffc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001058  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  00001094  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000022bc  00000000  00000000  0000127c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b5b  00000000  00000000  00003538  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001303  00000000  00000000  00004093  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000458  00000000  00000000  00005398  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000066a  00000000  00000000  000057f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000145c  00000000  00000000  00005e5a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000208  00000000  00000000  000072b6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e4       	ldi	r30, 0x44	; 68
  68:	ff e0       	ldi	r31, 0x0F	; 15
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 38       	cpi	r26, 0x84	; 132
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a4 e8       	ldi	r26, 0x84	; 132
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a7 38       	cpi	r26, 0x87	; 135
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 1c 04 	call	0x838	; 0x838 <main>
  8a:	0c 94 a0 07 	jmp	0xf40	; 0xf40 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <HC05_Init_Data_Mode>:
{
	// communication properties = baud rate 9600 , Data bits:8, Stop bit:1,Parity:No parity
	
	
	
	UCSRA = 1<<U2X; // no interrupt ,  double speed 
  92:	82 e0       	ldi	r24, 0x02	; 2
  94:	8b b9       	out	0x0b, r24	; 11
	
	UCSRB = (1 << RXEN) | (1 << TXEN);				// Enable USART transmitter and receiver 
  96:	88 e1       	ldi	r24, 0x18	; 24
  98:	8a b9       	out	0x0a, r24	; 10
	
	UCSRC  = (1<<URSEL) | (1<<UCSZ1) | (1<<UCSZ0); // data bit 8 , stop bit 1 
  9a:	86 e8       	ldi	r24, 0x86	; 134
  9c:	80 bd       	out	0x20, r24	; 32
	
	// double speed , UBRR = f_cpu / 8 / 9600 - 1	
	#define UBRR ((F_CPU)/8UL/9600UL - 1)
	
	UBRRL = UBRR;   // set ubrrl
  9e:	8c e0       	ldi	r24, 0x0C	; 12
  a0:	89 b9       	out	0x09, r24	; 9
	UBRRH = UBRR>>8; // set ubrrh
  a2:	10 bc       	out	0x20, r1	; 32
  a4:	08 95       	ret

000000a6 <I2C_WRITESEQ>:
{
    wr_lcd_mode(cmd, 0);
}
void lcd_data(unsigned char data)
{
    wr_lcd_mode(data, 1);
  a6:	ef 92       	push	r14
  a8:	ff 92       	push	r15
  aa:	0f 93       	push	r16
  ac:	1f 93       	push	r17
  ae:	cf 93       	push	r28
  b0:	df 93       	push	r29
  b2:	7b 01       	movw	r14, r22
  b4:	14 2f       	mov	r17, r20
  b6:	88 0f       	add	r24, r24
  b8:	0e 94 85 04 	call	0x90a	; 0x90a <i2c_start>
  bc:	81 11       	cpse	r24, r1
  be:	12 c0       	rjmp	.+36     	; 0xe4 <I2C_WRITESEQ+0x3e>
  c0:	11 23       	and	r17, r17
  c2:	91 f0       	breq	.+36     	; 0xe8 <I2C_WRITESEQ+0x42>
  c4:	e7 01       	movw	r28, r14
  c6:	11 50       	subi	r17, 0x01	; 1
  c8:	01 2f       	mov	r16, r17
  ca:	10 e0       	ldi	r17, 0x00	; 0
  cc:	0f 5f       	subi	r16, 0xFF	; 255
  ce:	1f 4f       	sbci	r17, 0xFF	; 255
  d0:	0e 0d       	add	r16, r14
  d2:	1f 1d       	adc	r17, r15
  d4:	89 91       	ld	r24, Y+
  d6:	0e 94 a9 04 	call	0x952	; 0x952 <i2c_write>
  da:	c0 17       	cp	r28, r16
  dc:	d1 07       	cpc	r29, r17
  de:	d1 f7       	brne	.-12     	; 0xd4 <I2C_WRITESEQ+0x2e>
  e0:	c0 e0       	ldi	r28, 0x00	; 0
  e2:	03 c0       	rjmp	.+6      	; 0xea <I2C_WRITESEQ+0x44>
  e4:	c1 e0       	ldi	r28, 0x01	; 1
  e6:	01 c0       	rjmp	.+2      	; 0xea <I2C_WRITESEQ+0x44>
  e8:	c0 e0       	ldi	r28, 0x00	; 0
  ea:	0e 94 a3 04 	call	0x946	; 0x946 <i2c_stop>
  ee:	8c 2f       	mov	r24, r28
  f0:	df 91       	pop	r29
  f2:	cf 91       	pop	r28
  f4:	1f 91       	pop	r17
  f6:	0f 91       	pop	r16
  f8:	ff 90       	pop	r15
  fa:	ef 90       	pop	r14
  fc:	08 95       	ret

000000fe <wr_lcd_mode>:
  fe:	0f 93       	push	r16
 100:	1f 93       	push	r17
 102:	cf 93       	push	r28
 104:	df 93       	push	r29
 106:	00 d0       	rcall	.+0      	; 0x108 <wr_lcd_mode+0xa>
 108:	00 d0       	rcall	.+0      	; 0x10a <wr_lcd_mode+0xc>
 10a:	1f 92       	push	r1
 10c:	cd b7       	in	r28, 0x3d	; 61
 10e:	de b7       	in	r29, 0x3e	; 62
 110:	08 2f       	mov	r16, r24
 112:	68 30       	cpi	r22, 0x08	; 8
 114:	71 f4       	brne	.+28     	; 0x132 <wr_lcd_mode+0x34>
 116:	81 11       	cpse	r24, r1
 118:	02 c0       	rjmp	.+4      	; 0x11e <wr_lcd_mode+0x20>
 11a:	80 e0       	ldi	r24, 0x00	; 0
 11c:	01 c0       	rjmp	.+2      	; 0x120 <wr_lcd_mode+0x22>
 11e:	88 e0       	ldi	r24, 0x08	; 8
 120:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 124:	41 e0       	ldi	r20, 0x01	; 1
 126:	60 e6       	ldi	r22, 0x60	; 96
 128:	70 e0       	ldi	r23, 0x00	; 0
 12a:	87 e2       	ldi	r24, 0x27	; 39
 12c:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_WRITESEQ>
 130:	26 c0       	rjmp	.+76     	; 0x17e <wr_lcd_mode+0x80>
 132:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 136:	16 2f       	mov	r17, r22
 138:	18 2b       	or	r17, r24
 13a:	19 83       	std	Y+1, r17	; 0x01
 13c:	80 2f       	mov	r24, r16
 13e:	80 7f       	andi	r24, 0xF0	; 240
 140:	84 60       	ori	r24, 0x04	; 4
 142:	81 2b       	or	r24, r17
 144:	8a 83       	std	Y+2, r24	; 0x02
 146:	8b 7f       	andi	r24, 0xFB	; 251
 148:	8b 83       	std	Y+3, r24	; 0x03
 14a:	20 e1       	ldi	r18, 0x10	; 16
 14c:	02 9f       	mul	r16, r18
 14e:	c0 01       	movw	r24, r0
 150:	11 24       	eor	r1, r1
 152:	81 2b       	or	r24, r17
 154:	84 60       	ori	r24, 0x04	; 4
 156:	8c 83       	std	Y+4, r24	; 0x04
 158:	8b 7f       	andi	r24, 0xFB	; 251
 15a:	8d 83       	std	Y+5, r24	; 0x05
 15c:	45 e0       	ldi	r20, 0x05	; 5
 15e:	be 01       	movw	r22, r28
 160:	6f 5f       	subi	r22, 0xFF	; 255
 162:	7f 4f       	sbci	r23, 0xFF	; 255
 164:	87 e2       	ldi	r24, 0x27	; 39
 166:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_WRITESEQ>
 16a:	10 fd       	sbrc	r17, 0
 16c:	08 c0       	rjmp	.+16     	; 0x17e <wr_lcd_mode+0x80>
 16e:	03 30       	cpi	r16, 0x03	; 3
 170:	30 f4       	brcc	.+12     	; 0x17e <wr_lcd_mode+0x80>
 172:	e3 ef       	ldi	r30, 0xF3	; 243
 174:	f1 e0       	ldi	r31, 0x01	; 1
 176:	31 97       	sbiw	r30, 0x01	; 1
 178:	f1 f7       	brne	.-4      	; 0x176 <wr_lcd_mode+0x78>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <wr_lcd_mode+0x7e>
 17c:	00 00       	nop
 17e:	0f 90       	pop	r0
 180:	0f 90       	pop	r0
 182:	0f 90       	pop	r0
 184:	0f 90       	pop	r0
 186:	0f 90       	pop	r0
 188:	df 91       	pop	r29
 18a:	cf 91       	pop	r28
 18c:	1f 91       	pop	r17
 18e:	0f 91       	pop	r16
 190:	08 95       	ret

00000192 <lcd_gotoxy>:
 192:	cf 93       	push	r28
 194:	df 93       	push	r29
 196:	d8 2f       	mov	r29, r24
 198:	c6 2f       	mov	r28, r22
 19a:	e6 2f       	mov	r30, r22
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	ef 59       	subi	r30, 0x9F	; 159
 1a0:	ff 4f       	sbci	r31, 0xFF	; 255
 1a2:	98 2f       	mov	r25, r24
 1a4:	90 68       	ori	r25, 0x80	; 128
 1a6:	80 81       	ld	r24, Z
 1a8:	60 e0       	ldi	r22, 0x00	; 0
 1aa:	89 2b       	or	r24, r25
 1ac:	0e 94 7f 00 	call	0xfe	; 0xfe <wr_lcd_mode>
 1b0:	d0 93 85 00 	sts	0x0085, r29	; 0x800085 <_lcd_x>
 1b4:	c0 93 86 00 	sts	0x0086, r28	; 0x800086 <_lcd_y>
 1b8:	df 91       	pop	r29
 1ba:	cf 91       	pop	r28
 1bc:	08 95       	ret

000001be <lcd_clrscr>:
 1be:	60 e0       	ldi	r22, 0x00	; 0
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	0e 94 7f 00 	call	0xfe	; 0xfe <wr_lcd_mode>
 1c6:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <_lcd_y>
 1ca:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <_lcd_x>
 1ce:	08 95       	ret

000001d0 <lcd_putc>:
 1d0:	cf 93       	push	r28
 1d2:	c8 2f       	mov	r28, r24
 1d4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <_lcd_x>
 1d8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__data_end>
 1dc:	98 17       	cp	r25, r24
 1de:	18 f4       	brcc	.+6      	; 0x1e6 <lcd_putc+0x16>
 1e0:	ca 30       	cpi	r28, 0x0A	; 10
 1e2:	59 f4       	brne	.+22     	; 0x1fa <lcd_putc+0x2a>
 1e4:	14 c0       	rjmp	.+40     	; 0x20e <lcd_putc+0x3e>
 1e6:	60 91 86 00 	lds	r22, 0x0086	; 0x800086 <_lcd_y>
 1ea:	6f 5f       	subi	r22, 0xFF	; 255
 1ec:	60 93 86 00 	sts	0x0086, r22	; 0x800086 <_lcd_y>
 1f0:	80 e0       	ldi	r24, 0x00	; 0
 1f2:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_gotoxy>
 1f6:	ca 30       	cpi	r28, 0x0A	; 10
 1f8:	91 f0       	breq	.+36     	; 0x21e <lcd_putc+0x4e>
 1fa:	80 91 85 00 	lds	r24, 0x0085	; 0x800085 <_lcd_x>
 1fe:	8f 5f       	subi	r24, 0xFF	; 255
 200:	80 93 85 00 	sts	0x0085, r24	; 0x800085 <_lcd_x>
 204:	61 e0       	ldi	r22, 0x01	; 1
 206:	8c 2f       	mov	r24, r28
 208:	0e 94 7f 00 	call	0xfe	; 0xfe <wr_lcd_mode>
 20c:	08 c0       	rjmp	.+16     	; 0x21e <lcd_putc+0x4e>
 20e:	60 91 86 00 	lds	r22, 0x0086	; 0x800086 <_lcd_y>
 212:	6f 5f       	subi	r22, 0xFF	; 255
 214:	60 93 86 00 	sts	0x0086, r22	; 0x800086 <_lcd_y>
 218:	80 e0       	ldi	r24, 0x00	; 0
 21a:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_gotoxy>
 21e:	cf 91       	pop	r28
 220:	08 95       	ret

00000222 <lcd_puts>:
 222:	cf 93       	push	r28
 224:	df 93       	push	r29
 226:	ec 01       	movw	r28, r24
 228:	88 81       	ld	r24, Y
 22a:	88 23       	and	r24, r24
 22c:	31 f0       	breq	.+12     	; 0x23a <lcd_puts+0x18>
 22e:	21 96       	adiw	r28, 0x01	; 1
 230:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_putc>
 234:	89 91       	ld	r24, Y+
 236:	81 11       	cpse	r24, r1
 238:	fb cf       	rjmp	.-10     	; 0x230 <lcd_puts+0xe>
 23a:	df 91       	pop	r29
 23c:	cf 91       	pop	r28
 23e:	08 95       	ret

00000240 <lcd_init>:
}
// initialize the LCD controller
void lcd_init(unsigned char command)
{
 240:	0f 93       	push	r16
 242:	1f 93       	push	r17
 244:	cf 93       	push	r28
 246:	df 93       	push	r29
 248:	00 d0       	rcall	.+0      	; 0x24a <lcd_init+0xa>
 24a:	00 d0       	rcall	.+0      	; 0x24c <lcd_init+0xc>
 24c:	00 d0       	rcall	.+0      	; 0x24e <lcd_init+0xe>
 24e:	cd b7       	in	r28, 0x3d	; 61
 250:	de b7       	in	r29, 0x3e	; 62
 252:	08 2f       	mov	r16, r24
    uint8_t nibbleval30[] = {0x30, 0x34, 0x30};
 254:	80 e3       	ldi	r24, 0x30	; 48
 256:	89 83       	std	Y+1, r24	; 0x01
 258:	94 e3       	ldi	r25, 0x34	; 52
 25a:	9a 83       	std	Y+2, r25	; 0x02
 25c:	8b 83       	std	Y+3, r24	; 0x03
    uint8_t nibbleval20[] = {0x20, 0x24, 0x20};
 25e:	80 e2       	ldi	r24, 0x20	; 32
 260:	8c 83       	std	Y+4, r24	; 0x04
 262:	94 e2       	ldi	r25, 0x24	; 36
 264:	9d 83       	std	Y+5, r25	; 0x05
 266:	8e 83       	std	Y+6, r24	; 0x06
	uint8_t ret = 0;
    _lcd_maxx = LCD_DISP_LENGTH;
 268:	80 e1       	ldi	r24, 0x10	; 16
 26a:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__data_end>
    _base_y[2] = _base_y[0] + _lcd_maxx;
 26e:	e1 e6       	ldi	r30, 0x61	; 97
 270:	f0 e0       	ldi	r31, 0x00	; 0
 272:	80 81       	ld	r24, Z
 274:	80 5f       	subi	r24, 0xF0	; 240
 276:	82 83       	std	Z+2, r24	; 0x02
    _base_y[3] = _base_y[1] + _lcd_maxx;
 278:	81 81       	ldd	r24, Z+1	; 0x01
 27a:	80 5f       	subi	r24, 0xF0	; 240
 27c:	83 83       	std	Z+3, r24	; 0x03
    DDRB |= (1<<5); PORTB |= (1<<5);
 27e:	bd 9a       	sbi	0x17, 5	; 23
 280:	c5 9a       	sbi	0x18, 5	; 24
    I2C_INIT();
 282:	0e 94 81 04 	call	0x902	; 0x902 <i2c_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 286:	8b e4       	ldi	r24, 0x4B	; 75
 288:	9d e1       	ldi	r25, 0x1D	; 29
 28a:	01 97       	sbiw	r24, 0x01	; 1
 28c:	f1 f7       	brne	.-4      	; 0x28a <lcd_init+0x4a>
 28e:	00 c0       	rjmp	.+0      	; 0x290 <lcd_init+0x50>
 290:	00 00       	nop
    _delay_ms(30);               // 30 ms Delay nach power-up
    ret |= I2C_WRITESEQ(PCF8574A, nibbleval30, 3);    //0x3- 8-bit  
 292:	43 e0       	ldi	r20, 0x03	; 3
 294:	be 01       	movw	r22, r28
 296:	6f 5f       	subi	r22, 0xFF	; 255
 298:	7f 4f       	sbci	r23, 0xFF	; 255
 29a:	87 e2       	ldi	r24, 0x27	; 39
 29c:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_WRITESEQ>
 2a0:	18 2f       	mov	r17, r24
 2a2:	81 ee       	ldi	r24, 0xE1	; 225
 2a4:	94 e0       	ldi	r25, 0x04	; 4
 2a6:	01 97       	sbiw	r24, 0x01	; 1
 2a8:	f1 f7       	brne	.-4      	; 0x2a6 <lcd_init+0x66>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <lcd_init+0x6c>
 2ac:	00 00       	nop
    _delay_ms(5);
    ret |= I2C_WRITESEQ(PCF8574A, nibbleval30, 3);    //0x3- 8-bit
 2ae:	43 e0       	ldi	r20, 0x03	; 3
 2b0:	be 01       	movw	r22, r28
 2b2:	6f 5f       	subi	r22, 0xFF	; 255
 2b4:	7f 4f       	sbci	r23, 0xFF	; 255
 2b6:	87 e2       	ldi	r24, 0x27	; 39
 2b8:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_WRITESEQ>
 2bc:	18 2b       	or	r17, r24
    ret |= I2C_WRITESEQ(PCF8574A, nibbleval30, 3);    //0x3- 8-bit
 2be:	43 e0       	ldi	r20, 0x03	; 3
 2c0:	be 01       	movw	r22, r28
 2c2:	6f 5f       	subi	r22, 0xFF	; 255
 2c4:	7f 4f       	sbci	r23, 0xFF	; 255
 2c6:	87 e2       	ldi	r24, 0x27	; 39
 2c8:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_WRITESEQ>
 2cc:	18 2b       	or	r17, r24
    ret |= I2C_WRITESEQ(PCF8574A, nibbleval20, 3);    //0x2- 8-bit
 2ce:	43 e0       	ldi	r20, 0x03	; 3
 2d0:	be 01       	movw	r22, r28
 2d2:	6c 5f       	subi	r22, 0xFC	; 252
 2d4:	7f 4f       	sbci	r23, 0xFF	; 255
 2d6:	87 e2       	ldi	r24, 0x27	; 39
 2d8:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_WRITESEQ>
 2dc:	18 2b       	or	r17, r24
	ret |= wr_lcd_mode(0x28, 0);                      //0x28 set 4-bit 2 lines
 2de:	60 e0       	ldi	r22, 0x00	; 0
 2e0:	88 e2       	ldi	r24, 0x28	; 40
 2e2:	0e 94 7f 00 	call	0xfe	; 0xfe <wr_lcd_mode>
    if (ret) { PORTB &= ~(1<<5); }
 2e6:	81 2b       	or	r24, r17
 2e8:	09 f0       	breq	.+2      	; 0x2ec <lcd_init+0xac>
 2ea:	c5 98       	cbi	0x18, 5	; 24
    wr_lcd_mode(0x0c, 0);
 2ec:	60 e0       	ldi	r22, 0x00	; 0
 2ee:	8c e0       	ldi	r24, 0x0C	; 12
 2f0:	0e 94 7f 00 	call	0xfe	; 0xfe <wr_lcd_mode>
    wr_lcd_mode(0x06, 0);
 2f4:	60 e0       	ldi	r22, 0x00	; 0
 2f6:	86 e0       	ldi	r24, 0x06	; 6
 2f8:	0e 94 7f 00 	call	0xfe	; 0xfe <wr_lcd_mode>
    wr_lcd_mode(0x01, 0);
 2fc:	60 e0       	ldi	r22, 0x00	; 0
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	0e 94 7f 00 	call	0xfe	; 0xfe <wr_lcd_mode>
    wr_lcd_mode(command, 0);
 304:	60 e0       	ldi	r22, 0x00	; 0
 306:	80 2f       	mov	r24, r16
 308:	0e 94 7f 00 	call	0xfe	; 0xfe <wr_lcd_mode>
}
 30c:	26 96       	adiw	r28, 0x06	; 6
 30e:	0f b6       	in	r0, 0x3f	; 63
 310:	f8 94       	cli
 312:	de bf       	out	0x3e, r29	; 62
 314:	0f be       	out	0x3f, r0	; 63
 316:	cd bf       	out	0x3d, r28	; 61
 318:	df 91       	pop	r29
 31a:	cf 91       	pop	r28
 31c:	1f 91       	pop	r17
 31e:	0f 91       	pop	r16
 320:	08 95       	ret

00000322 <lcd_backlight>:

void lcd_backlight(char on)
{
    wr_lcd_mode(on, 8);
 322:	68 e0       	ldi	r22, 0x08	; 8
 324:	0e 94 7f 00 	call	0xfe	; 0xfe <wr_lcd_mode>
 328:	08 95       	ret

0000032a <pinChange>:
}

int_fast8_t Keypad_KeyPressed()
{
	return (PINA >> 4);
}
 32a:	67 2b       	or	r22, r23
 32c:	09 f0       	breq	.+2      	; 0x330 <pinChange+0x6>
 32e:	9f c0       	rjmp	.+318    	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 330:	00 97       	sbiw	r24, 0x00	; 0
 332:	11 f4       	brne	.+4      	; 0x338 <pinChange+0xe>
 334:	d8 98       	cbi	0x1b, 0	; 27
 336:	08 95       	ret
 338:	81 30       	cpi	r24, 0x01	; 1
 33a:	91 05       	cpc	r25, r1
 33c:	11 f4       	brne	.+4      	; 0x342 <pinChange+0x18>
 33e:	d9 98       	cbi	0x1b, 1	; 27
 340:	08 95       	ret
 342:	82 30       	cpi	r24, 0x02	; 2
 344:	91 05       	cpc	r25, r1
 346:	11 f4       	brne	.+4      	; 0x34c <pinChange+0x22>
 348:	da 98       	cbi	0x1b, 2	; 27
 34a:	08 95       	ret
 34c:	83 30       	cpi	r24, 0x03	; 3
 34e:	91 05       	cpc	r25, r1
 350:	11 f4       	brne	.+4      	; 0x356 <pinChange+0x2c>
 352:	db 98       	cbi	0x1b, 3	; 27
 354:	08 95       	ret
 356:	84 30       	cpi	r24, 0x04	; 4
 358:	91 05       	cpc	r25, r1
 35a:	11 f4       	brne	.+4      	; 0x360 <pinChange+0x36>
 35c:	dc 98       	cbi	0x1b, 4	; 27
 35e:	08 95       	ret
 360:	85 30       	cpi	r24, 0x05	; 5
 362:	91 05       	cpc	r25, r1
 364:	11 f4       	brne	.+4      	; 0x36a <pinChange+0x40>
 366:	dd 98       	cbi	0x1b, 5	; 27
 368:	08 95       	ret
 36a:	86 30       	cpi	r24, 0x06	; 6
 36c:	91 05       	cpc	r25, r1
 36e:	11 f4       	brne	.+4      	; 0x374 <pinChange+0x4a>
 370:	de 98       	cbi	0x1b, 6	; 27
 372:	08 95       	ret
 374:	87 30       	cpi	r24, 0x07	; 7
 376:	91 05       	cpc	r25, r1
 378:	11 f4       	brne	.+4      	; 0x37e <pinChange+0x54>
 37a:	df 98       	cbi	0x1b, 7	; 27
 37c:	08 95       	ret
 37e:	8a 30       	cpi	r24, 0x0A	; 10
 380:	91 05       	cpc	r25, r1
 382:	11 f4       	brne	.+4      	; 0x388 <pinChange+0x5e>
 384:	c0 98       	cbi	0x18, 0	; 24
 386:	08 95       	ret
 388:	8b 30       	cpi	r24, 0x0B	; 11
 38a:	91 05       	cpc	r25, r1
 38c:	11 f4       	brne	.+4      	; 0x392 <pinChange+0x68>
 38e:	c1 98       	cbi	0x18, 1	; 24
 390:	08 95       	ret
 392:	8c 30       	cpi	r24, 0x0C	; 12
 394:	91 05       	cpc	r25, r1
 396:	11 f4       	brne	.+4      	; 0x39c <pinChange+0x72>
 398:	c2 98       	cbi	0x18, 2	; 24
 39a:	08 95       	ret
 39c:	8d 30       	cpi	r24, 0x0D	; 13
 39e:	91 05       	cpc	r25, r1
 3a0:	11 f4       	brne	.+4      	; 0x3a6 <pinChange+0x7c>
 3a2:	c3 98       	cbi	0x18, 3	; 24
 3a4:	08 95       	ret
 3a6:	8e 30       	cpi	r24, 0x0E	; 14
 3a8:	91 05       	cpc	r25, r1
 3aa:	11 f4       	brne	.+4      	; 0x3b0 <pinChange+0x86>
 3ac:	c4 98       	cbi	0x18, 4	; 24
 3ae:	08 95       	ret
 3b0:	8f 30       	cpi	r24, 0x0F	; 15
 3b2:	91 05       	cpc	r25, r1
 3b4:	11 f4       	brne	.+4      	; 0x3ba <pinChange+0x90>
 3b6:	c5 98       	cbi	0x18, 5	; 24
 3b8:	08 95       	ret
 3ba:	80 31       	cpi	r24, 0x10	; 16
 3bc:	91 05       	cpc	r25, r1
 3be:	11 f4       	brne	.+4      	; 0x3c4 <pinChange+0x9a>
 3c0:	c6 98       	cbi	0x18, 6	; 24
 3c2:	08 95       	ret
 3c4:	81 31       	cpi	r24, 0x11	; 17
 3c6:	91 05       	cpc	r25, r1
 3c8:	11 f4       	brne	.+4      	; 0x3ce <pinChange+0xa4>
 3ca:	c7 98       	cbi	0x18, 7	; 24
 3cc:	08 95       	ret
 3ce:	84 31       	cpi	r24, 0x14	; 20
 3d0:	91 05       	cpc	r25, r1
 3d2:	11 f4       	brne	.+4      	; 0x3d8 <pinChange+0xae>
 3d4:	a8 98       	cbi	0x15, 0	; 21
 3d6:	08 95       	ret
 3d8:	85 31       	cpi	r24, 0x15	; 21
 3da:	91 05       	cpc	r25, r1
 3dc:	11 f4       	brne	.+4      	; 0x3e2 <pinChange+0xb8>
 3de:	a9 98       	cbi	0x15, 1	; 21
 3e0:	08 95       	ret
 3e2:	86 31       	cpi	r24, 0x16	; 22
 3e4:	91 05       	cpc	r25, r1
 3e6:	11 f4       	brne	.+4      	; 0x3ec <pinChange+0xc2>
 3e8:	aa 98       	cbi	0x15, 2	; 21
 3ea:	08 95       	ret
 3ec:	87 31       	cpi	r24, 0x17	; 23
 3ee:	91 05       	cpc	r25, r1
 3f0:	11 f4       	brne	.+4      	; 0x3f6 <pinChange+0xcc>
 3f2:	ab 98       	cbi	0x15, 3	; 21
 3f4:	08 95       	ret
 3f6:	88 31       	cpi	r24, 0x18	; 24
 3f8:	91 05       	cpc	r25, r1
 3fa:	11 f4       	brne	.+4      	; 0x400 <__LOCK_REGION_LENGTH__>
 3fc:	ac 98       	cbi	0x15, 4	; 21
 3fe:	08 95       	ret
 400:	89 31       	cpi	r24, 0x19	; 25
 402:	91 05       	cpc	r25, r1
 404:	11 f4       	brne	.+4      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 406:	ad 98       	cbi	0x15, 5	; 21
 408:	08 95       	ret
 40a:	8a 31       	cpi	r24, 0x1A	; 26
 40c:	91 05       	cpc	r25, r1
 40e:	11 f4       	brne	.+4      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 410:	ae 98       	cbi	0x15, 6	; 21
 412:	08 95       	ret
 414:	8b 31       	cpi	r24, 0x1B	; 27
 416:	91 05       	cpc	r25, r1
 418:	11 f4       	brne	.+4      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 41a:	af 98       	cbi	0x15, 7	; 21
 41c:	08 95       	ret
 41e:	8e 31       	cpi	r24, 0x1E	; 30
 420:	91 05       	cpc	r25, r1
 422:	11 f4       	brne	.+4      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 424:	90 98       	cbi	0x12, 0	; 18
 426:	08 95       	ret
 428:	8f 31       	cpi	r24, 0x1F	; 31
 42a:	91 05       	cpc	r25, r1
 42c:	11 f4       	brne	.+4      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 42e:	91 98       	cbi	0x12, 1	; 18
 430:	08 95       	ret
 432:	80 32       	cpi	r24, 0x20	; 32
 434:	91 05       	cpc	r25, r1
 436:	11 f4       	brne	.+4      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 438:	92 98       	cbi	0x12, 2	; 18
 43a:	08 95       	ret
 43c:	81 32       	cpi	r24, 0x21	; 33
 43e:	91 05       	cpc	r25, r1
 440:	11 f4       	brne	.+4      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 442:	93 98       	cbi	0x12, 3	; 18
 444:	08 95       	ret
 446:	82 32       	cpi	r24, 0x22	; 34
 448:	91 05       	cpc	r25, r1
 44a:	11 f4       	brne	.+4      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 44c:	94 98       	cbi	0x12, 4	; 18
 44e:	08 95       	ret
 450:	83 32       	cpi	r24, 0x23	; 35
 452:	91 05       	cpc	r25, r1
 454:	11 f4       	brne	.+4      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 456:	95 98       	cbi	0x12, 5	; 18
 458:	08 95       	ret
 45a:	84 32       	cpi	r24, 0x24	; 36
 45c:	91 05       	cpc	r25, r1
 45e:	11 f4       	brne	.+4      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 460:	96 98       	cbi	0x12, 6	; 18
 462:	08 95       	ret
 464:	85 97       	sbiw	r24, 0x25	; 37
 466:	09 f0       	breq	.+2      	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 468:	9f c0       	rjmp	.+318    	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 46a:	97 98       	cbi	0x12, 7	; 18
 46c:	08 95       	ret
 46e:	00 97       	sbiw	r24, 0x00	; 0
 470:	11 f4       	brne	.+4      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 472:	d8 9a       	sbi	0x1b, 0	; 27
 474:	08 95       	ret
 476:	81 30       	cpi	r24, 0x01	; 1
 478:	91 05       	cpc	r25, r1
 47a:	11 f4       	brne	.+4      	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 47c:	d9 9a       	sbi	0x1b, 1	; 27
 47e:	08 95       	ret
 480:	82 30       	cpi	r24, 0x02	; 2
 482:	91 05       	cpc	r25, r1
 484:	11 f4       	brne	.+4      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 486:	da 9a       	sbi	0x1b, 2	; 27
 488:	08 95       	ret
 48a:	83 30       	cpi	r24, 0x03	; 3
 48c:	91 05       	cpc	r25, r1
 48e:	11 f4       	brne	.+4      	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 490:	db 9a       	sbi	0x1b, 3	; 27
 492:	08 95       	ret
 494:	84 30       	cpi	r24, 0x04	; 4
 496:	91 05       	cpc	r25, r1
 498:	11 f4       	brne	.+4      	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 49a:	dc 9a       	sbi	0x1b, 4	; 27
 49c:	08 95       	ret
 49e:	85 30       	cpi	r24, 0x05	; 5
 4a0:	91 05       	cpc	r25, r1
 4a2:	11 f4       	brne	.+4      	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 4a4:	dd 9a       	sbi	0x1b, 5	; 27
 4a6:	08 95       	ret
 4a8:	86 30       	cpi	r24, 0x06	; 6
 4aa:	91 05       	cpc	r25, r1
 4ac:	11 f4       	brne	.+4      	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4ae:	de 9a       	sbi	0x1b, 6	; 27
 4b0:	08 95       	ret
 4b2:	87 30       	cpi	r24, 0x07	; 7
 4b4:	91 05       	cpc	r25, r1
 4b6:	11 f4       	brne	.+4      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4b8:	df 9a       	sbi	0x1b, 7	; 27
 4ba:	08 95       	ret
 4bc:	8a 30       	cpi	r24, 0x0A	; 10
 4be:	91 05       	cpc	r25, r1
 4c0:	11 f4       	brne	.+4      	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4c2:	c0 9a       	sbi	0x18, 0	; 24
 4c4:	08 95       	ret
 4c6:	8b 30       	cpi	r24, 0x0B	; 11
 4c8:	91 05       	cpc	r25, r1
 4ca:	11 f4       	brne	.+4      	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4cc:	c1 9a       	sbi	0x18, 1	; 24
 4ce:	08 95       	ret
 4d0:	8c 30       	cpi	r24, 0x0C	; 12
 4d2:	91 05       	cpc	r25, r1
 4d4:	11 f4       	brne	.+4      	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4d6:	c2 9a       	sbi	0x18, 2	; 24
 4d8:	08 95       	ret
 4da:	8d 30       	cpi	r24, 0x0D	; 13
 4dc:	91 05       	cpc	r25, r1
 4de:	11 f4       	brne	.+4      	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4e0:	c3 9a       	sbi	0x18, 3	; 24
 4e2:	08 95       	ret
 4e4:	8e 30       	cpi	r24, 0x0E	; 14
 4e6:	91 05       	cpc	r25, r1
 4e8:	11 f4       	brne	.+4      	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4ea:	c4 9a       	sbi	0x18, 4	; 24
 4ec:	08 95       	ret
 4ee:	8f 30       	cpi	r24, 0x0F	; 15
 4f0:	91 05       	cpc	r25, r1
 4f2:	11 f4       	brne	.+4      	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4f4:	c5 9a       	sbi	0x18, 5	; 24
 4f6:	08 95       	ret
 4f8:	80 31       	cpi	r24, 0x10	; 16
 4fa:	91 05       	cpc	r25, r1
 4fc:	11 f4       	brne	.+4      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4fe:	c6 9a       	sbi	0x18, 6	; 24
 500:	08 95       	ret
 502:	81 31       	cpi	r24, 0x11	; 17
 504:	91 05       	cpc	r25, r1
 506:	11 f4       	brne	.+4      	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 508:	c7 9a       	sbi	0x18, 7	; 24
 50a:	08 95       	ret
 50c:	84 31       	cpi	r24, 0x14	; 20
 50e:	91 05       	cpc	r25, r1
 510:	11 f4       	brne	.+4      	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 512:	a8 9a       	sbi	0x15, 0	; 21
 514:	08 95       	ret
 516:	85 31       	cpi	r24, 0x15	; 21
 518:	91 05       	cpc	r25, r1
 51a:	11 f4       	brne	.+4      	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 51c:	a9 9a       	sbi	0x15, 1	; 21
 51e:	08 95       	ret
 520:	86 31       	cpi	r24, 0x16	; 22
 522:	91 05       	cpc	r25, r1
 524:	11 f4       	brne	.+4      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 526:	aa 9a       	sbi	0x15, 2	; 21
 528:	08 95       	ret
 52a:	87 31       	cpi	r24, 0x17	; 23
 52c:	91 05       	cpc	r25, r1
 52e:	11 f4       	brne	.+4      	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 530:	ab 9a       	sbi	0x15, 3	; 21
 532:	08 95       	ret
 534:	88 31       	cpi	r24, 0x18	; 24
 536:	91 05       	cpc	r25, r1
 538:	11 f4       	brne	.+4      	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 53a:	ac 9a       	sbi	0x15, 4	; 21
 53c:	08 95       	ret
 53e:	89 31       	cpi	r24, 0x19	; 25
 540:	91 05       	cpc	r25, r1
 542:	11 f4       	brne	.+4      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 544:	ad 9a       	sbi	0x15, 5	; 21
 546:	08 95       	ret
 548:	8a 31       	cpi	r24, 0x1A	; 26
 54a:	91 05       	cpc	r25, r1
 54c:	11 f4       	brne	.+4      	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 54e:	ae 9a       	sbi	0x15, 6	; 21
 550:	08 95       	ret
 552:	8b 31       	cpi	r24, 0x1B	; 27
 554:	91 05       	cpc	r25, r1
 556:	11 f4       	brne	.+4      	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 558:	af 9a       	sbi	0x15, 7	; 21
 55a:	08 95       	ret
 55c:	8e 31       	cpi	r24, 0x1E	; 30
 55e:	91 05       	cpc	r25, r1
 560:	11 f4       	brne	.+4      	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 562:	90 9a       	sbi	0x12, 0	; 18
 564:	08 95       	ret
 566:	8f 31       	cpi	r24, 0x1F	; 31
 568:	91 05       	cpc	r25, r1
 56a:	11 f4       	brne	.+4      	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 56c:	91 9a       	sbi	0x12, 1	; 18
 56e:	08 95       	ret
 570:	80 32       	cpi	r24, 0x20	; 32
 572:	91 05       	cpc	r25, r1
 574:	11 f4       	brne	.+4      	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 576:	92 9a       	sbi	0x12, 2	; 18
 578:	08 95       	ret
 57a:	81 32       	cpi	r24, 0x21	; 33
 57c:	91 05       	cpc	r25, r1
 57e:	11 f4       	brne	.+4      	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
 580:	93 9a       	sbi	0x12, 3	; 18
 582:	08 95       	ret
 584:	82 32       	cpi	r24, 0x22	; 34
 586:	91 05       	cpc	r25, r1
 588:	11 f4       	brne	.+4      	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 58a:	94 9a       	sbi	0x12, 4	; 18
 58c:	08 95       	ret
 58e:	83 32       	cpi	r24, 0x23	; 35
 590:	91 05       	cpc	r25, r1
 592:	11 f4       	brne	.+4      	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 594:	95 9a       	sbi	0x12, 5	; 18
 596:	08 95       	ret
 598:	84 32       	cpi	r24, 0x24	; 36
 59a:	91 05       	cpc	r25, r1
 59c:	11 f4       	brne	.+4      	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 59e:	96 9a       	sbi	0x12, 6	; 18
 5a0:	08 95       	ret
 5a2:	85 97       	sbiw	r24, 0x25	; 37
 5a4:	09 f4       	brne	.+2      	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 5a6:	97 9a       	sbi	0x12, 7	; 18
 5a8:	08 95       	ret

000005aa <Lcd4_Port>:
 5aa:	cf 93       	push	r28
 5ac:	c8 2f       	mov	r28, r24
 5ae:	80 ff       	sbrs	r24, 0
 5b0:	07 c0       	rjmp	.+14     	; 0x5c0 <Lcd4_Port+0x16>
 5b2:	61 e0       	ldi	r22, 0x01	; 1
 5b4:	70 e0       	ldi	r23, 0x00	; 0
 5b6:	83 e2       	ldi	r24, 0x23	; 35
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	0e 94 95 01 	call	0x32a	; 0x32a <pinChange>
 5be:	06 c0       	rjmp	.+12     	; 0x5cc <Lcd4_Port+0x22>
 5c0:	60 e0       	ldi	r22, 0x00	; 0
 5c2:	70 e0       	ldi	r23, 0x00	; 0
 5c4:	83 e2       	ldi	r24, 0x23	; 35
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	0e 94 95 01 	call	0x32a	; 0x32a <pinChange>
 5cc:	c1 ff       	sbrs	r28, 1
 5ce:	07 c0       	rjmp	.+14     	; 0x5de <Lcd4_Port+0x34>
 5d0:	61 e0       	ldi	r22, 0x01	; 1
 5d2:	70 e0       	ldi	r23, 0x00	; 0
 5d4:	82 e2       	ldi	r24, 0x22	; 34
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	0e 94 95 01 	call	0x32a	; 0x32a <pinChange>
 5dc:	06 c0       	rjmp	.+12     	; 0x5ea <Lcd4_Port+0x40>
 5de:	60 e0       	ldi	r22, 0x00	; 0
 5e0:	70 e0       	ldi	r23, 0x00	; 0
 5e2:	82 e2       	ldi	r24, 0x22	; 34
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	0e 94 95 01 	call	0x32a	; 0x32a <pinChange>
 5ea:	c2 ff       	sbrs	r28, 2
 5ec:	07 c0       	rjmp	.+14     	; 0x5fc <Lcd4_Port+0x52>
 5ee:	61 e0       	ldi	r22, 0x01	; 1
 5f0:	70 e0       	ldi	r23, 0x00	; 0
 5f2:	81 e2       	ldi	r24, 0x21	; 33
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	0e 94 95 01 	call	0x32a	; 0x32a <pinChange>
 5fa:	06 c0       	rjmp	.+12     	; 0x608 <Lcd4_Port+0x5e>
 5fc:	60 e0       	ldi	r22, 0x00	; 0
 5fe:	70 e0       	ldi	r23, 0x00	; 0
 600:	81 e2       	ldi	r24, 0x21	; 33
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	0e 94 95 01 	call	0x32a	; 0x32a <pinChange>
 608:	c3 ff       	sbrs	r28, 3
 60a:	07 c0       	rjmp	.+14     	; 0x61a <Lcd4_Port+0x70>
 60c:	61 e0       	ldi	r22, 0x01	; 1
 60e:	70 e0       	ldi	r23, 0x00	; 0
 610:	80 e2       	ldi	r24, 0x20	; 32
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	0e 94 95 01 	call	0x32a	; 0x32a <pinChange>
 618:	06 c0       	rjmp	.+12     	; 0x626 <Lcd4_Port+0x7c>
 61a:	60 e0       	ldi	r22, 0x00	; 0
 61c:	70 e0       	ldi	r23, 0x00	; 0
 61e:	80 e2       	ldi	r24, 0x20	; 32
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	0e 94 95 01 	call	0x32a	; 0x32a <pinChange>
 626:	cf 91       	pop	r28
 628:	08 95       	ret

0000062a <Lcd4_Cmd>:
 62a:	cf 93       	push	r28
 62c:	c8 2f       	mov	r28, r24
 62e:	60 e0       	ldi	r22, 0x00	; 0
 630:	70 e0       	ldi	r23, 0x00	; 0
 632:	85 e2       	ldi	r24, 0x25	; 37
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	0e 94 95 01 	call	0x32a	; 0x32a <pinChange>
 63a:	8c 2f       	mov	r24, r28
 63c:	0e 94 d5 02 	call	0x5aa	; 0x5aa <Lcd4_Port>
 640:	61 e0       	ldi	r22, 0x01	; 1
 642:	70 e0       	ldi	r23, 0x00	; 0
 644:	84 e2       	ldi	r24, 0x24	; 36
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	0e 94 95 01 	call	0x32a	; 0x32a <pinChange>
 64c:	89 ef       	ldi	r24, 0xF9	; 249
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	01 97       	sbiw	r24, 0x01	; 1
 652:	f1 f7       	brne	.-4      	; 0x650 <Lcd4_Cmd+0x26>
 654:	00 c0       	rjmp	.+0      	; 0x656 <Lcd4_Cmd+0x2c>
 656:	00 00       	nop
 658:	60 e0       	ldi	r22, 0x00	; 0
 65a:	70 e0       	ldi	r23, 0x00	; 0
 65c:	84 e2       	ldi	r24, 0x24	; 36
 65e:	90 e0       	ldi	r25, 0x00	; 0
 660:	0e 94 95 01 	call	0x32a	; 0x32a <pinChange>
 664:	89 ef       	ldi	r24, 0xF9	; 249
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	01 97       	sbiw	r24, 0x01	; 1
 66a:	f1 f7       	brne	.-4      	; 0x668 <Lcd4_Cmd+0x3e>
 66c:	00 c0       	rjmp	.+0      	; 0x66e <Lcd4_Cmd+0x44>
 66e:	00 00       	nop
 670:	cf 91       	pop	r28
 672:	08 95       	ret

00000674 <Lcd4_Clear>:
 674:	80 e0       	ldi	r24, 0x00	; 0
 676:	0e 94 15 03 	call	0x62a	; 0x62a <Lcd4_Cmd>
 67a:	81 e0       	ldi	r24, 0x01	; 1
 67c:	0e 94 15 03 	call	0x62a	; 0x62a <Lcd4_Cmd>
 680:	08 95       	ret

00000682 <Lcd4_Init>:
 682:	80 e0       	ldi	r24, 0x00	; 0
 684:	0e 94 d5 02 	call	0x5aa	; 0x5aa <Lcd4_Port>
 688:	87 e8       	ldi	r24, 0x87	; 135
 68a:	93 e1       	ldi	r25, 0x13	; 19
 68c:	01 97       	sbiw	r24, 0x01	; 1
 68e:	f1 f7       	brne	.-4      	; 0x68c <Lcd4_Init+0xa>
 690:	00 c0       	rjmp	.+0      	; 0x692 <Lcd4_Init+0x10>
 692:	00 00       	nop
 694:	83 e0       	ldi	r24, 0x03	; 3
 696:	0e 94 15 03 	call	0x62a	; 0x62a <Lcd4_Cmd>
 69a:	81 ee       	ldi	r24, 0xE1	; 225
 69c:	94 e0       	ldi	r25, 0x04	; 4
 69e:	01 97       	sbiw	r24, 0x01	; 1
 6a0:	f1 f7       	brne	.-4      	; 0x69e <Lcd4_Init+0x1c>
 6a2:	00 c0       	rjmp	.+0      	; 0x6a4 <Lcd4_Init+0x22>
 6a4:	00 00       	nop
 6a6:	83 e0       	ldi	r24, 0x03	; 3
 6a8:	0e 94 15 03 	call	0x62a	; 0x62a <Lcd4_Cmd>
 6ac:	8d eb       	ldi	r24, 0xBD	; 189
 6ae:	9a e0       	ldi	r25, 0x0A	; 10
 6b0:	01 97       	sbiw	r24, 0x01	; 1
 6b2:	f1 f7       	brne	.-4      	; 0x6b0 <Lcd4_Init+0x2e>
 6b4:	00 c0       	rjmp	.+0      	; 0x6b6 <Lcd4_Init+0x34>
 6b6:	00 00       	nop
 6b8:	83 e0       	ldi	r24, 0x03	; 3
 6ba:	0e 94 15 03 	call	0x62a	; 0x62a <Lcd4_Cmd>
 6be:	82 e0       	ldi	r24, 0x02	; 2
 6c0:	0e 94 15 03 	call	0x62a	; 0x62a <Lcd4_Cmd>
 6c4:	82 e0       	ldi	r24, 0x02	; 2
 6c6:	0e 94 15 03 	call	0x62a	; 0x62a <Lcd4_Cmd>
 6ca:	88 e0       	ldi	r24, 0x08	; 8
 6cc:	0e 94 15 03 	call	0x62a	; 0x62a <Lcd4_Cmd>
 6d0:	80 e0       	ldi	r24, 0x00	; 0
 6d2:	0e 94 15 03 	call	0x62a	; 0x62a <Lcd4_Cmd>
 6d6:	8c e0       	ldi	r24, 0x0C	; 12
 6d8:	0e 94 15 03 	call	0x62a	; 0x62a <Lcd4_Cmd>
 6dc:	80 e0       	ldi	r24, 0x00	; 0
 6de:	0e 94 15 03 	call	0x62a	; 0x62a <Lcd4_Cmd>
 6e2:	86 e0       	ldi	r24, 0x06	; 6
 6e4:	0e 94 15 03 	call	0x62a	; 0x62a <Lcd4_Cmd>
 6e8:	0e 94 3a 03 	call	0x674	; 0x674 <Lcd4_Clear>
 6ec:	08 95       	ret

000006ee <Lcd4_Write_Char>:
 6ee:	cf 93       	push	r28
 6f0:	c8 2f       	mov	r28, r24
 6f2:	61 e0       	ldi	r22, 0x01	; 1
 6f4:	70 e0       	ldi	r23, 0x00	; 0
 6f6:	85 e2       	ldi	r24, 0x25	; 37
 6f8:	90 e0       	ldi	r25, 0x00	; 0
 6fa:	0e 94 95 01 	call	0x32a	; 0x32a <pinChange>
 6fe:	8c 2f       	mov	r24, r28
 700:	82 95       	swap	r24
 702:	8f 70       	andi	r24, 0x0F	; 15
 704:	0e 94 d5 02 	call	0x5aa	; 0x5aa <Lcd4_Port>
 708:	61 e0       	ldi	r22, 0x01	; 1
 70a:	70 e0       	ldi	r23, 0x00	; 0
 70c:	84 e2       	ldi	r24, 0x24	; 36
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	0e 94 95 01 	call	0x32a	; 0x32a <pinChange>
 714:	89 ef       	ldi	r24, 0xF9	; 249
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	01 97       	sbiw	r24, 0x01	; 1
 71a:	f1 f7       	brne	.-4      	; 0x718 <Lcd4_Write_Char+0x2a>
 71c:	00 c0       	rjmp	.+0      	; 0x71e <Lcd4_Write_Char+0x30>
 71e:	00 00       	nop
 720:	60 e0       	ldi	r22, 0x00	; 0
 722:	70 e0       	ldi	r23, 0x00	; 0
 724:	84 e2       	ldi	r24, 0x24	; 36
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	0e 94 95 01 	call	0x32a	; 0x32a <pinChange>
 72c:	89 ef       	ldi	r24, 0xF9	; 249
 72e:	90 e0       	ldi	r25, 0x00	; 0
 730:	01 97       	sbiw	r24, 0x01	; 1
 732:	f1 f7       	brne	.-4      	; 0x730 <Lcd4_Write_Char+0x42>
 734:	00 c0       	rjmp	.+0      	; 0x736 <Lcd4_Write_Char+0x48>
 736:	00 00       	nop
 738:	8c 2f       	mov	r24, r28
 73a:	8f 70       	andi	r24, 0x0F	; 15
 73c:	0e 94 d5 02 	call	0x5aa	; 0x5aa <Lcd4_Port>
 740:	61 e0       	ldi	r22, 0x01	; 1
 742:	70 e0       	ldi	r23, 0x00	; 0
 744:	84 e2       	ldi	r24, 0x24	; 36
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	0e 94 95 01 	call	0x32a	; 0x32a <pinChange>
 74c:	89 ef       	ldi	r24, 0xF9	; 249
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	01 97       	sbiw	r24, 0x01	; 1
 752:	f1 f7       	brne	.-4      	; 0x750 <Lcd4_Write_Char+0x62>
 754:	00 c0       	rjmp	.+0      	; 0x756 <Lcd4_Write_Char+0x68>
 756:	00 00       	nop
 758:	60 e0       	ldi	r22, 0x00	; 0
 75a:	70 e0       	ldi	r23, 0x00	; 0
 75c:	84 e2       	ldi	r24, 0x24	; 36
 75e:	90 e0       	ldi	r25, 0x00	; 0
 760:	0e 94 95 01 	call	0x32a	; 0x32a <pinChange>
 764:	89 ef       	ldi	r24, 0xF9	; 249
 766:	90 e0       	ldi	r25, 0x00	; 0
 768:	01 97       	sbiw	r24, 0x01	; 1
 76a:	f1 f7       	brne	.-4      	; 0x768 <Lcd4_Write_Char+0x7a>
 76c:	00 c0       	rjmp	.+0      	; 0x76e <Lcd4_Write_Char+0x80>
 76e:	00 00       	nop
 770:	cf 91       	pop	r28
 772:	08 95       	ret

00000774 <Lcd4_Write_String>:
 774:	cf 93       	push	r28
 776:	df 93       	push	r29
 778:	ec 01       	movw	r28, r24
 77a:	88 81       	ld	r24, Y
 77c:	88 23       	and	r24, r24
 77e:	31 f0       	breq	.+12     	; 0x78c <Lcd4_Write_String+0x18>
 780:	21 96       	adiw	r28, 0x01	; 1
 782:	0e 94 77 03 	call	0x6ee	; 0x6ee <Lcd4_Write_Char>
 786:	89 91       	ld	r24, Y+
 788:	81 11       	cpse	r24, r1
 78a:	fb cf       	rjmp	.-10     	; 0x782 <Lcd4_Write_String+0xe>
 78c:	df 91       	pop	r29
 78e:	cf 91       	pop	r28
 790:	08 95       	ret

00000792 <Keypad_Init>:
 792:	8a b3       	in	r24, 0x1a	; 26
 794:	83 70       	andi	r24, 0x03	; 3
 796:	8a bb       	out	0x1a, r24	; 26
 798:	8f ef       	ldi	r24, 0xFF	; 255
 79a:	87 bb       	out	0x17, r24	; 23
 79c:	88 bb       	out	0x18, r24	; 24
 79e:	08 95       	ret

000007a0 <Keypad_GetRow>:

int_fast8_t Keypad_GetRow()
{
	int pin = PINA >> 4;
 7a0:	89 b3       	in	r24, 0x19	; 25
 7a2:	82 95       	swap	r24
 7a4:	8f 70       	andi	r24, 0x0F	; 15
 7a6:	48 2f       	mov	r20, r24
 7a8:	50 e0       	ldi	r21, 0x00	; 0
	for(int i=0;i<4;i++)
	{
		if(pin&(1<<i))
 7aa:	80 fd       	sbrc	r24, 0
 7ac:	0c c0       	rjmp	.+24     	; 0x7c6 <Keypad_GetRow+0x26>
 7ae:	81 e0       	ldi	r24, 0x01	; 1
 7b0:	90 e0       	ldi	r25, 0x00	; 0
 7b2:	9a 01       	movw	r18, r20
 7b4:	08 2e       	mov	r0, r24
 7b6:	02 c0       	rjmp	.+4      	; 0x7bc <Keypad_GetRow+0x1c>
 7b8:	35 95       	asr	r19
 7ba:	27 95       	ror	r18
 7bc:	0a 94       	dec	r0
 7be:	e2 f7       	brpl	.-8      	; 0x7b8 <Keypad_GetRow+0x18>
 7c0:	20 ff       	sbrs	r18, 0
 7c2:	04 c0       	rjmp	.+8      	; 0x7cc <Keypad_GetRow+0x2c>
 7c4:	08 95       	ret
}

int_fast8_t Keypad_GetRow()
{
	int pin = PINA >> 4;
	for(int i=0;i<4;i++)
 7c6:	80 e0       	ldi	r24, 0x00	; 0
 7c8:	90 e0       	ldi	r25, 0x00	; 0
	{
		if(pin&(1<<i))
			return i;
 7ca:	08 95       	ret
}

int_fast8_t Keypad_GetRow()
{
	int pin = PINA >> 4;
	for(int i=0;i<4;i++)
 7cc:	01 96       	adiw	r24, 0x01	; 1
 7ce:	84 30       	cpi	r24, 0x04	; 4
 7d0:	91 05       	cpc	r25, r1
 7d2:	79 f7       	brne	.-34     	; 0x7b2 <Keypad_GetRow+0x12>
	{
		if(pin&(1<<i))
			return i;
	}
	// report error
	return -1;
 7d4:	8f ef       	ldi	r24, 0xFF	; 255
}
 7d6:	08 95       	ret

000007d8 <Keypad_GetCol>:

int_fast8_t Keypad_GetCol()
{
	for(int i=0;i<8;i++)
	{
		PORTB = PORTB ^ (1<<i);
 7d8:	98 b3       	in	r25, 0x18	; 24
 7da:	81 e0       	ldi	r24, 0x01	; 1
 7dc:	89 27       	eor	r24, r25
 7de:	88 bb       	out	0x18, r24	; 24
	PORTB = 0xFF;
}

int_fast8_t Keypad_KeyPressed()
{
	return (PINA >> 4);
 7e0:	89 b3       	in	r24, 0x19	; 25
int_fast8_t Keypad_GetCol()
{
	for(int i=0;i<8;i++)
	{
		PORTB = PORTB ^ (1<<i);
		if(!(Keypad_KeyPressed()))
 7e2:	82 95       	swap	r24
 7e4:	8f 70       	andi	r24, 0x0F	; 15
 7e6:	99 f0       	breq	.+38     	; 0x80e <Keypad_GetCol+0x36>
 7e8:	81 e0       	ldi	r24, 0x01	; 1
 7ea:	90 e0       	ldi	r25, 0x00	; 0

int_fast8_t Keypad_GetCol()
{
	for(int i=0;i<8;i++)
	{
		PORTB = PORTB ^ (1<<i);
 7ec:	61 e0       	ldi	r22, 0x01	; 1
 7ee:	70 e0       	ldi	r23, 0x00	; 0
 7f0:	48 b3       	in	r20, 0x18	; 24
 7f2:	9b 01       	movw	r18, r22
 7f4:	08 2e       	mov	r0, r24
 7f6:	02 c0       	rjmp	.+4      	; 0x7fc <Keypad_GetCol+0x24>
 7f8:	22 0f       	add	r18, r18
 7fa:	33 1f       	adc	r19, r19
 7fc:	0a 94       	dec	r0
 7fe:	e2 f7       	brpl	.-8      	; 0x7f8 <Keypad_GetCol+0x20>
 800:	24 27       	eor	r18, r20
 802:	28 bb       	out	0x18, r18	; 24
	PORTB = 0xFF;
}

int_fast8_t Keypad_KeyPressed()
{
	return (PINA >> 4);
 804:	29 b3       	in	r18, 0x19	; 25
int_fast8_t Keypad_GetCol()
{
	for(int i=0;i<8;i++)
	{
		PORTB = PORTB ^ (1<<i);
		if(!(Keypad_KeyPressed()))
 806:	22 95       	swap	r18
 808:	2f 70       	andi	r18, 0x0F	; 15
 80a:	21 f4       	brne	.+8      	; 0x814 <Keypad_GetCol+0x3c>
 80c:	08 95       	ret
	return -1;
}

int_fast8_t Keypad_GetCol()
{
	for(int i=0;i<8;i++)
 80e:	80 e0       	ldi	r24, 0x00	; 0
 810:	90 e0       	ldi	r25, 0x00	; 0
	{
		PORTB = PORTB ^ (1<<i);
		if(!(Keypad_KeyPressed()))
		{
			return i;
 812:	08 95       	ret
	return -1;
}

int_fast8_t Keypad_GetCol()
{
	for(int i=0;i<8;i++)
 814:	01 96       	adiw	r24, 0x01	; 1
 816:	88 30       	cpi	r24, 0x08	; 8
 818:	91 05       	cpc	r25, r1
 81a:	51 f7       	brne	.-44     	; 0x7f0 <Keypad_GetCol+0x18>
		{
			return i;
		}
	}	
	// report error
	return -1;
 81c:	8f ef       	ldi	r24, 0xFF	; 255
}
 81e:	08 95       	ret

00000820 <Keypad_GetKey>:
	lcd_cursor_pos ++;
	return c;
}
*/
int_fast8_t Keypad_GetKey()
{
 820:	cf 93       	push	r28
	int_fast8_t row = Keypad_GetRow();
 822:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <Keypad_GetRow>
 826:	c8 2f       	mov	r28, r24
	int_fast8_t col = Keypad_GetCol();
 828:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <Keypad_GetCol>
	return row * 8 + col;
 82c:	cc 0f       	add	r28, r28
 82e:	cc 0f       	add	r28, r28
 830:	cc 0f       	add	r28, r28
 832:	8c 0f       	add	r24, r28
 834:	cf 91       	pop	r28
 836:	08 95       	ret

00000838 <main>:
#include "lcd_4bit.h"

#include "hc05.h"
#include "keypad8.h"
int main(void)
{
 838:	cf 93       	push	r28
 83a:	df 93       	push	r29
 83c:	cd b7       	in	r28, 0x3d	; 61
 83e:	de b7       	in	r29, 0x3e	; 62
 840:	2a 97       	sbiw	r28, 0x0a	; 10
 842:	0f b6       	in	r0, 0x3f	; 63
 844:	f8 94       	cli
 846:	de bf       	out	0x3e, r29	; 62
 848:	0f be       	out	0x3f, r0	; 63
 84a:	cd bf       	out	0x3d, r28	; 61
	
	
	
	HC05_Init_Data_Mode();
 84c:	0e 94 49 00 	call	0x92	; 0x92 <HC05_Init_Data_Mode>
	
	//////////////////////////////////////////////////////////////////////////
	//LCD 4 bit
	DDRD = DDRD | 0b11111100;
 850:	81 b3       	in	r24, 0x11	; 17
 852:	8c 6f       	ori	r24, 0xFC	; 252
 854:	81 bb       	out	0x11, r24	; 17
	Lcd4_Init();
 856:	0e 94 41 03 	call	0x682	; 0x682 <Lcd4_Init>
	Lcd4_Set_Cursor(0,0);
	Lcd4_Write_String("etai jinish");
 85a:	85 e6       	ldi	r24, 0x65	; 101
 85c:	90 e0       	ldi	r25, 0x00	; 0
 85e:	0e 94 ba 03 	call	0x774	; 0x774 <Lcd4_Write_String>
	//////////////////////////////////////////////////////////////////////////
	
	//////////////////////////////////////////////////////////////////////////
	//lcd with i2c
	lcd_init(LCD_ON_DISPLAY);
 862:	82 e0       	ldi	r24, 0x02	; 2
 864:	0e 94 20 01 	call	0x240	; 0x240 <lcd_init>
	lcd_backlight(0);
 868:	80 e0       	ldi	r24, 0x00	; 0
 86a:	0e 94 91 01 	call	0x322	; 0x322 <lcd_backlight>
 86e:	2f e9       	ldi	r18, 0x9F	; 159
 870:	86 e8       	ldi	r24, 0x86	; 134
 872:	91 e0       	ldi	r25, 0x01	; 1
 874:	21 50       	subi	r18, 0x01	; 1
 876:	80 40       	sbci	r24, 0x00	; 0
 878:	90 40       	sbci	r25, 0x00	; 0
 87a:	e1 f7       	brne	.-8      	; 0x874 <__stack+0x15>
 87c:	00 c0       	rjmp	.+0      	; 0x87e <__stack+0x1f>
 87e:	00 00       	nop
	_delay_ms(500);
	lcd_backlight(1);
 880:	81 e0       	ldi	r24, 0x01	; 1
 882:	0e 94 91 01 	call	0x322	; 0x322 <lcd_backlight>
 886:	2f e9       	ldi	r18, 0x9F	; 159
 888:	86 e8       	ldi	r24, 0x86	; 134
 88a:	91 e0       	ldi	r25, 0x01	; 1
 88c:	21 50       	subi	r18, 0x01	; 1
 88e:	80 40       	sbci	r24, 0x00	; 0
 890:	90 40       	sbci	r25, 0x00	; 0
 892:	e1 f7       	brne	.-8      	; 0x88c <__stack+0x2d>
 894:	00 c0       	rjmp	.+0      	; 0x896 <__stack+0x37>
 896:	00 00       	nop
	_delay_ms(500);
	
	lcd_clrscr();
 898:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_clrscr>
	lcd_gotoxy(0, 0);
 89c:	60 e0       	ldi	r22, 0x00	; 0
 89e:	80 e0       	ldi	r24, 0x00	; 0
 8a0:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_gotoxy>
	lcd_puts("ho re vai");
 8a4:	81 e7       	ldi	r24, 0x71	; 113
 8a6:	90 e0       	ldi	r25, 0x00	; 0
 8a8:	0e 94 11 01 	call	0x222	; 0x222 <lcd_puts>
	//////////////////////////////////////////////////////////////////////////

	Keypad_Init();
 8ac:	0e 94 c9 03 	call	0x792	; 0x792 <Keypad_Init>
	{
		if(Keypad_KeyPressed())
		{
			int_fast8_t x = Keypad_GetKey();
			char temp[10];
			sprintf(temp , "key: %d ",x);
 8b0:	0f 2e       	mov	r0, r31
 8b2:	fb e7       	ldi	r31, 0x7B	; 123
 8b4:	ef 2e       	mov	r14, r31
 8b6:	f0 e0       	ldi	r31, 0x00	; 0
 8b8:	ff 2e       	mov	r15, r31
 8ba:	f0 2d       	mov	r31, r0
 8bc:	8e 01       	movw	r16, r28
 8be:	0f 5f       	subi	r16, 0xFF	; 255
 8c0:	1f 4f       	sbci	r17, 0xFF	; 255
	PORTB = 0xFF;
}

int_fast8_t Keypad_KeyPressed()
{
	return (PINA >> 4);
 8c2:	89 b3       	in	r24, 0x19	; 25

	Keypad_Init();
	
	while (1)
	{
		if(Keypad_KeyPressed())
 8c4:	82 95       	swap	r24
 8c6:	8f 70       	andi	r24, 0x0F	; 15
 8c8:	e1 f3       	breq	.-8      	; 0x8c2 <__stack+0x63>
		{
			int_fast8_t x = Keypad_GetKey();
 8ca:	0e 94 10 04 	call	0x820	; 0x820 <Keypad_GetKey>
			char temp[10];
			sprintf(temp , "key: %d ",x);
 8ce:	28 2f       	mov	r18, r24
 8d0:	08 2e       	mov	r0, r24
 8d2:	00 0c       	add	r0, r0
 8d4:	33 0b       	sbc	r19, r19
 8d6:	3f 93       	push	r19
 8d8:	8f 93       	push	r24
 8da:	ff 92       	push	r15
 8dc:	ef 92       	push	r14
 8de:	1f 93       	push	r17
 8e0:	0f 93       	push	r16
 8e2:	0e 94 b6 04 	call	0x96c	; 0x96c <sprintf>
			Lcd4_Clear();
 8e6:	0e 94 3a 03 	call	0x674	; 0x674 <Lcd4_Clear>
			Lcd4_Set_Cursor(0,0);
			Lcd4_Write_String(temp);
 8ea:	c8 01       	movw	r24, r16
 8ec:	0e 94 ba 03 	call	0x774	; 0x774 <Lcd4_Write_String>
			Keypad_Init();
 8f0:	0e 94 c9 03 	call	0x792	; 0x792 <Keypad_Init>
 8f4:	0f 90       	pop	r0
 8f6:	0f 90       	pop	r0
 8f8:	0f 90       	pop	r0
 8fa:	0f 90       	pop	r0
 8fc:	0f 90       	pop	r0
 8fe:	0f 90       	pop	r0
 900:	e0 cf       	rjmp	.-64     	; 0x8c2 <__stack+0x63>

00000902 <i2c_init>:
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address)
{
    return i2c_start( address );

}/* i2c_rep_start */
 902:	11 b8       	out	0x01, r1	; 1
 904:	8c e0       	ldi	r24, 0x0C	; 12
 906:	80 b9       	out	0x00, r24	; 0
 908:	08 95       	ret

0000090a <i2c_start>:
 90a:	94 ea       	ldi	r25, 0xA4	; 164
 90c:	96 bf       	out	0x36, r25	; 54
 90e:	06 b6       	in	r0, 0x36	; 54
 910:	07 fe       	sbrs	r0, 7
 912:	fd cf       	rjmp	.-6      	; 0x90e <i2c_start+0x4>
 914:	91 b1       	in	r25, 0x01	; 1
 916:	98 7f       	andi	r25, 0xF8	; 248
 918:	98 30       	cpi	r25, 0x08	; 8
 91a:	11 f0       	breq	.+4      	; 0x920 <i2c_start+0x16>
 91c:	90 31       	cpi	r25, 0x10	; 16
 91e:	79 f4       	brne	.+30     	; 0x93e <i2c_start+0x34>
 920:	83 b9       	out	0x03, r24	; 3
 922:	84 e8       	ldi	r24, 0x84	; 132
 924:	86 bf       	out	0x36, r24	; 54
 926:	06 b6       	in	r0, 0x36	; 54
 928:	07 fe       	sbrs	r0, 7
 92a:	fd cf       	rjmp	.-6      	; 0x926 <i2c_start+0x1c>
 92c:	91 b1       	in	r25, 0x01	; 1
 92e:	98 7f       	andi	r25, 0xF8	; 248
 930:	98 31       	cpi	r25, 0x18	; 24
 932:	39 f0       	breq	.+14     	; 0x942 <i2c_start+0x38>
 934:	81 e0       	ldi	r24, 0x01	; 1
 936:	90 34       	cpi	r25, 0x40	; 64
 938:	29 f4       	brne	.+10     	; 0x944 <i2c_start+0x3a>
 93a:	80 e0       	ldi	r24, 0x00	; 0
 93c:	08 95       	ret
 93e:	81 e0       	ldi	r24, 0x01	; 1
 940:	08 95       	ret
 942:	80 e0       	ldi	r24, 0x00	; 0
 944:	08 95       	ret

00000946 <i2c_stop>:
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void)
{
    /* send stop condition */
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
 946:	84 e9       	ldi	r24, 0x94	; 148
 948:	86 bf       	out	0x36, r24	; 54
	
	// wait until stop condition is executed and bus released
	while(TWCR & (1<<TWSTO));
 94a:	06 b6       	in	r0, 0x36	; 54
 94c:	04 fc       	sbrc	r0, 4
 94e:	fd cf       	rjmp	.-6      	; 0x94a <i2c_stop+0x4>

}/* i2c_stop */
 950:	08 95       	ret

00000952 <i2c_write>:
unsigned char i2c_write( unsigned char data )
{	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR = data;
 952:	83 b9       	out	0x03, r24	; 3
	TWCR = (1<<TWINT) | (1<<TWEN);
 954:	84 e8       	ldi	r24, 0x84	; 132
 956:	86 bf       	out	0x36, r24	; 54

	// wait until transmission completed
	while(!(TWCR & (1<<TWINT)));
 958:	06 b6       	in	r0, 0x36	; 54
 95a:	07 fe       	sbrs	r0, 7
 95c:	fd cf       	rjmp	.-6      	; 0x958 <i2c_write+0x6>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
 95e:	91 b1       	in	r25, 0x01	; 1
 960:	98 7f       	andi	r25, 0xF8	; 248
 962:	81 e0       	ldi	r24, 0x01	; 1
 964:	98 32       	cpi	r25, 0x28	; 40
 966:	09 f4       	brne	.+2      	; 0x96a <i2c_write+0x18>
 968:	80 e0       	ldi	r24, 0x00	; 0
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}/* i2c_write */
 96a:	08 95       	ret

0000096c <sprintf>:
 96c:	ae e0       	ldi	r26, 0x0E	; 14
 96e:	b0 e0       	ldi	r27, 0x00	; 0
 970:	ec eb       	ldi	r30, 0xBC	; 188
 972:	f4 e0       	ldi	r31, 0x04	; 4
 974:	0c 94 77 07 	jmp	0xeee	; 0xeee <__prologue_saves__+0x1c>
 978:	0d 89       	ldd	r16, Y+21	; 0x15
 97a:	1e 89       	ldd	r17, Y+22	; 0x16
 97c:	86 e0       	ldi	r24, 0x06	; 6
 97e:	8c 83       	std	Y+4, r24	; 0x04
 980:	1a 83       	std	Y+2, r17	; 0x02
 982:	09 83       	std	Y+1, r16	; 0x01
 984:	8f ef       	ldi	r24, 0xFF	; 255
 986:	9f e7       	ldi	r25, 0x7F	; 127
 988:	9e 83       	std	Y+6, r25	; 0x06
 98a:	8d 83       	std	Y+5, r24	; 0x05
 98c:	ae 01       	movw	r20, r28
 98e:	47 5e       	subi	r20, 0xE7	; 231
 990:	5f 4f       	sbci	r21, 0xFF	; 255
 992:	6f 89       	ldd	r22, Y+23	; 0x17
 994:	78 8d       	ldd	r23, Y+24	; 0x18
 996:	ce 01       	movw	r24, r28
 998:	01 96       	adiw	r24, 0x01	; 1
 99a:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <vfprintf>
 99e:	ef 81       	ldd	r30, Y+7	; 0x07
 9a0:	f8 85       	ldd	r31, Y+8	; 0x08
 9a2:	e0 0f       	add	r30, r16
 9a4:	f1 1f       	adc	r31, r17
 9a6:	10 82       	st	Z, r1
 9a8:	2e 96       	adiw	r28, 0x0e	; 14
 9aa:	e4 e0       	ldi	r30, 0x04	; 4
 9ac:	0c 94 93 07 	jmp	0xf26	; 0xf26 <__epilogue_restores__+0x1c>

000009b0 <vfprintf>:
 9b0:	ab e0       	ldi	r26, 0x0B	; 11
 9b2:	b0 e0       	ldi	r27, 0x00	; 0
 9b4:	ee ed       	ldi	r30, 0xDE	; 222
 9b6:	f4 e0       	ldi	r31, 0x04	; 4
 9b8:	0c 94 69 07 	jmp	0xed2	; 0xed2 <__prologue_saves__>
 9bc:	6c 01       	movw	r12, r24
 9be:	7b 01       	movw	r14, r22
 9c0:	8a 01       	movw	r16, r20
 9c2:	fc 01       	movw	r30, r24
 9c4:	17 82       	std	Z+7, r1	; 0x07
 9c6:	16 82       	std	Z+6, r1	; 0x06
 9c8:	83 81       	ldd	r24, Z+3	; 0x03
 9ca:	81 ff       	sbrs	r24, 1
 9cc:	cc c1       	rjmp	.+920    	; 0xd66 <vfprintf+0x3b6>
 9ce:	ce 01       	movw	r24, r28
 9d0:	01 96       	adiw	r24, 0x01	; 1
 9d2:	3c 01       	movw	r6, r24
 9d4:	f6 01       	movw	r30, r12
 9d6:	93 81       	ldd	r25, Z+3	; 0x03
 9d8:	f7 01       	movw	r30, r14
 9da:	93 fd       	sbrc	r25, 3
 9dc:	85 91       	lpm	r24, Z+
 9de:	93 ff       	sbrs	r25, 3
 9e0:	81 91       	ld	r24, Z+
 9e2:	7f 01       	movw	r14, r30
 9e4:	88 23       	and	r24, r24
 9e6:	09 f4       	brne	.+2      	; 0x9ea <vfprintf+0x3a>
 9e8:	ba c1       	rjmp	.+884    	; 0xd5e <vfprintf+0x3ae>
 9ea:	85 32       	cpi	r24, 0x25	; 37
 9ec:	39 f4       	brne	.+14     	; 0x9fc <vfprintf+0x4c>
 9ee:	93 fd       	sbrc	r25, 3
 9f0:	85 91       	lpm	r24, Z+
 9f2:	93 ff       	sbrs	r25, 3
 9f4:	81 91       	ld	r24, Z+
 9f6:	7f 01       	movw	r14, r30
 9f8:	85 32       	cpi	r24, 0x25	; 37
 9fa:	29 f4       	brne	.+10     	; 0xa06 <vfprintf+0x56>
 9fc:	b6 01       	movw	r22, r12
 9fe:	90 e0       	ldi	r25, 0x00	; 0
 a00:	0e 94 cf 06 	call	0xd9e	; 0xd9e <fputc>
 a04:	e7 cf       	rjmp	.-50     	; 0x9d4 <vfprintf+0x24>
 a06:	91 2c       	mov	r9, r1
 a08:	21 2c       	mov	r2, r1
 a0a:	31 2c       	mov	r3, r1
 a0c:	ff e1       	ldi	r31, 0x1F	; 31
 a0e:	f3 15       	cp	r31, r3
 a10:	d8 f0       	brcs	.+54     	; 0xa48 <vfprintf+0x98>
 a12:	8b 32       	cpi	r24, 0x2B	; 43
 a14:	79 f0       	breq	.+30     	; 0xa34 <vfprintf+0x84>
 a16:	38 f4       	brcc	.+14     	; 0xa26 <vfprintf+0x76>
 a18:	80 32       	cpi	r24, 0x20	; 32
 a1a:	79 f0       	breq	.+30     	; 0xa3a <vfprintf+0x8a>
 a1c:	83 32       	cpi	r24, 0x23	; 35
 a1e:	a1 f4       	brne	.+40     	; 0xa48 <vfprintf+0x98>
 a20:	23 2d       	mov	r18, r3
 a22:	20 61       	ori	r18, 0x10	; 16
 a24:	1d c0       	rjmp	.+58     	; 0xa60 <vfprintf+0xb0>
 a26:	8d 32       	cpi	r24, 0x2D	; 45
 a28:	61 f0       	breq	.+24     	; 0xa42 <vfprintf+0x92>
 a2a:	80 33       	cpi	r24, 0x30	; 48
 a2c:	69 f4       	brne	.+26     	; 0xa48 <vfprintf+0x98>
 a2e:	23 2d       	mov	r18, r3
 a30:	21 60       	ori	r18, 0x01	; 1
 a32:	16 c0       	rjmp	.+44     	; 0xa60 <vfprintf+0xb0>
 a34:	83 2d       	mov	r24, r3
 a36:	82 60       	ori	r24, 0x02	; 2
 a38:	38 2e       	mov	r3, r24
 a3a:	e3 2d       	mov	r30, r3
 a3c:	e4 60       	ori	r30, 0x04	; 4
 a3e:	3e 2e       	mov	r3, r30
 a40:	2a c0       	rjmp	.+84     	; 0xa96 <vfprintf+0xe6>
 a42:	f3 2d       	mov	r31, r3
 a44:	f8 60       	ori	r31, 0x08	; 8
 a46:	1d c0       	rjmp	.+58     	; 0xa82 <vfprintf+0xd2>
 a48:	37 fc       	sbrc	r3, 7
 a4a:	2d c0       	rjmp	.+90     	; 0xaa6 <vfprintf+0xf6>
 a4c:	20 ed       	ldi	r18, 0xD0	; 208
 a4e:	28 0f       	add	r18, r24
 a50:	2a 30       	cpi	r18, 0x0A	; 10
 a52:	40 f0       	brcs	.+16     	; 0xa64 <vfprintf+0xb4>
 a54:	8e 32       	cpi	r24, 0x2E	; 46
 a56:	b9 f4       	brne	.+46     	; 0xa86 <vfprintf+0xd6>
 a58:	36 fc       	sbrc	r3, 6
 a5a:	81 c1       	rjmp	.+770    	; 0xd5e <vfprintf+0x3ae>
 a5c:	23 2d       	mov	r18, r3
 a5e:	20 64       	ori	r18, 0x40	; 64
 a60:	32 2e       	mov	r3, r18
 a62:	19 c0       	rjmp	.+50     	; 0xa96 <vfprintf+0xe6>
 a64:	36 fe       	sbrs	r3, 6
 a66:	06 c0       	rjmp	.+12     	; 0xa74 <vfprintf+0xc4>
 a68:	8a e0       	ldi	r24, 0x0A	; 10
 a6a:	98 9e       	mul	r9, r24
 a6c:	20 0d       	add	r18, r0
 a6e:	11 24       	eor	r1, r1
 a70:	92 2e       	mov	r9, r18
 a72:	11 c0       	rjmp	.+34     	; 0xa96 <vfprintf+0xe6>
 a74:	ea e0       	ldi	r30, 0x0A	; 10
 a76:	2e 9e       	mul	r2, r30
 a78:	20 0d       	add	r18, r0
 a7a:	11 24       	eor	r1, r1
 a7c:	22 2e       	mov	r2, r18
 a7e:	f3 2d       	mov	r31, r3
 a80:	f0 62       	ori	r31, 0x20	; 32
 a82:	3f 2e       	mov	r3, r31
 a84:	08 c0       	rjmp	.+16     	; 0xa96 <vfprintf+0xe6>
 a86:	8c 36       	cpi	r24, 0x6C	; 108
 a88:	21 f4       	brne	.+8      	; 0xa92 <vfprintf+0xe2>
 a8a:	83 2d       	mov	r24, r3
 a8c:	80 68       	ori	r24, 0x80	; 128
 a8e:	38 2e       	mov	r3, r24
 a90:	02 c0       	rjmp	.+4      	; 0xa96 <vfprintf+0xe6>
 a92:	88 36       	cpi	r24, 0x68	; 104
 a94:	41 f4       	brne	.+16     	; 0xaa6 <vfprintf+0xf6>
 a96:	f7 01       	movw	r30, r14
 a98:	93 fd       	sbrc	r25, 3
 a9a:	85 91       	lpm	r24, Z+
 a9c:	93 ff       	sbrs	r25, 3
 a9e:	81 91       	ld	r24, Z+
 aa0:	7f 01       	movw	r14, r30
 aa2:	81 11       	cpse	r24, r1
 aa4:	b3 cf       	rjmp	.-154    	; 0xa0c <vfprintf+0x5c>
 aa6:	98 2f       	mov	r25, r24
 aa8:	9f 7d       	andi	r25, 0xDF	; 223
 aaa:	95 54       	subi	r25, 0x45	; 69
 aac:	93 30       	cpi	r25, 0x03	; 3
 aae:	28 f4       	brcc	.+10     	; 0xaba <vfprintf+0x10a>
 ab0:	0c 5f       	subi	r16, 0xFC	; 252
 ab2:	1f 4f       	sbci	r17, 0xFF	; 255
 ab4:	9f e3       	ldi	r25, 0x3F	; 63
 ab6:	99 83       	std	Y+1, r25	; 0x01
 ab8:	0d c0       	rjmp	.+26     	; 0xad4 <vfprintf+0x124>
 aba:	83 36       	cpi	r24, 0x63	; 99
 abc:	31 f0       	breq	.+12     	; 0xaca <vfprintf+0x11a>
 abe:	83 37       	cpi	r24, 0x73	; 115
 ac0:	71 f0       	breq	.+28     	; 0xade <vfprintf+0x12e>
 ac2:	83 35       	cpi	r24, 0x53	; 83
 ac4:	09 f0       	breq	.+2      	; 0xac8 <vfprintf+0x118>
 ac6:	59 c0       	rjmp	.+178    	; 0xb7a <vfprintf+0x1ca>
 ac8:	21 c0       	rjmp	.+66     	; 0xb0c <vfprintf+0x15c>
 aca:	f8 01       	movw	r30, r16
 acc:	80 81       	ld	r24, Z
 ace:	89 83       	std	Y+1, r24	; 0x01
 ad0:	0e 5f       	subi	r16, 0xFE	; 254
 ad2:	1f 4f       	sbci	r17, 0xFF	; 255
 ad4:	88 24       	eor	r8, r8
 ad6:	83 94       	inc	r8
 ad8:	91 2c       	mov	r9, r1
 ada:	53 01       	movw	r10, r6
 adc:	13 c0       	rjmp	.+38     	; 0xb04 <vfprintf+0x154>
 ade:	28 01       	movw	r4, r16
 ae0:	f2 e0       	ldi	r31, 0x02	; 2
 ae2:	4f 0e       	add	r4, r31
 ae4:	51 1c       	adc	r5, r1
 ae6:	f8 01       	movw	r30, r16
 ae8:	a0 80       	ld	r10, Z
 aea:	b1 80       	ldd	r11, Z+1	; 0x01
 aec:	36 fe       	sbrs	r3, 6
 aee:	03 c0       	rjmp	.+6      	; 0xaf6 <vfprintf+0x146>
 af0:	69 2d       	mov	r22, r9
 af2:	70 e0       	ldi	r23, 0x00	; 0
 af4:	02 c0       	rjmp	.+4      	; 0xafa <vfprintf+0x14a>
 af6:	6f ef       	ldi	r22, 0xFF	; 255
 af8:	7f ef       	ldi	r23, 0xFF	; 255
 afa:	c5 01       	movw	r24, r10
 afc:	0e 94 c4 06 	call	0xd88	; 0xd88 <strnlen>
 b00:	4c 01       	movw	r8, r24
 b02:	82 01       	movw	r16, r4
 b04:	f3 2d       	mov	r31, r3
 b06:	ff 77       	andi	r31, 0x7F	; 127
 b08:	3f 2e       	mov	r3, r31
 b0a:	16 c0       	rjmp	.+44     	; 0xb38 <vfprintf+0x188>
 b0c:	28 01       	movw	r4, r16
 b0e:	22 e0       	ldi	r18, 0x02	; 2
 b10:	42 0e       	add	r4, r18
 b12:	51 1c       	adc	r5, r1
 b14:	f8 01       	movw	r30, r16
 b16:	a0 80       	ld	r10, Z
 b18:	b1 80       	ldd	r11, Z+1	; 0x01
 b1a:	36 fe       	sbrs	r3, 6
 b1c:	03 c0       	rjmp	.+6      	; 0xb24 <vfprintf+0x174>
 b1e:	69 2d       	mov	r22, r9
 b20:	70 e0       	ldi	r23, 0x00	; 0
 b22:	02 c0       	rjmp	.+4      	; 0xb28 <vfprintf+0x178>
 b24:	6f ef       	ldi	r22, 0xFF	; 255
 b26:	7f ef       	ldi	r23, 0xFF	; 255
 b28:	c5 01       	movw	r24, r10
 b2a:	0e 94 b9 06 	call	0xd72	; 0xd72 <strnlen_P>
 b2e:	4c 01       	movw	r8, r24
 b30:	f3 2d       	mov	r31, r3
 b32:	f0 68       	ori	r31, 0x80	; 128
 b34:	3f 2e       	mov	r3, r31
 b36:	82 01       	movw	r16, r4
 b38:	33 fc       	sbrc	r3, 3
 b3a:	1b c0       	rjmp	.+54     	; 0xb72 <vfprintf+0x1c2>
 b3c:	82 2d       	mov	r24, r2
 b3e:	90 e0       	ldi	r25, 0x00	; 0
 b40:	88 16       	cp	r8, r24
 b42:	99 06       	cpc	r9, r25
 b44:	b0 f4       	brcc	.+44     	; 0xb72 <vfprintf+0x1c2>
 b46:	b6 01       	movw	r22, r12
 b48:	80 e2       	ldi	r24, 0x20	; 32
 b4a:	90 e0       	ldi	r25, 0x00	; 0
 b4c:	0e 94 cf 06 	call	0xd9e	; 0xd9e <fputc>
 b50:	2a 94       	dec	r2
 b52:	f4 cf       	rjmp	.-24     	; 0xb3c <vfprintf+0x18c>
 b54:	f5 01       	movw	r30, r10
 b56:	37 fc       	sbrc	r3, 7
 b58:	85 91       	lpm	r24, Z+
 b5a:	37 fe       	sbrs	r3, 7
 b5c:	81 91       	ld	r24, Z+
 b5e:	5f 01       	movw	r10, r30
 b60:	b6 01       	movw	r22, r12
 b62:	90 e0       	ldi	r25, 0x00	; 0
 b64:	0e 94 cf 06 	call	0xd9e	; 0xd9e <fputc>
 b68:	21 10       	cpse	r2, r1
 b6a:	2a 94       	dec	r2
 b6c:	21 e0       	ldi	r18, 0x01	; 1
 b6e:	82 1a       	sub	r8, r18
 b70:	91 08       	sbc	r9, r1
 b72:	81 14       	cp	r8, r1
 b74:	91 04       	cpc	r9, r1
 b76:	71 f7       	brne	.-36     	; 0xb54 <vfprintf+0x1a4>
 b78:	e8 c0       	rjmp	.+464    	; 0xd4a <vfprintf+0x39a>
 b7a:	84 36       	cpi	r24, 0x64	; 100
 b7c:	11 f0       	breq	.+4      	; 0xb82 <vfprintf+0x1d2>
 b7e:	89 36       	cpi	r24, 0x69	; 105
 b80:	41 f5       	brne	.+80     	; 0xbd2 <vfprintf+0x222>
 b82:	f8 01       	movw	r30, r16
 b84:	37 fe       	sbrs	r3, 7
 b86:	07 c0       	rjmp	.+14     	; 0xb96 <vfprintf+0x1e6>
 b88:	60 81       	ld	r22, Z
 b8a:	71 81       	ldd	r23, Z+1	; 0x01
 b8c:	82 81       	ldd	r24, Z+2	; 0x02
 b8e:	93 81       	ldd	r25, Z+3	; 0x03
 b90:	0c 5f       	subi	r16, 0xFC	; 252
 b92:	1f 4f       	sbci	r17, 0xFF	; 255
 b94:	08 c0       	rjmp	.+16     	; 0xba6 <vfprintf+0x1f6>
 b96:	60 81       	ld	r22, Z
 b98:	71 81       	ldd	r23, Z+1	; 0x01
 b9a:	07 2e       	mov	r0, r23
 b9c:	00 0c       	add	r0, r0
 b9e:	88 0b       	sbc	r24, r24
 ba0:	99 0b       	sbc	r25, r25
 ba2:	0e 5f       	subi	r16, 0xFE	; 254
 ba4:	1f 4f       	sbci	r17, 0xFF	; 255
 ba6:	f3 2d       	mov	r31, r3
 ba8:	ff 76       	andi	r31, 0x6F	; 111
 baa:	3f 2e       	mov	r3, r31
 bac:	97 ff       	sbrs	r25, 7
 bae:	09 c0       	rjmp	.+18     	; 0xbc2 <vfprintf+0x212>
 bb0:	90 95       	com	r25
 bb2:	80 95       	com	r24
 bb4:	70 95       	com	r23
 bb6:	61 95       	neg	r22
 bb8:	7f 4f       	sbci	r23, 0xFF	; 255
 bba:	8f 4f       	sbci	r24, 0xFF	; 255
 bbc:	9f 4f       	sbci	r25, 0xFF	; 255
 bbe:	f0 68       	ori	r31, 0x80	; 128
 bc0:	3f 2e       	mov	r3, r31
 bc2:	2a e0       	ldi	r18, 0x0A	; 10
 bc4:	30 e0       	ldi	r19, 0x00	; 0
 bc6:	a3 01       	movw	r20, r6
 bc8:	0e 94 0b 07 	call	0xe16	; 0xe16 <__ultoa_invert>
 bcc:	88 2e       	mov	r8, r24
 bce:	86 18       	sub	r8, r6
 bd0:	45 c0       	rjmp	.+138    	; 0xc5c <vfprintf+0x2ac>
 bd2:	85 37       	cpi	r24, 0x75	; 117
 bd4:	31 f4       	brne	.+12     	; 0xbe2 <vfprintf+0x232>
 bd6:	23 2d       	mov	r18, r3
 bd8:	2f 7e       	andi	r18, 0xEF	; 239
 bda:	b2 2e       	mov	r11, r18
 bdc:	2a e0       	ldi	r18, 0x0A	; 10
 bde:	30 e0       	ldi	r19, 0x00	; 0
 be0:	25 c0       	rjmp	.+74     	; 0xc2c <vfprintf+0x27c>
 be2:	93 2d       	mov	r25, r3
 be4:	99 7f       	andi	r25, 0xF9	; 249
 be6:	b9 2e       	mov	r11, r25
 be8:	8f 36       	cpi	r24, 0x6F	; 111
 bea:	c1 f0       	breq	.+48     	; 0xc1c <vfprintf+0x26c>
 bec:	18 f4       	brcc	.+6      	; 0xbf4 <vfprintf+0x244>
 bee:	88 35       	cpi	r24, 0x58	; 88
 bf0:	79 f0       	breq	.+30     	; 0xc10 <vfprintf+0x260>
 bf2:	b5 c0       	rjmp	.+362    	; 0xd5e <vfprintf+0x3ae>
 bf4:	80 37       	cpi	r24, 0x70	; 112
 bf6:	19 f0       	breq	.+6      	; 0xbfe <vfprintf+0x24e>
 bf8:	88 37       	cpi	r24, 0x78	; 120
 bfa:	21 f0       	breq	.+8      	; 0xc04 <vfprintf+0x254>
 bfc:	b0 c0       	rjmp	.+352    	; 0xd5e <vfprintf+0x3ae>
 bfe:	e9 2f       	mov	r30, r25
 c00:	e0 61       	ori	r30, 0x10	; 16
 c02:	be 2e       	mov	r11, r30
 c04:	b4 fe       	sbrs	r11, 4
 c06:	0d c0       	rjmp	.+26     	; 0xc22 <vfprintf+0x272>
 c08:	fb 2d       	mov	r31, r11
 c0a:	f4 60       	ori	r31, 0x04	; 4
 c0c:	bf 2e       	mov	r11, r31
 c0e:	09 c0       	rjmp	.+18     	; 0xc22 <vfprintf+0x272>
 c10:	34 fe       	sbrs	r3, 4
 c12:	0a c0       	rjmp	.+20     	; 0xc28 <vfprintf+0x278>
 c14:	29 2f       	mov	r18, r25
 c16:	26 60       	ori	r18, 0x06	; 6
 c18:	b2 2e       	mov	r11, r18
 c1a:	06 c0       	rjmp	.+12     	; 0xc28 <vfprintf+0x278>
 c1c:	28 e0       	ldi	r18, 0x08	; 8
 c1e:	30 e0       	ldi	r19, 0x00	; 0
 c20:	05 c0       	rjmp	.+10     	; 0xc2c <vfprintf+0x27c>
 c22:	20 e1       	ldi	r18, 0x10	; 16
 c24:	30 e0       	ldi	r19, 0x00	; 0
 c26:	02 c0       	rjmp	.+4      	; 0xc2c <vfprintf+0x27c>
 c28:	20 e1       	ldi	r18, 0x10	; 16
 c2a:	32 e0       	ldi	r19, 0x02	; 2
 c2c:	f8 01       	movw	r30, r16
 c2e:	b7 fe       	sbrs	r11, 7
 c30:	07 c0       	rjmp	.+14     	; 0xc40 <vfprintf+0x290>
 c32:	60 81       	ld	r22, Z
 c34:	71 81       	ldd	r23, Z+1	; 0x01
 c36:	82 81       	ldd	r24, Z+2	; 0x02
 c38:	93 81       	ldd	r25, Z+3	; 0x03
 c3a:	0c 5f       	subi	r16, 0xFC	; 252
 c3c:	1f 4f       	sbci	r17, 0xFF	; 255
 c3e:	06 c0       	rjmp	.+12     	; 0xc4c <vfprintf+0x29c>
 c40:	60 81       	ld	r22, Z
 c42:	71 81       	ldd	r23, Z+1	; 0x01
 c44:	80 e0       	ldi	r24, 0x00	; 0
 c46:	90 e0       	ldi	r25, 0x00	; 0
 c48:	0e 5f       	subi	r16, 0xFE	; 254
 c4a:	1f 4f       	sbci	r17, 0xFF	; 255
 c4c:	a3 01       	movw	r20, r6
 c4e:	0e 94 0b 07 	call	0xe16	; 0xe16 <__ultoa_invert>
 c52:	88 2e       	mov	r8, r24
 c54:	86 18       	sub	r8, r6
 c56:	fb 2d       	mov	r31, r11
 c58:	ff 77       	andi	r31, 0x7F	; 127
 c5a:	3f 2e       	mov	r3, r31
 c5c:	36 fe       	sbrs	r3, 6
 c5e:	0d c0       	rjmp	.+26     	; 0xc7a <vfprintf+0x2ca>
 c60:	23 2d       	mov	r18, r3
 c62:	2e 7f       	andi	r18, 0xFE	; 254
 c64:	a2 2e       	mov	r10, r18
 c66:	89 14       	cp	r8, r9
 c68:	58 f4       	brcc	.+22     	; 0xc80 <vfprintf+0x2d0>
 c6a:	34 fe       	sbrs	r3, 4
 c6c:	0b c0       	rjmp	.+22     	; 0xc84 <vfprintf+0x2d4>
 c6e:	32 fc       	sbrc	r3, 2
 c70:	09 c0       	rjmp	.+18     	; 0xc84 <vfprintf+0x2d4>
 c72:	83 2d       	mov	r24, r3
 c74:	8e 7e       	andi	r24, 0xEE	; 238
 c76:	a8 2e       	mov	r10, r24
 c78:	05 c0       	rjmp	.+10     	; 0xc84 <vfprintf+0x2d4>
 c7a:	b8 2c       	mov	r11, r8
 c7c:	a3 2c       	mov	r10, r3
 c7e:	03 c0       	rjmp	.+6      	; 0xc86 <vfprintf+0x2d6>
 c80:	b8 2c       	mov	r11, r8
 c82:	01 c0       	rjmp	.+2      	; 0xc86 <vfprintf+0x2d6>
 c84:	b9 2c       	mov	r11, r9
 c86:	a4 fe       	sbrs	r10, 4
 c88:	0f c0       	rjmp	.+30     	; 0xca8 <vfprintf+0x2f8>
 c8a:	fe 01       	movw	r30, r28
 c8c:	e8 0d       	add	r30, r8
 c8e:	f1 1d       	adc	r31, r1
 c90:	80 81       	ld	r24, Z
 c92:	80 33       	cpi	r24, 0x30	; 48
 c94:	21 f4       	brne	.+8      	; 0xc9e <vfprintf+0x2ee>
 c96:	9a 2d       	mov	r25, r10
 c98:	99 7e       	andi	r25, 0xE9	; 233
 c9a:	a9 2e       	mov	r10, r25
 c9c:	09 c0       	rjmp	.+18     	; 0xcb0 <vfprintf+0x300>
 c9e:	a2 fe       	sbrs	r10, 2
 ca0:	06 c0       	rjmp	.+12     	; 0xcae <vfprintf+0x2fe>
 ca2:	b3 94       	inc	r11
 ca4:	b3 94       	inc	r11
 ca6:	04 c0       	rjmp	.+8      	; 0xcb0 <vfprintf+0x300>
 ca8:	8a 2d       	mov	r24, r10
 caa:	86 78       	andi	r24, 0x86	; 134
 cac:	09 f0       	breq	.+2      	; 0xcb0 <vfprintf+0x300>
 cae:	b3 94       	inc	r11
 cb0:	a3 fc       	sbrc	r10, 3
 cb2:	11 c0       	rjmp	.+34     	; 0xcd6 <vfprintf+0x326>
 cb4:	a0 fe       	sbrs	r10, 0
 cb6:	06 c0       	rjmp	.+12     	; 0xcc4 <vfprintf+0x314>
 cb8:	b2 14       	cp	r11, r2
 cba:	88 f4       	brcc	.+34     	; 0xcde <vfprintf+0x32e>
 cbc:	28 0c       	add	r2, r8
 cbe:	92 2c       	mov	r9, r2
 cc0:	9b 18       	sub	r9, r11
 cc2:	0e c0       	rjmp	.+28     	; 0xce0 <vfprintf+0x330>
 cc4:	b2 14       	cp	r11, r2
 cc6:	60 f4       	brcc	.+24     	; 0xce0 <vfprintf+0x330>
 cc8:	b6 01       	movw	r22, r12
 cca:	80 e2       	ldi	r24, 0x20	; 32
 ccc:	90 e0       	ldi	r25, 0x00	; 0
 cce:	0e 94 cf 06 	call	0xd9e	; 0xd9e <fputc>
 cd2:	b3 94       	inc	r11
 cd4:	f7 cf       	rjmp	.-18     	; 0xcc4 <vfprintf+0x314>
 cd6:	b2 14       	cp	r11, r2
 cd8:	18 f4       	brcc	.+6      	; 0xce0 <vfprintf+0x330>
 cda:	2b 18       	sub	r2, r11
 cdc:	02 c0       	rjmp	.+4      	; 0xce2 <vfprintf+0x332>
 cde:	98 2c       	mov	r9, r8
 ce0:	21 2c       	mov	r2, r1
 ce2:	a4 fe       	sbrs	r10, 4
 ce4:	10 c0       	rjmp	.+32     	; 0xd06 <vfprintf+0x356>
 ce6:	b6 01       	movw	r22, r12
 ce8:	80 e3       	ldi	r24, 0x30	; 48
 cea:	90 e0       	ldi	r25, 0x00	; 0
 cec:	0e 94 cf 06 	call	0xd9e	; 0xd9e <fputc>
 cf0:	a2 fe       	sbrs	r10, 2
 cf2:	17 c0       	rjmp	.+46     	; 0xd22 <vfprintf+0x372>
 cf4:	a1 fc       	sbrc	r10, 1
 cf6:	03 c0       	rjmp	.+6      	; 0xcfe <vfprintf+0x34e>
 cf8:	88 e7       	ldi	r24, 0x78	; 120
 cfa:	90 e0       	ldi	r25, 0x00	; 0
 cfc:	02 c0       	rjmp	.+4      	; 0xd02 <vfprintf+0x352>
 cfe:	88 e5       	ldi	r24, 0x58	; 88
 d00:	90 e0       	ldi	r25, 0x00	; 0
 d02:	b6 01       	movw	r22, r12
 d04:	0c c0       	rjmp	.+24     	; 0xd1e <vfprintf+0x36e>
 d06:	8a 2d       	mov	r24, r10
 d08:	86 78       	andi	r24, 0x86	; 134
 d0a:	59 f0       	breq	.+22     	; 0xd22 <vfprintf+0x372>
 d0c:	a1 fe       	sbrs	r10, 1
 d0e:	02 c0       	rjmp	.+4      	; 0xd14 <vfprintf+0x364>
 d10:	8b e2       	ldi	r24, 0x2B	; 43
 d12:	01 c0       	rjmp	.+2      	; 0xd16 <vfprintf+0x366>
 d14:	80 e2       	ldi	r24, 0x20	; 32
 d16:	a7 fc       	sbrc	r10, 7
 d18:	8d e2       	ldi	r24, 0x2D	; 45
 d1a:	b6 01       	movw	r22, r12
 d1c:	90 e0       	ldi	r25, 0x00	; 0
 d1e:	0e 94 cf 06 	call	0xd9e	; 0xd9e <fputc>
 d22:	89 14       	cp	r8, r9
 d24:	38 f4       	brcc	.+14     	; 0xd34 <vfprintf+0x384>
 d26:	b6 01       	movw	r22, r12
 d28:	80 e3       	ldi	r24, 0x30	; 48
 d2a:	90 e0       	ldi	r25, 0x00	; 0
 d2c:	0e 94 cf 06 	call	0xd9e	; 0xd9e <fputc>
 d30:	9a 94       	dec	r9
 d32:	f7 cf       	rjmp	.-18     	; 0xd22 <vfprintf+0x372>
 d34:	8a 94       	dec	r8
 d36:	f3 01       	movw	r30, r6
 d38:	e8 0d       	add	r30, r8
 d3a:	f1 1d       	adc	r31, r1
 d3c:	80 81       	ld	r24, Z
 d3e:	b6 01       	movw	r22, r12
 d40:	90 e0       	ldi	r25, 0x00	; 0
 d42:	0e 94 cf 06 	call	0xd9e	; 0xd9e <fputc>
 d46:	81 10       	cpse	r8, r1
 d48:	f5 cf       	rjmp	.-22     	; 0xd34 <vfprintf+0x384>
 d4a:	22 20       	and	r2, r2
 d4c:	09 f4       	brne	.+2      	; 0xd50 <vfprintf+0x3a0>
 d4e:	42 ce       	rjmp	.-892    	; 0x9d4 <vfprintf+0x24>
 d50:	b6 01       	movw	r22, r12
 d52:	80 e2       	ldi	r24, 0x20	; 32
 d54:	90 e0       	ldi	r25, 0x00	; 0
 d56:	0e 94 cf 06 	call	0xd9e	; 0xd9e <fputc>
 d5a:	2a 94       	dec	r2
 d5c:	f6 cf       	rjmp	.-20     	; 0xd4a <vfprintf+0x39a>
 d5e:	f6 01       	movw	r30, r12
 d60:	86 81       	ldd	r24, Z+6	; 0x06
 d62:	97 81       	ldd	r25, Z+7	; 0x07
 d64:	02 c0       	rjmp	.+4      	; 0xd6a <vfprintf+0x3ba>
 d66:	8f ef       	ldi	r24, 0xFF	; 255
 d68:	9f ef       	ldi	r25, 0xFF	; 255
 d6a:	2b 96       	adiw	r28, 0x0b	; 11
 d6c:	e2 e1       	ldi	r30, 0x12	; 18
 d6e:	0c 94 85 07 	jmp	0xf0a	; 0xf0a <__epilogue_restores__>

00000d72 <strnlen_P>:
 d72:	fc 01       	movw	r30, r24
 d74:	05 90       	lpm	r0, Z+
 d76:	61 50       	subi	r22, 0x01	; 1
 d78:	70 40       	sbci	r23, 0x00	; 0
 d7a:	01 10       	cpse	r0, r1
 d7c:	d8 f7       	brcc	.-10     	; 0xd74 <strnlen_P+0x2>
 d7e:	80 95       	com	r24
 d80:	90 95       	com	r25
 d82:	8e 0f       	add	r24, r30
 d84:	9f 1f       	adc	r25, r31
 d86:	08 95       	ret

00000d88 <strnlen>:
 d88:	fc 01       	movw	r30, r24
 d8a:	61 50       	subi	r22, 0x01	; 1
 d8c:	70 40       	sbci	r23, 0x00	; 0
 d8e:	01 90       	ld	r0, Z+
 d90:	01 10       	cpse	r0, r1
 d92:	d8 f7       	brcc	.-10     	; 0xd8a <strnlen+0x2>
 d94:	80 95       	com	r24
 d96:	90 95       	com	r25
 d98:	8e 0f       	add	r24, r30
 d9a:	9f 1f       	adc	r25, r31
 d9c:	08 95       	ret

00000d9e <fputc>:
 d9e:	0f 93       	push	r16
 da0:	1f 93       	push	r17
 da2:	cf 93       	push	r28
 da4:	df 93       	push	r29
 da6:	fb 01       	movw	r30, r22
 da8:	23 81       	ldd	r18, Z+3	; 0x03
 daa:	21 fd       	sbrc	r18, 1
 dac:	03 c0       	rjmp	.+6      	; 0xdb4 <fputc+0x16>
 dae:	8f ef       	ldi	r24, 0xFF	; 255
 db0:	9f ef       	ldi	r25, 0xFF	; 255
 db2:	2c c0       	rjmp	.+88     	; 0xe0c <fputc+0x6e>
 db4:	22 ff       	sbrs	r18, 2
 db6:	16 c0       	rjmp	.+44     	; 0xde4 <fputc+0x46>
 db8:	46 81       	ldd	r20, Z+6	; 0x06
 dba:	57 81       	ldd	r21, Z+7	; 0x07
 dbc:	24 81       	ldd	r18, Z+4	; 0x04
 dbe:	35 81       	ldd	r19, Z+5	; 0x05
 dc0:	42 17       	cp	r20, r18
 dc2:	53 07       	cpc	r21, r19
 dc4:	44 f4       	brge	.+16     	; 0xdd6 <fputc+0x38>
 dc6:	a0 81       	ld	r26, Z
 dc8:	b1 81       	ldd	r27, Z+1	; 0x01
 dca:	9d 01       	movw	r18, r26
 dcc:	2f 5f       	subi	r18, 0xFF	; 255
 dce:	3f 4f       	sbci	r19, 0xFF	; 255
 dd0:	31 83       	std	Z+1, r19	; 0x01
 dd2:	20 83       	st	Z, r18
 dd4:	8c 93       	st	X, r24
 dd6:	26 81       	ldd	r18, Z+6	; 0x06
 dd8:	37 81       	ldd	r19, Z+7	; 0x07
 dda:	2f 5f       	subi	r18, 0xFF	; 255
 ddc:	3f 4f       	sbci	r19, 0xFF	; 255
 dde:	37 83       	std	Z+7, r19	; 0x07
 de0:	26 83       	std	Z+6, r18	; 0x06
 de2:	14 c0       	rjmp	.+40     	; 0xe0c <fputc+0x6e>
 de4:	8b 01       	movw	r16, r22
 de6:	ec 01       	movw	r28, r24
 de8:	fb 01       	movw	r30, r22
 dea:	00 84       	ldd	r0, Z+8	; 0x08
 dec:	f1 85       	ldd	r31, Z+9	; 0x09
 dee:	e0 2d       	mov	r30, r0
 df0:	09 95       	icall
 df2:	89 2b       	or	r24, r25
 df4:	e1 f6       	brne	.-72     	; 0xdae <fputc+0x10>
 df6:	d8 01       	movw	r26, r16
 df8:	16 96       	adiw	r26, 0x06	; 6
 dfa:	8d 91       	ld	r24, X+
 dfc:	9c 91       	ld	r25, X
 dfe:	17 97       	sbiw	r26, 0x07	; 7
 e00:	01 96       	adiw	r24, 0x01	; 1
 e02:	17 96       	adiw	r26, 0x07	; 7
 e04:	9c 93       	st	X, r25
 e06:	8e 93       	st	-X, r24
 e08:	16 97       	sbiw	r26, 0x06	; 6
 e0a:	ce 01       	movw	r24, r28
 e0c:	df 91       	pop	r29
 e0e:	cf 91       	pop	r28
 e10:	1f 91       	pop	r17
 e12:	0f 91       	pop	r16
 e14:	08 95       	ret

00000e16 <__ultoa_invert>:
 e16:	fa 01       	movw	r30, r20
 e18:	aa 27       	eor	r26, r26
 e1a:	28 30       	cpi	r18, 0x08	; 8
 e1c:	51 f1       	breq	.+84     	; 0xe72 <__ultoa_invert+0x5c>
 e1e:	20 31       	cpi	r18, 0x10	; 16
 e20:	81 f1       	breq	.+96     	; 0xe82 <__ultoa_invert+0x6c>
 e22:	e8 94       	clt
 e24:	6f 93       	push	r22
 e26:	6e 7f       	andi	r22, 0xFE	; 254
 e28:	6e 5f       	subi	r22, 0xFE	; 254
 e2a:	7f 4f       	sbci	r23, 0xFF	; 255
 e2c:	8f 4f       	sbci	r24, 0xFF	; 255
 e2e:	9f 4f       	sbci	r25, 0xFF	; 255
 e30:	af 4f       	sbci	r26, 0xFF	; 255
 e32:	b1 e0       	ldi	r27, 0x01	; 1
 e34:	3e d0       	rcall	.+124    	; 0xeb2 <__ultoa_invert+0x9c>
 e36:	b4 e0       	ldi	r27, 0x04	; 4
 e38:	3c d0       	rcall	.+120    	; 0xeb2 <__ultoa_invert+0x9c>
 e3a:	67 0f       	add	r22, r23
 e3c:	78 1f       	adc	r23, r24
 e3e:	89 1f       	adc	r24, r25
 e40:	9a 1f       	adc	r25, r26
 e42:	a1 1d       	adc	r26, r1
 e44:	68 0f       	add	r22, r24
 e46:	79 1f       	adc	r23, r25
 e48:	8a 1f       	adc	r24, r26
 e4a:	91 1d       	adc	r25, r1
 e4c:	a1 1d       	adc	r26, r1
 e4e:	6a 0f       	add	r22, r26
 e50:	71 1d       	adc	r23, r1
 e52:	81 1d       	adc	r24, r1
 e54:	91 1d       	adc	r25, r1
 e56:	a1 1d       	adc	r26, r1
 e58:	20 d0       	rcall	.+64     	; 0xe9a <__ultoa_invert+0x84>
 e5a:	09 f4       	brne	.+2      	; 0xe5e <__ultoa_invert+0x48>
 e5c:	68 94       	set
 e5e:	3f 91       	pop	r19
 e60:	2a e0       	ldi	r18, 0x0A	; 10
 e62:	26 9f       	mul	r18, r22
 e64:	11 24       	eor	r1, r1
 e66:	30 19       	sub	r19, r0
 e68:	30 5d       	subi	r19, 0xD0	; 208
 e6a:	31 93       	st	Z+, r19
 e6c:	de f6       	brtc	.-74     	; 0xe24 <__ultoa_invert+0xe>
 e6e:	cf 01       	movw	r24, r30
 e70:	08 95       	ret
 e72:	46 2f       	mov	r20, r22
 e74:	47 70       	andi	r20, 0x07	; 7
 e76:	40 5d       	subi	r20, 0xD0	; 208
 e78:	41 93       	st	Z+, r20
 e7a:	b3 e0       	ldi	r27, 0x03	; 3
 e7c:	0f d0       	rcall	.+30     	; 0xe9c <__ultoa_invert+0x86>
 e7e:	c9 f7       	brne	.-14     	; 0xe72 <__ultoa_invert+0x5c>
 e80:	f6 cf       	rjmp	.-20     	; 0xe6e <__ultoa_invert+0x58>
 e82:	46 2f       	mov	r20, r22
 e84:	4f 70       	andi	r20, 0x0F	; 15
 e86:	40 5d       	subi	r20, 0xD0	; 208
 e88:	4a 33       	cpi	r20, 0x3A	; 58
 e8a:	18 f0       	brcs	.+6      	; 0xe92 <__ultoa_invert+0x7c>
 e8c:	49 5d       	subi	r20, 0xD9	; 217
 e8e:	31 fd       	sbrc	r19, 1
 e90:	40 52       	subi	r20, 0x20	; 32
 e92:	41 93       	st	Z+, r20
 e94:	02 d0       	rcall	.+4      	; 0xe9a <__ultoa_invert+0x84>
 e96:	a9 f7       	brne	.-22     	; 0xe82 <__ultoa_invert+0x6c>
 e98:	ea cf       	rjmp	.-44     	; 0xe6e <__ultoa_invert+0x58>
 e9a:	b4 e0       	ldi	r27, 0x04	; 4
 e9c:	a6 95       	lsr	r26
 e9e:	97 95       	ror	r25
 ea0:	87 95       	ror	r24
 ea2:	77 95       	ror	r23
 ea4:	67 95       	ror	r22
 ea6:	ba 95       	dec	r27
 ea8:	c9 f7       	brne	.-14     	; 0xe9c <__ultoa_invert+0x86>
 eaa:	00 97       	sbiw	r24, 0x00	; 0
 eac:	61 05       	cpc	r22, r1
 eae:	71 05       	cpc	r23, r1
 eb0:	08 95       	ret
 eb2:	9b 01       	movw	r18, r22
 eb4:	ac 01       	movw	r20, r24
 eb6:	0a 2e       	mov	r0, r26
 eb8:	06 94       	lsr	r0
 eba:	57 95       	ror	r21
 ebc:	47 95       	ror	r20
 ebe:	37 95       	ror	r19
 ec0:	27 95       	ror	r18
 ec2:	ba 95       	dec	r27
 ec4:	c9 f7       	brne	.-14     	; 0xeb8 <__ultoa_invert+0xa2>
 ec6:	62 0f       	add	r22, r18
 ec8:	73 1f       	adc	r23, r19
 eca:	84 1f       	adc	r24, r20
 ecc:	95 1f       	adc	r25, r21
 ece:	a0 1d       	adc	r26, r0
 ed0:	08 95       	ret

00000ed2 <__prologue_saves__>:
 ed2:	2f 92       	push	r2
 ed4:	3f 92       	push	r3
 ed6:	4f 92       	push	r4
 ed8:	5f 92       	push	r5
 eda:	6f 92       	push	r6
 edc:	7f 92       	push	r7
 ede:	8f 92       	push	r8
 ee0:	9f 92       	push	r9
 ee2:	af 92       	push	r10
 ee4:	bf 92       	push	r11
 ee6:	cf 92       	push	r12
 ee8:	df 92       	push	r13
 eea:	ef 92       	push	r14
 eec:	ff 92       	push	r15
 eee:	0f 93       	push	r16
 ef0:	1f 93       	push	r17
 ef2:	cf 93       	push	r28
 ef4:	df 93       	push	r29
 ef6:	cd b7       	in	r28, 0x3d	; 61
 ef8:	de b7       	in	r29, 0x3e	; 62
 efa:	ca 1b       	sub	r28, r26
 efc:	db 0b       	sbc	r29, r27
 efe:	0f b6       	in	r0, 0x3f	; 63
 f00:	f8 94       	cli
 f02:	de bf       	out	0x3e, r29	; 62
 f04:	0f be       	out	0x3f, r0	; 63
 f06:	cd bf       	out	0x3d, r28	; 61
 f08:	09 94       	ijmp

00000f0a <__epilogue_restores__>:
 f0a:	2a 88       	ldd	r2, Y+18	; 0x12
 f0c:	39 88       	ldd	r3, Y+17	; 0x11
 f0e:	48 88       	ldd	r4, Y+16	; 0x10
 f10:	5f 84       	ldd	r5, Y+15	; 0x0f
 f12:	6e 84       	ldd	r6, Y+14	; 0x0e
 f14:	7d 84       	ldd	r7, Y+13	; 0x0d
 f16:	8c 84       	ldd	r8, Y+12	; 0x0c
 f18:	9b 84       	ldd	r9, Y+11	; 0x0b
 f1a:	aa 84       	ldd	r10, Y+10	; 0x0a
 f1c:	b9 84       	ldd	r11, Y+9	; 0x09
 f1e:	c8 84       	ldd	r12, Y+8	; 0x08
 f20:	df 80       	ldd	r13, Y+7	; 0x07
 f22:	ee 80       	ldd	r14, Y+6	; 0x06
 f24:	fd 80       	ldd	r15, Y+5	; 0x05
 f26:	0c 81       	ldd	r16, Y+4	; 0x04
 f28:	1b 81       	ldd	r17, Y+3	; 0x03
 f2a:	aa 81       	ldd	r26, Y+2	; 0x02
 f2c:	b9 81       	ldd	r27, Y+1	; 0x01
 f2e:	ce 0f       	add	r28, r30
 f30:	d1 1d       	adc	r29, r1
 f32:	0f b6       	in	r0, 0x3f	; 63
 f34:	f8 94       	cli
 f36:	de bf       	out	0x3e, r29	; 62
 f38:	0f be       	out	0x3f, r0	; 63
 f3a:	cd bf       	out	0x3d, r28	; 61
 f3c:	ed 01       	movw	r28, r26
 f3e:	08 95       	ret

00000f40 <_exit>:
 f40:	f8 94       	cli

00000f42 <__stop_program>:
 f42:	ff cf       	rjmp	.-2      	; 0xf42 <__stop_program>
