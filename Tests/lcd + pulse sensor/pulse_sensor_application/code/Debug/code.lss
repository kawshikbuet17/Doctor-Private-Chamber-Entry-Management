
code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001202  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000006c  00800060  00001202  00001296  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  008000cc  008000cc  00001302  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001302  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001334  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00001370  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f22  00000000  00000000  00001458  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000835  00000000  00000000  0000337a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cf3  00000000  00000000  00003baf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000324  00000000  00000000  000048a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000071b  00000000  00000000  00004bc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001ba8  00000000  00000000  000052e3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  00006e8b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e0       	ldi	r30, 0x02	; 2
      68:	f2 e1       	ldi	r31, 0x12	; 18
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ac 3c       	cpi	r26, 0xCC	; 204
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	ac ec       	ldi	r26, 0xCC	; 204
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a4 3d       	cpi	r26, 0xD4	; 212
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 b4 04 	call	0x968	; 0x968 <main>
      8a:	0c 94 ff 08 	jmp	0x11fe	; 0x11fe <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z9pinChangeii>:
}

void Lcd4_Shift_Left()
{
	Lcd4_Cmd(0x01);
	Lcd4_Cmd(0x08);
      92:	67 2b       	or	r22, r23
      94:	09 f0       	breq	.+2      	; 0x98 <_Z9pinChangeii+0x6>
      96:	df c0       	rjmp	.+446    	; 0x256 <_Z9pinChangeii+0x1c4>
      98:	00 97       	sbiw	r24, 0x00	; 0
      9a:	21 f4       	brne	.+8      	; 0xa4 <_Z9pinChangeii+0x12>
      9c:	8b b3       	in	r24, 0x1b	; 27
      9e:	8e 7f       	andi	r24, 0xFE	; 254
      a0:	8b bb       	out	0x1b, r24	; 27
      a2:	08 95       	ret
      a4:	81 30       	cpi	r24, 0x01	; 1
      a6:	91 05       	cpc	r25, r1
      a8:	21 f4       	brne	.+8      	; 0xb2 <_Z9pinChangeii+0x20>
      aa:	8b b3       	in	r24, 0x1b	; 27
      ac:	8d 7f       	andi	r24, 0xFD	; 253
      ae:	8b bb       	out	0x1b, r24	; 27
      b0:	08 95       	ret
      b2:	82 30       	cpi	r24, 0x02	; 2
      b4:	91 05       	cpc	r25, r1
      b6:	21 f4       	brne	.+8      	; 0xc0 <_Z9pinChangeii+0x2e>
      b8:	8b b3       	in	r24, 0x1b	; 27
      ba:	8b 7f       	andi	r24, 0xFB	; 251
      bc:	8b bb       	out	0x1b, r24	; 27
      be:	08 95       	ret
      c0:	83 30       	cpi	r24, 0x03	; 3
      c2:	91 05       	cpc	r25, r1
      c4:	21 f4       	brne	.+8      	; 0xce <_Z9pinChangeii+0x3c>
      c6:	8b b3       	in	r24, 0x1b	; 27
      c8:	87 7f       	andi	r24, 0xF7	; 247
      ca:	8b bb       	out	0x1b, r24	; 27
      cc:	08 95       	ret
      ce:	84 30       	cpi	r24, 0x04	; 4
      d0:	91 05       	cpc	r25, r1
      d2:	21 f4       	brne	.+8      	; 0xdc <_Z9pinChangeii+0x4a>
      d4:	8b b3       	in	r24, 0x1b	; 27
      d6:	8f 7e       	andi	r24, 0xEF	; 239
      d8:	8b bb       	out	0x1b, r24	; 27
      da:	08 95       	ret
      dc:	85 30       	cpi	r24, 0x05	; 5
      de:	91 05       	cpc	r25, r1
      e0:	21 f4       	brne	.+8      	; 0xea <_Z9pinChangeii+0x58>
      e2:	8b b3       	in	r24, 0x1b	; 27
      e4:	8f 7d       	andi	r24, 0xDF	; 223
      e6:	8b bb       	out	0x1b, r24	; 27
      e8:	08 95       	ret
      ea:	86 30       	cpi	r24, 0x06	; 6
      ec:	91 05       	cpc	r25, r1
      ee:	21 f4       	brne	.+8      	; 0xf8 <_Z9pinChangeii+0x66>
      f0:	8b b3       	in	r24, 0x1b	; 27
      f2:	8f 7b       	andi	r24, 0xBF	; 191
      f4:	8b bb       	out	0x1b, r24	; 27
      f6:	08 95       	ret
      f8:	87 30       	cpi	r24, 0x07	; 7
      fa:	91 05       	cpc	r25, r1
      fc:	21 f4       	brne	.+8      	; 0x106 <_Z9pinChangeii+0x74>
      fe:	8b b3       	in	r24, 0x1b	; 27
     100:	8f 77       	andi	r24, 0x7F	; 127
     102:	8b bb       	out	0x1b, r24	; 27
     104:	08 95       	ret
     106:	8a 30       	cpi	r24, 0x0A	; 10
     108:	91 05       	cpc	r25, r1
     10a:	21 f4       	brne	.+8      	; 0x114 <_Z9pinChangeii+0x82>
     10c:	88 b3       	in	r24, 0x18	; 24
     10e:	8e 7f       	andi	r24, 0xFE	; 254
     110:	88 bb       	out	0x18, r24	; 24
     112:	08 95       	ret
     114:	8b 30       	cpi	r24, 0x0B	; 11
     116:	91 05       	cpc	r25, r1
     118:	21 f4       	brne	.+8      	; 0x122 <_Z9pinChangeii+0x90>
     11a:	88 b3       	in	r24, 0x18	; 24
     11c:	8d 7f       	andi	r24, 0xFD	; 253
     11e:	88 bb       	out	0x18, r24	; 24
     120:	08 95       	ret
     122:	8c 30       	cpi	r24, 0x0C	; 12
     124:	91 05       	cpc	r25, r1
     126:	21 f4       	brne	.+8      	; 0x130 <_Z9pinChangeii+0x9e>
     128:	88 b3       	in	r24, 0x18	; 24
     12a:	8b 7f       	andi	r24, 0xFB	; 251
     12c:	88 bb       	out	0x18, r24	; 24
     12e:	08 95       	ret
     130:	8d 30       	cpi	r24, 0x0D	; 13
     132:	91 05       	cpc	r25, r1
     134:	21 f4       	brne	.+8      	; 0x13e <_Z9pinChangeii+0xac>
     136:	88 b3       	in	r24, 0x18	; 24
     138:	87 7f       	andi	r24, 0xF7	; 247
     13a:	88 bb       	out	0x18, r24	; 24
     13c:	08 95       	ret
     13e:	8e 30       	cpi	r24, 0x0E	; 14
     140:	91 05       	cpc	r25, r1
     142:	21 f4       	brne	.+8      	; 0x14c <_Z9pinChangeii+0xba>
     144:	88 b3       	in	r24, 0x18	; 24
     146:	8f 7e       	andi	r24, 0xEF	; 239
     148:	88 bb       	out	0x18, r24	; 24
     14a:	08 95       	ret
     14c:	8f 30       	cpi	r24, 0x0F	; 15
     14e:	91 05       	cpc	r25, r1
     150:	21 f4       	brne	.+8      	; 0x15a <_Z9pinChangeii+0xc8>
     152:	88 b3       	in	r24, 0x18	; 24
     154:	8f 7d       	andi	r24, 0xDF	; 223
     156:	88 bb       	out	0x18, r24	; 24
     158:	08 95       	ret
     15a:	80 31       	cpi	r24, 0x10	; 16
     15c:	91 05       	cpc	r25, r1
     15e:	21 f4       	brne	.+8      	; 0x168 <_Z9pinChangeii+0xd6>
     160:	88 b3       	in	r24, 0x18	; 24
     162:	8f 7b       	andi	r24, 0xBF	; 191
     164:	88 bb       	out	0x18, r24	; 24
     166:	08 95       	ret
     168:	81 31       	cpi	r24, 0x11	; 17
     16a:	91 05       	cpc	r25, r1
     16c:	21 f4       	brne	.+8      	; 0x176 <_Z9pinChangeii+0xe4>
     16e:	88 b3       	in	r24, 0x18	; 24
     170:	8f 77       	andi	r24, 0x7F	; 127
     172:	88 bb       	out	0x18, r24	; 24
     174:	08 95       	ret
     176:	84 31       	cpi	r24, 0x14	; 20
     178:	91 05       	cpc	r25, r1
     17a:	21 f4       	brne	.+8      	; 0x184 <_Z9pinChangeii+0xf2>
     17c:	85 b3       	in	r24, 0x15	; 21
     17e:	8e 7f       	andi	r24, 0xFE	; 254
     180:	85 bb       	out	0x15, r24	; 21
     182:	08 95       	ret
     184:	85 31       	cpi	r24, 0x15	; 21
     186:	91 05       	cpc	r25, r1
     188:	21 f4       	brne	.+8      	; 0x192 <_Z9pinChangeii+0x100>
     18a:	85 b3       	in	r24, 0x15	; 21
     18c:	8d 7f       	andi	r24, 0xFD	; 253
     18e:	85 bb       	out	0x15, r24	; 21
     190:	08 95       	ret
     192:	86 31       	cpi	r24, 0x16	; 22
     194:	91 05       	cpc	r25, r1
     196:	21 f4       	brne	.+8      	; 0x1a0 <_Z9pinChangeii+0x10e>
     198:	85 b3       	in	r24, 0x15	; 21
     19a:	8b 7f       	andi	r24, 0xFB	; 251
     19c:	85 bb       	out	0x15, r24	; 21
     19e:	08 95       	ret
     1a0:	87 31       	cpi	r24, 0x17	; 23
     1a2:	91 05       	cpc	r25, r1
     1a4:	21 f4       	brne	.+8      	; 0x1ae <_Z9pinChangeii+0x11c>
     1a6:	85 b3       	in	r24, 0x15	; 21
     1a8:	87 7f       	andi	r24, 0xF7	; 247
     1aa:	85 bb       	out	0x15, r24	; 21
     1ac:	08 95       	ret
     1ae:	88 31       	cpi	r24, 0x18	; 24
     1b0:	91 05       	cpc	r25, r1
     1b2:	21 f4       	brne	.+8      	; 0x1bc <_Z9pinChangeii+0x12a>
     1b4:	85 b3       	in	r24, 0x15	; 21
     1b6:	8f 7e       	andi	r24, 0xEF	; 239
     1b8:	85 bb       	out	0x15, r24	; 21
     1ba:	08 95       	ret
     1bc:	89 31       	cpi	r24, 0x19	; 25
     1be:	91 05       	cpc	r25, r1
     1c0:	21 f4       	brne	.+8      	; 0x1ca <_Z9pinChangeii+0x138>
     1c2:	85 b3       	in	r24, 0x15	; 21
     1c4:	8f 7d       	andi	r24, 0xDF	; 223
     1c6:	85 bb       	out	0x15, r24	; 21
     1c8:	08 95       	ret
     1ca:	8a 31       	cpi	r24, 0x1A	; 26
     1cc:	91 05       	cpc	r25, r1
     1ce:	21 f4       	brne	.+8      	; 0x1d8 <_Z9pinChangeii+0x146>
     1d0:	85 b3       	in	r24, 0x15	; 21
     1d2:	8f 7b       	andi	r24, 0xBF	; 191
     1d4:	85 bb       	out	0x15, r24	; 21
     1d6:	08 95       	ret
     1d8:	8b 31       	cpi	r24, 0x1B	; 27
     1da:	91 05       	cpc	r25, r1
     1dc:	21 f4       	brne	.+8      	; 0x1e6 <_Z9pinChangeii+0x154>
     1de:	85 b3       	in	r24, 0x15	; 21
     1e0:	8f 77       	andi	r24, 0x7F	; 127
     1e2:	85 bb       	out	0x15, r24	; 21
     1e4:	08 95       	ret
     1e6:	8e 31       	cpi	r24, 0x1E	; 30
     1e8:	91 05       	cpc	r25, r1
     1ea:	21 f4       	brne	.+8      	; 0x1f4 <_Z9pinChangeii+0x162>
     1ec:	82 b3       	in	r24, 0x12	; 18
     1ee:	8e 7f       	andi	r24, 0xFE	; 254
     1f0:	82 bb       	out	0x12, r24	; 18
     1f2:	08 95       	ret
     1f4:	8f 31       	cpi	r24, 0x1F	; 31
     1f6:	91 05       	cpc	r25, r1
     1f8:	21 f4       	brne	.+8      	; 0x202 <_Z9pinChangeii+0x170>
     1fa:	82 b3       	in	r24, 0x12	; 18
     1fc:	8d 7f       	andi	r24, 0xFD	; 253
     1fe:	82 bb       	out	0x12, r24	; 18
     200:	08 95       	ret
     202:	80 32       	cpi	r24, 0x20	; 32
     204:	91 05       	cpc	r25, r1
     206:	21 f4       	brne	.+8      	; 0x210 <_Z9pinChangeii+0x17e>
     208:	82 b3       	in	r24, 0x12	; 18
     20a:	8b 7f       	andi	r24, 0xFB	; 251
     20c:	82 bb       	out	0x12, r24	; 18
     20e:	08 95       	ret
     210:	81 32       	cpi	r24, 0x21	; 33
     212:	91 05       	cpc	r25, r1
     214:	21 f4       	brne	.+8      	; 0x21e <_Z9pinChangeii+0x18c>
     216:	82 b3       	in	r24, 0x12	; 18
     218:	87 7f       	andi	r24, 0xF7	; 247
     21a:	82 bb       	out	0x12, r24	; 18
     21c:	08 95       	ret
     21e:	82 32       	cpi	r24, 0x22	; 34
     220:	91 05       	cpc	r25, r1
     222:	21 f4       	brne	.+8      	; 0x22c <_Z9pinChangeii+0x19a>
     224:	82 b3       	in	r24, 0x12	; 18
     226:	8f 7e       	andi	r24, 0xEF	; 239
     228:	82 bb       	out	0x12, r24	; 18
     22a:	08 95       	ret
     22c:	83 32       	cpi	r24, 0x23	; 35
     22e:	91 05       	cpc	r25, r1
     230:	21 f4       	brne	.+8      	; 0x23a <_Z9pinChangeii+0x1a8>
     232:	82 b3       	in	r24, 0x12	; 18
     234:	8f 7d       	andi	r24, 0xDF	; 223
     236:	82 bb       	out	0x12, r24	; 18
     238:	08 95       	ret
     23a:	84 32       	cpi	r24, 0x24	; 36
     23c:	91 05       	cpc	r25, r1
     23e:	21 f4       	brne	.+8      	; 0x248 <_Z9pinChangeii+0x1b6>
     240:	82 b3       	in	r24, 0x12	; 18
     242:	8f 7b       	andi	r24, 0xBF	; 191
     244:	82 bb       	out	0x12, r24	; 18
     246:	08 95       	ret
     248:	85 97       	sbiw	r24, 0x25	; 37
     24a:	09 f0       	breq	.+2      	; 0x24e <_Z9pinChangeii+0x1bc>
     24c:	e1 c0       	rjmp	.+450    	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
     24e:	82 b3       	in	r24, 0x12	; 18
     250:	8f 77       	andi	r24, 0x7F	; 127
     252:	82 bb       	out	0x12, r24	; 18
     254:	08 95       	ret
     256:	00 97       	sbiw	r24, 0x00	; 0
     258:	21 f4       	brne	.+8      	; 0x262 <_Z9pinChangeii+0x1d0>
     25a:	8b b3       	in	r24, 0x1b	; 27
     25c:	81 60       	ori	r24, 0x01	; 1
     25e:	8b bb       	out	0x1b, r24	; 27
     260:	08 95       	ret
     262:	81 30       	cpi	r24, 0x01	; 1
     264:	91 05       	cpc	r25, r1
     266:	21 f4       	brne	.+8      	; 0x270 <_Z9pinChangeii+0x1de>
     268:	8b b3       	in	r24, 0x1b	; 27
     26a:	82 60       	ori	r24, 0x02	; 2
     26c:	8b bb       	out	0x1b, r24	; 27
     26e:	08 95       	ret
     270:	82 30       	cpi	r24, 0x02	; 2
     272:	91 05       	cpc	r25, r1
     274:	21 f4       	brne	.+8      	; 0x27e <_Z9pinChangeii+0x1ec>
     276:	8b b3       	in	r24, 0x1b	; 27
     278:	84 60       	ori	r24, 0x04	; 4
     27a:	8b bb       	out	0x1b, r24	; 27
     27c:	08 95       	ret
     27e:	83 30       	cpi	r24, 0x03	; 3
     280:	91 05       	cpc	r25, r1
     282:	21 f4       	brne	.+8      	; 0x28c <_Z9pinChangeii+0x1fa>
     284:	8b b3       	in	r24, 0x1b	; 27
     286:	88 60       	ori	r24, 0x08	; 8
     288:	8b bb       	out	0x1b, r24	; 27
     28a:	08 95       	ret
     28c:	84 30       	cpi	r24, 0x04	; 4
     28e:	91 05       	cpc	r25, r1
     290:	21 f4       	brne	.+8      	; 0x29a <_Z9pinChangeii+0x208>
     292:	8b b3       	in	r24, 0x1b	; 27
     294:	80 61       	ori	r24, 0x10	; 16
     296:	8b bb       	out	0x1b, r24	; 27
     298:	08 95       	ret
     29a:	85 30       	cpi	r24, 0x05	; 5
     29c:	91 05       	cpc	r25, r1
     29e:	21 f4       	brne	.+8      	; 0x2a8 <_Z9pinChangeii+0x216>
     2a0:	8b b3       	in	r24, 0x1b	; 27
     2a2:	80 62       	ori	r24, 0x20	; 32
     2a4:	8b bb       	out	0x1b, r24	; 27
     2a6:	08 95       	ret
     2a8:	86 30       	cpi	r24, 0x06	; 6
     2aa:	91 05       	cpc	r25, r1
     2ac:	21 f4       	brne	.+8      	; 0x2b6 <_Z9pinChangeii+0x224>
     2ae:	8b b3       	in	r24, 0x1b	; 27
     2b0:	80 64       	ori	r24, 0x40	; 64
     2b2:	8b bb       	out	0x1b, r24	; 27
     2b4:	08 95       	ret
     2b6:	87 30       	cpi	r24, 0x07	; 7
     2b8:	91 05       	cpc	r25, r1
     2ba:	21 f4       	brne	.+8      	; 0x2c4 <_Z9pinChangeii+0x232>
     2bc:	8b b3       	in	r24, 0x1b	; 27
     2be:	80 68       	ori	r24, 0x80	; 128
     2c0:	8b bb       	out	0x1b, r24	; 27
     2c2:	08 95       	ret
     2c4:	8a 30       	cpi	r24, 0x0A	; 10
     2c6:	91 05       	cpc	r25, r1
     2c8:	21 f4       	brne	.+8      	; 0x2d2 <_Z9pinChangeii+0x240>
     2ca:	88 b3       	in	r24, 0x18	; 24
     2cc:	81 60       	ori	r24, 0x01	; 1
     2ce:	88 bb       	out	0x18, r24	; 24
     2d0:	08 95       	ret
     2d2:	8b 30       	cpi	r24, 0x0B	; 11
     2d4:	91 05       	cpc	r25, r1
     2d6:	21 f4       	brne	.+8      	; 0x2e0 <_Z9pinChangeii+0x24e>
     2d8:	88 b3       	in	r24, 0x18	; 24
     2da:	82 60       	ori	r24, 0x02	; 2
     2dc:	88 bb       	out	0x18, r24	; 24
     2de:	08 95       	ret
     2e0:	8c 30       	cpi	r24, 0x0C	; 12
     2e2:	91 05       	cpc	r25, r1
     2e4:	21 f4       	brne	.+8      	; 0x2ee <_Z9pinChangeii+0x25c>
     2e6:	88 b3       	in	r24, 0x18	; 24
     2e8:	84 60       	ori	r24, 0x04	; 4
     2ea:	88 bb       	out	0x18, r24	; 24
     2ec:	08 95       	ret
     2ee:	8d 30       	cpi	r24, 0x0D	; 13
     2f0:	91 05       	cpc	r25, r1
     2f2:	21 f4       	brne	.+8      	; 0x2fc <_Z9pinChangeii+0x26a>
     2f4:	88 b3       	in	r24, 0x18	; 24
     2f6:	88 60       	ori	r24, 0x08	; 8
     2f8:	88 bb       	out	0x18, r24	; 24
     2fa:	08 95       	ret
     2fc:	8e 30       	cpi	r24, 0x0E	; 14
     2fe:	91 05       	cpc	r25, r1
     300:	21 f4       	brne	.+8      	; 0x30a <_Z9pinChangeii+0x278>
     302:	88 b3       	in	r24, 0x18	; 24
     304:	80 61       	ori	r24, 0x10	; 16
     306:	88 bb       	out	0x18, r24	; 24
     308:	08 95       	ret
     30a:	8f 30       	cpi	r24, 0x0F	; 15
     30c:	91 05       	cpc	r25, r1
     30e:	21 f4       	brne	.+8      	; 0x318 <_Z9pinChangeii+0x286>
     310:	88 b3       	in	r24, 0x18	; 24
     312:	80 62       	ori	r24, 0x20	; 32
     314:	88 bb       	out	0x18, r24	; 24
     316:	08 95       	ret
     318:	80 31       	cpi	r24, 0x10	; 16
     31a:	91 05       	cpc	r25, r1
     31c:	21 f4       	brne	.+8      	; 0x326 <_Z9pinChangeii+0x294>
     31e:	88 b3       	in	r24, 0x18	; 24
     320:	80 64       	ori	r24, 0x40	; 64
     322:	88 bb       	out	0x18, r24	; 24
     324:	08 95       	ret
     326:	81 31       	cpi	r24, 0x11	; 17
     328:	91 05       	cpc	r25, r1
     32a:	21 f4       	brne	.+8      	; 0x334 <_Z9pinChangeii+0x2a2>
     32c:	88 b3       	in	r24, 0x18	; 24
     32e:	80 68       	ori	r24, 0x80	; 128
     330:	88 bb       	out	0x18, r24	; 24
     332:	08 95       	ret
     334:	84 31       	cpi	r24, 0x14	; 20
     336:	91 05       	cpc	r25, r1
     338:	21 f4       	brne	.+8      	; 0x342 <_Z9pinChangeii+0x2b0>
     33a:	85 b3       	in	r24, 0x15	; 21
     33c:	81 60       	ori	r24, 0x01	; 1
     33e:	85 bb       	out	0x15, r24	; 21
     340:	08 95       	ret
     342:	85 31       	cpi	r24, 0x15	; 21
     344:	91 05       	cpc	r25, r1
     346:	21 f4       	brne	.+8      	; 0x350 <_Z9pinChangeii+0x2be>
     348:	85 b3       	in	r24, 0x15	; 21
     34a:	82 60       	ori	r24, 0x02	; 2
     34c:	85 bb       	out	0x15, r24	; 21
     34e:	08 95       	ret
     350:	86 31       	cpi	r24, 0x16	; 22
     352:	91 05       	cpc	r25, r1
     354:	21 f4       	brne	.+8      	; 0x35e <_Z9pinChangeii+0x2cc>
     356:	85 b3       	in	r24, 0x15	; 21
     358:	84 60       	ori	r24, 0x04	; 4
     35a:	85 bb       	out	0x15, r24	; 21
     35c:	08 95       	ret
     35e:	87 31       	cpi	r24, 0x17	; 23
     360:	91 05       	cpc	r25, r1
     362:	21 f4       	brne	.+8      	; 0x36c <_Z9pinChangeii+0x2da>
     364:	85 b3       	in	r24, 0x15	; 21
     366:	88 60       	ori	r24, 0x08	; 8
     368:	85 bb       	out	0x15, r24	; 21
     36a:	08 95       	ret
     36c:	88 31       	cpi	r24, 0x18	; 24
     36e:	91 05       	cpc	r25, r1
     370:	21 f4       	brne	.+8      	; 0x37a <_Z9pinChangeii+0x2e8>
     372:	85 b3       	in	r24, 0x15	; 21
     374:	80 61       	ori	r24, 0x10	; 16
     376:	85 bb       	out	0x15, r24	; 21
     378:	08 95       	ret
     37a:	89 31       	cpi	r24, 0x19	; 25
     37c:	91 05       	cpc	r25, r1
     37e:	21 f4       	brne	.+8      	; 0x388 <_Z9pinChangeii+0x2f6>
     380:	85 b3       	in	r24, 0x15	; 21
     382:	80 62       	ori	r24, 0x20	; 32
     384:	85 bb       	out	0x15, r24	; 21
     386:	08 95       	ret
     388:	8a 31       	cpi	r24, 0x1A	; 26
     38a:	91 05       	cpc	r25, r1
     38c:	21 f4       	brne	.+8      	; 0x396 <_Z9pinChangeii+0x304>
     38e:	85 b3       	in	r24, 0x15	; 21
     390:	80 64       	ori	r24, 0x40	; 64
     392:	85 bb       	out	0x15, r24	; 21
     394:	08 95       	ret
     396:	8b 31       	cpi	r24, 0x1B	; 27
     398:	91 05       	cpc	r25, r1
     39a:	21 f4       	brne	.+8      	; 0x3a4 <_Z9pinChangeii+0x312>
     39c:	85 b3       	in	r24, 0x15	; 21
     39e:	80 68       	ori	r24, 0x80	; 128
     3a0:	85 bb       	out	0x15, r24	; 21
     3a2:	08 95       	ret
     3a4:	8e 31       	cpi	r24, 0x1E	; 30
     3a6:	91 05       	cpc	r25, r1
     3a8:	21 f4       	brne	.+8      	; 0x3b2 <_Z9pinChangeii+0x320>
     3aa:	82 b3       	in	r24, 0x12	; 18
     3ac:	81 60       	ori	r24, 0x01	; 1
     3ae:	82 bb       	out	0x12, r24	; 18
     3b0:	08 95       	ret
     3b2:	8f 31       	cpi	r24, 0x1F	; 31
     3b4:	91 05       	cpc	r25, r1
     3b6:	21 f4       	brne	.+8      	; 0x3c0 <_Z9pinChangeii+0x32e>
     3b8:	82 b3       	in	r24, 0x12	; 18
     3ba:	82 60       	ori	r24, 0x02	; 2
     3bc:	82 bb       	out	0x12, r24	; 18
     3be:	08 95       	ret
     3c0:	80 32       	cpi	r24, 0x20	; 32
     3c2:	91 05       	cpc	r25, r1
     3c4:	21 f4       	brne	.+8      	; 0x3ce <_Z9pinChangeii+0x33c>
     3c6:	82 b3       	in	r24, 0x12	; 18
     3c8:	84 60       	ori	r24, 0x04	; 4
     3ca:	82 bb       	out	0x12, r24	; 18
     3cc:	08 95       	ret
     3ce:	81 32       	cpi	r24, 0x21	; 33
     3d0:	91 05       	cpc	r25, r1
     3d2:	21 f4       	brne	.+8      	; 0x3dc <_Z9pinChangeii+0x34a>
     3d4:	82 b3       	in	r24, 0x12	; 18
     3d6:	88 60       	ori	r24, 0x08	; 8
     3d8:	82 bb       	out	0x12, r24	; 18
     3da:	08 95       	ret
     3dc:	82 32       	cpi	r24, 0x22	; 34
     3de:	91 05       	cpc	r25, r1
     3e0:	21 f4       	brne	.+8      	; 0x3ea <_Z9pinChangeii+0x358>
     3e2:	82 b3       	in	r24, 0x12	; 18
     3e4:	80 61       	ori	r24, 0x10	; 16
     3e6:	82 bb       	out	0x12, r24	; 18
     3e8:	08 95       	ret
     3ea:	83 32       	cpi	r24, 0x23	; 35
     3ec:	91 05       	cpc	r25, r1
     3ee:	21 f4       	brne	.+8      	; 0x3f8 <_Z9pinChangeii+0x366>
     3f0:	82 b3       	in	r24, 0x12	; 18
     3f2:	80 62       	ori	r24, 0x20	; 32
     3f4:	82 bb       	out	0x12, r24	; 18
     3f6:	08 95       	ret
     3f8:	84 32       	cpi	r24, 0x24	; 36
     3fa:	91 05       	cpc	r25, r1
     3fc:	21 f4       	brne	.+8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
     3fe:	82 b3       	in	r24, 0x12	; 18
     400:	80 64       	ori	r24, 0x40	; 64
     402:	82 bb       	out	0x12, r24	; 18
     404:	08 95       	ret
     406:	85 97       	sbiw	r24, 0x25	; 37
     408:	19 f4       	brne	.+6      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
     40a:	82 b3       	in	r24, 0x12	; 18
     40c:	80 68       	ori	r24, 0x80	; 128
     40e:	82 bb       	out	0x12, r24	; 18
     410:	08 95       	ret

00000412 <_Z9Lcd4_Portc>:
     412:	cf 93       	push	r28
     414:	c8 2f       	mov	r28, r24
     416:	80 ff       	sbrs	r24, 0
     418:	07 c0       	rjmp	.+14     	; 0x428 <_Z9Lcd4_Portc+0x16>
     41a:	61 e0       	ldi	r22, 0x01	; 1
     41c:	70 e0       	ldi	r23, 0x00	; 0
     41e:	83 e2       	ldi	r24, 0x23	; 35
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     426:	06 c0       	rjmp	.+12     	; 0x434 <_Z9Lcd4_Portc+0x22>
     428:	60 e0       	ldi	r22, 0x00	; 0
     42a:	70 e0       	ldi	r23, 0x00	; 0
     42c:	83 e2       	ldi	r24, 0x23	; 35
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     434:	c1 ff       	sbrs	r28, 1
     436:	07 c0       	rjmp	.+14     	; 0x446 <_Z9Lcd4_Portc+0x34>
     438:	61 e0       	ldi	r22, 0x01	; 1
     43a:	70 e0       	ldi	r23, 0x00	; 0
     43c:	82 e2       	ldi	r24, 0x22	; 34
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     444:	06 c0       	rjmp	.+12     	; 0x452 <_Z9Lcd4_Portc+0x40>
     446:	60 e0       	ldi	r22, 0x00	; 0
     448:	70 e0       	ldi	r23, 0x00	; 0
     44a:	82 e2       	ldi	r24, 0x22	; 34
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     452:	c2 ff       	sbrs	r28, 2
     454:	07 c0       	rjmp	.+14     	; 0x464 <_Z9Lcd4_Portc+0x52>
     456:	61 e0       	ldi	r22, 0x01	; 1
     458:	70 e0       	ldi	r23, 0x00	; 0
     45a:	81 e2       	ldi	r24, 0x21	; 33
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     462:	06 c0       	rjmp	.+12     	; 0x470 <_Z9Lcd4_Portc+0x5e>
     464:	60 e0       	ldi	r22, 0x00	; 0
     466:	70 e0       	ldi	r23, 0x00	; 0
     468:	81 e2       	ldi	r24, 0x21	; 33
     46a:	90 e0       	ldi	r25, 0x00	; 0
     46c:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     470:	c3 ff       	sbrs	r28, 3
     472:	07 c0       	rjmp	.+14     	; 0x482 <_Z9Lcd4_Portc+0x70>
     474:	61 e0       	ldi	r22, 0x01	; 1
     476:	70 e0       	ldi	r23, 0x00	; 0
     478:	80 e2       	ldi	r24, 0x20	; 32
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     480:	06 c0       	rjmp	.+12     	; 0x48e <_Z9Lcd4_Portc+0x7c>
     482:	60 e0       	ldi	r22, 0x00	; 0
     484:	70 e0       	ldi	r23, 0x00	; 0
     486:	80 e2       	ldi	r24, 0x20	; 32
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     48e:	cf 91       	pop	r28
     490:	08 95       	ret

00000492 <_Z8Lcd4_Cmdc>:
     492:	cf 93       	push	r28
     494:	c8 2f       	mov	r28, r24
     496:	60 e0       	ldi	r22, 0x00	; 0
     498:	70 e0       	ldi	r23, 0x00	; 0
     49a:	85 e2       	ldi	r24, 0x25	; 37
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     4a2:	8c 2f       	mov	r24, r28
     4a4:	0e 94 09 02 	call	0x412	; 0x412 <_Z9Lcd4_Portc>
     4a8:	61 e0       	ldi	r22, 0x01	; 1
     4aa:	70 e0       	ldi	r23, 0x00	; 0
     4ac:	84 e2       	ldi	r24, 0x24	; 36
     4ae:	90 e0       	ldi	r25, 0x00	; 0
     4b0:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     4b4:	89 ef       	ldi	r24, 0xF9	; 249
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	01 97       	sbiw	r24, 0x01	; 1
     4ba:	f1 f7       	brne	.-4      	; 0x4b8 <_Z8Lcd4_Cmdc+0x26>
     4bc:	00 c0       	rjmp	.+0      	; 0x4be <_Z8Lcd4_Cmdc+0x2c>
     4be:	00 00       	nop
     4c0:	60 e0       	ldi	r22, 0x00	; 0
     4c2:	70 e0       	ldi	r23, 0x00	; 0
     4c4:	84 e2       	ldi	r24, 0x24	; 36
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     4cc:	89 ef       	ldi	r24, 0xF9	; 249
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	01 97       	sbiw	r24, 0x01	; 1
     4d2:	f1 f7       	brne	.-4      	; 0x4d0 <_Z8Lcd4_Cmdc+0x3e>
     4d4:	00 c0       	rjmp	.+0      	; 0x4d6 <_Z8Lcd4_Cmdc+0x44>
     4d6:	00 00       	nop
     4d8:	cf 91       	pop	r28
     4da:	08 95       	ret

000004dc <_Z10Lcd4_Clearv>:
     4dc:	80 e0       	ldi	r24, 0x00	; 0
     4de:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     4e2:	81 e0       	ldi	r24, 0x01	; 1
     4e4:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     4e8:	08 95       	ret

000004ea <_Z15Lcd4_Set_Cursorcc>:
     4ea:	cf 93       	push	r28
     4ec:	81 30       	cpi	r24, 0x01	; 1
     4ee:	99 f4       	brne	.+38     	; 0x516 <_Z15Lcd4_Set_Cursorcc+0x2c>
     4f0:	80 e8       	ldi	r24, 0x80	; 128
     4f2:	86 0f       	add	r24, r22
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	95 95       	asr	r25
     4f8:	87 95       	ror	r24
     4fa:	95 95       	asr	r25
     4fc:	87 95       	ror	r24
     4fe:	95 95       	asr	r25
     500:	87 95       	ror	r24
     502:	95 95       	asr	r25
     504:	87 95       	ror	r24
     506:	c6 2f       	mov	r28, r22
     508:	cf 70       	andi	r28, 0x0F	; 15
     50a:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     50e:	8c 2f       	mov	r24, r28
     510:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     514:	14 c0       	rjmp	.+40     	; 0x53e <_Z15Lcd4_Set_Cursorcc+0x54>
     516:	82 30       	cpi	r24, 0x02	; 2
     518:	91 f4       	brne	.+36     	; 0x53e <_Z15Lcd4_Set_Cursorcc+0x54>
     51a:	80 ec       	ldi	r24, 0xC0	; 192
     51c:	86 0f       	add	r24, r22
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	95 95       	asr	r25
     522:	87 95       	ror	r24
     524:	95 95       	asr	r25
     526:	87 95       	ror	r24
     528:	95 95       	asr	r25
     52a:	87 95       	ror	r24
     52c:	95 95       	asr	r25
     52e:	87 95       	ror	r24
     530:	c6 2f       	mov	r28, r22
     532:	cf 70       	andi	r28, 0x0F	; 15
     534:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     538:	8c 2f       	mov	r24, r28
     53a:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     53e:	cf 91       	pop	r28
     540:	08 95       	ret

00000542 <_Z9Lcd4_Initv>:
     542:	80 e0       	ldi	r24, 0x00	; 0
     544:	0e 94 09 02 	call	0x412	; 0x412 <_Z9Lcd4_Portc>
     548:	87 e8       	ldi	r24, 0x87	; 135
     54a:	93 e1       	ldi	r25, 0x13	; 19
     54c:	01 97       	sbiw	r24, 0x01	; 1
     54e:	f1 f7       	brne	.-4      	; 0x54c <_Z9Lcd4_Initv+0xa>
     550:	00 c0       	rjmp	.+0      	; 0x552 <_Z9Lcd4_Initv+0x10>
     552:	00 00       	nop
     554:	83 e0       	ldi	r24, 0x03	; 3
     556:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     55a:	81 ee       	ldi	r24, 0xE1	; 225
     55c:	94 e0       	ldi	r25, 0x04	; 4
     55e:	01 97       	sbiw	r24, 0x01	; 1
     560:	f1 f7       	brne	.-4      	; 0x55e <_Z9Lcd4_Initv+0x1c>
     562:	00 c0       	rjmp	.+0      	; 0x564 <_Z9Lcd4_Initv+0x22>
     564:	00 00       	nop
     566:	83 e0       	ldi	r24, 0x03	; 3
     568:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     56c:	8d eb       	ldi	r24, 0xBD	; 189
     56e:	9a e0       	ldi	r25, 0x0A	; 10
     570:	01 97       	sbiw	r24, 0x01	; 1
     572:	f1 f7       	brne	.-4      	; 0x570 <_Z9Lcd4_Initv+0x2e>
     574:	00 c0       	rjmp	.+0      	; 0x576 <_Z9Lcd4_Initv+0x34>
     576:	00 00       	nop
     578:	83 e0       	ldi	r24, 0x03	; 3
     57a:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     57e:	82 e0       	ldi	r24, 0x02	; 2
     580:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     584:	82 e0       	ldi	r24, 0x02	; 2
     586:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     58a:	88 e0       	ldi	r24, 0x08	; 8
     58c:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     596:	8c e0       	ldi	r24, 0x0C	; 12
     598:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     59c:	80 e0       	ldi	r24, 0x00	; 0
     59e:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     5a2:	86 e0       	ldi	r24, 0x06	; 6
     5a4:	0e 94 49 02 	call	0x492	; 0x492 <_Z8Lcd4_Cmdc>
     5a8:	08 95       	ret

000005aa <_Z15Lcd4_Write_Charc>:
     5aa:	cf 93       	push	r28
     5ac:	df 93       	push	r29
     5ae:	d8 2f       	mov	r29, r24
     5b0:	df 70       	andi	r29, 0x0F	; 15
     5b2:	c8 2f       	mov	r28, r24
     5b4:	c0 7f       	andi	r28, 0xF0	; 240
     5b6:	61 e0       	ldi	r22, 0x01	; 1
     5b8:	70 e0       	ldi	r23, 0x00	; 0
     5ba:	85 e2       	ldi	r24, 0x25	; 37
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     5c2:	8c 2f       	mov	r24, r28
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	95 95       	asr	r25
     5c8:	87 95       	ror	r24
     5ca:	95 95       	asr	r25
     5cc:	87 95       	ror	r24
     5ce:	95 95       	asr	r25
     5d0:	87 95       	ror	r24
     5d2:	95 95       	asr	r25
     5d4:	87 95       	ror	r24
     5d6:	0e 94 09 02 	call	0x412	; 0x412 <_Z9Lcd4_Portc>
     5da:	61 e0       	ldi	r22, 0x01	; 1
     5dc:	70 e0       	ldi	r23, 0x00	; 0
     5de:	84 e2       	ldi	r24, 0x24	; 36
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     5e6:	89 ef       	ldi	r24, 0xF9	; 249
     5e8:	90 e0       	ldi	r25, 0x00	; 0
     5ea:	01 97       	sbiw	r24, 0x01	; 1
     5ec:	f1 f7       	brne	.-4      	; 0x5ea <_Z15Lcd4_Write_Charc+0x40>
     5ee:	00 c0       	rjmp	.+0      	; 0x5f0 <_Z15Lcd4_Write_Charc+0x46>
     5f0:	00 00       	nop
     5f2:	60 e0       	ldi	r22, 0x00	; 0
     5f4:	70 e0       	ldi	r23, 0x00	; 0
     5f6:	84 e2       	ldi	r24, 0x24	; 36
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     5fe:	89 ef       	ldi	r24, 0xF9	; 249
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	01 97       	sbiw	r24, 0x01	; 1
     604:	f1 f7       	brne	.-4      	; 0x602 <_Z15Lcd4_Write_Charc+0x58>
     606:	00 c0       	rjmp	.+0      	; 0x608 <_Z15Lcd4_Write_Charc+0x5e>
     608:	00 00       	nop
     60a:	8d 2f       	mov	r24, r29
     60c:	0e 94 09 02 	call	0x412	; 0x412 <_Z9Lcd4_Portc>
     610:	61 e0       	ldi	r22, 0x01	; 1
     612:	70 e0       	ldi	r23, 0x00	; 0
     614:	84 e2       	ldi	r24, 0x24	; 36
     616:	90 e0       	ldi	r25, 0x00	; 0
     618:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     61c:	89 ef       	ldi	r24, 0xF9	; 249
     61e:	90 e0       	ldi	r25, 0x00	; 0
     620:	01 97       	sbiw	r24, 0x01	; 1
     622:	f1 f7       	brne	.-4      	; 0x620 <_Z15Lcd4_Write_Charc+0x76>
     624:	00 c0       	rjmp	.+0      	; 0x626 <_Z15Lcd4_Write_Charc+0x7c>
     626:	00 00       	nop
     628:	60 e0       	ldi	r22, 0x00	; 0
     62a:	70 e0       	ldi	r23, 0x00	; 0
     62c:	84 e2       	ldi	r24, 0x24	; 36
     62e:	90 e0       	ldi	r25, 0x00	; 0
     630:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
     634:	89 ef       	ldi	r24, 0xF9	; 249
     636:	90 e0       	ldi	r25, 0x00	; 0
     638:	01 97       	sbiw	r24, 0x01	; 1
     63a:	f1 f7       	brne	.-4      	; 0x638 <_Z15Lcd4_Write_Charc+0x8e>
     63c:	00 c0       	rjmp	.+0      	; 0x63e <_Z15Lcd4_Write_Charc+0x94>
     63e:	00 00       	nop
     640:	df 91       	pop	r29
     642:	cf 91       	pop	r28
     644:	08 95       	ret

00000646 <_Z17Lcd4_Write_StringPc>:
     646:	0f 93       	push	r16
     648:	1f 93       	push	r17
     64a:	cf 93       	push	r28
     64c:	df 93       	push	r29
     64e:	8c 01       	movw	r16, r24
     650:	c0 e0       	ldi	r28, 0x00	; 0
     652:	d0 e0       	ldi	r29, 0x00	; 0
     654:	f8 01       	movw	r30, r16
     656:	ec 0f       	add	r30, r28
     658:	fd 1f       	adc	r31, r29
     65a:	80 81       	ld	r24, Z
     65c:	88 23       	and	r24, r24
     65e:	21 f0       	breq	.+8      	; 0x668 <_Z17Lcd4_Write_StringPc+0x22>
     660:	0e 94 d5 02 	call	0x5aa	; 0x5aa <_Z15Lcd4_Write_Charc>
     664:	21 96       	adiw	r28, 0x01	; 1
     666:	f6 cf       	rjmp	.-20     	; 0x654 <_Z17Lcd4_Write_StringPc+0xe>
     668:	df 91       	pop	r29
     66a:	cf 91       	pop	r28
     66c:	1f 91       	pop	r17
     66e:	0f 91       	pop	r16
     670:	08 95       	ret

00000672 <_Z8lcd_dispPciiS_>:

char disp[16]="00000000000001";
char result[8] = "000001"; 


void lcd_disp(char data_points[],int r,int c, char w[]){ 
     672:	0f 93       	push	r16
     674:	1f 93       	push	r17
     676:	cf 93       	push	r28
     678:	df 93       	push	r29
     67a:	ec 01       	movw	r28, r24
     67c:	16 2f       	mov	r17, r22
     67e:	04 2f       	mov	r16, r20

	if(w=="clear")Lcd4_Clear();
     680:	20 56       	subi	r18, 0x60	; 96
     682:	30 40       	sbci	r19, 0x00	; 0
     684:	11 f4       	brne	.+4      	; 0x68a <_Z8lcd_dispPciiS_+0x18>
     686:	0e 94 6e 02 	call	0x4dc	; 0x4dc <_Z10Lcd4_Clearv>
	Lcd4_Set_Cursor(r,c);
     68a:	60 2f       	mov	r22, r16
     68c:	81 2f       	mov	r24, r17
     68e:	0e 94 75 02 	call	0x4ea	; 0x4ea <_Z15Lcd4_Set_Cursorcc>
	Lcd4_Write_String(data_points);
     692:	ce 01       	movw	r24, r28
     694:	0e 94 23 03 	call	0x646	; 0x646 <_Z17Lcd4_Write_StringPc>
}
     698:	df 91       	pop	r29
     69a:	cf 91       	pop	r28
     69c:	1f 91       	pop	r17
     69e:	0f 91       	pop	r16
     6a0:	08 95       	ret

000006a2 <_Z8ADC_Initv>:

void ADC_Init(){
	DDRA=0x0;			/* Make ADC port as input */
     6a2:	1a ba       	out	0x1a, r1	; 26
	ADCSRA = 0x87;			/* Enable ADC, fr/128  */
     6a4:	87 e8       	ldi	r24, 0x87	; 135
     6a6:	86 b9       	out	0x06, r24	; 6
	ADMUX = 0x40;			/* Vref: Avcc, ADC channel: 0 */
     6a8:	80 e4       	ldi	r24, 0x40	; 64
     6aa:	87 b9       	out	0x07, r24	; 7
     6ac:	08 95       	ret

000006ae <_Z8ADC_Readc>:
}

int ADC_Read(char channel){
	int Ain,AinLow;
	
	ADMUX=ADMUX|(channel & 0x0f);	/* Set input channel to read */
     6ae:	97 b1       	in	r25, 0x07	; 7
     6b0:	8f 70       	andi	r24, 0x0F	; 15
     6b2:	98 2b       	or	r25, r24
     6b4:	97 b9       	out	0x07, r25	; 7

	ADCSRA |= (1<<ADSC);		/* Start conversion */
     6b6:	86 b1       	in	r24, 0x06	; 6
     6b8:	80 64       	ori	r24, 0x40	; 64
     6ba:	86 b9       	out	0x06, r24	; 6
	while((ADCSRA&(1<<ADIF))==0);	/* Monitor end of conversion interrupt */
     6bc:	34 9b       	sbis	0x06, 4	; 6
     6be:	fe cf       	rjmp	.-4      	; 0x6bc <_Z8ADC_Readc+0xe>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6c0:	83 e0       	ldi	r24, 0x03	; 3
     6c2:	8a 95       	dec	r24
     6c4:	f1 f7       	brne	.-4      	; 0x6c2 <_Z8ADC_Readc+0x14>
     6c6:	00 00       	nop
	_delay_us(10);
	AinLow = (int)ADCL;		/* Read lower byte*/
     6c8:	24 b1       	in	r18, 0x04	; 4
	Ain = (int)ADCH*256;		/* Read higher 2 bits and 
     6ca:	85 b1       	in	r24, 0x05	; 5
     6cc:	90 e0       	ldi	r25, 0x00	; 0
     6ce:	98 2f       	mov	r25, r24
     6d0:	88 27       	eor	r24, r24
					Multiply with weight */
	Ain = Ain + AinLow;				
	return(Ain);			/* Return digital value*/
}
     6d2:	82 0f       	add	r24, r18
     6d4:	91 1d       	adc	r25, r1
     6d6:	08 95       	ret

000006d8 <_Z5sumitPii>:

/*************** threshold ***************/
double m=0,c=0; // gradient and slope

double sumit(int data_points[],int length){
     6d8:	8f 92       	push	r8
     6da:	9f 92       	push	r9
     6dc:	af 92       	push	r10
     6de:	bf 92       	push	r11
     6e0:	ef 92       	push	r14
     6e2:	ff 92       	push	r15
     6e4:	0f 93       	push	r16
     6e6:	1f 93       	push	r17
     6e8:	cf 93       	push	r28
     6ea:	df 93       	push	r29
     6ec:	7c 01       	movw	r14, r24
     6ee:	8b 01       	movw	r16, r22
	 int i;
	 double sum=0;
	 for(int i=1;i<=length;i++)sum+=data_points[i];
     6f0:	c1 e0       	ldi	r28, 0x01	; 1
     6f2:	d0 e0       	ldi	r29, 0x00	; 0
/*************** threshold ***************/
double m=0,c=0; // gradient and slope

double sumit(int data_points[],int length){
	 int i;
	 double sum=0;
     6f4:	81 2c       	mov	r8, r1
     6f6:	91 2c       	mov	r9, r1
     6f8:	54 01       	movw	r10, r8
	 for(int i=1;i<=length;i++)sum+=data_points[i];
     6fa:	0c 17       	cp	r16, r28
     6fc:	1d 07       	cpc	r17, r29
     6fe:	bc f0       	brlt	.+46     	; 0x72e <_Z5sumitPii+0x56>
     700:	fe 01       	movw	r30, r28
     702:	ee 0f       	add	r30, r30
     704:	ff 1f       	adc	r31, r31
     706:	ee 0d       	add	r30, r14
     708:	ff 1d       	adc	r31, r15
     70a:	60 81       	ld	r22, Z
     70c:	71 81       	ldd	r23, Z+1	; 0x01
     70e:	07 2e       	mov	r0, r23
     710:	00 0c       	add	r0, r0
     712:	88 0b       	sbc	r24, r24
     714:	99 0b       	sbc	r25, r25
     716:	0e 94 85 07 	call	0xf0a	; 0xf0a <__floatsisf>
     71a:	9b 01       	movw	r18, r22
     71c:	ac 01       	movw	r20, r24
     71e:	c5 01       	movw	r24, r10
     720:	b4 01       	movw	r22, r8
     722:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <__addsf3>
     726:	4b 01       	movw	r8, r22
     728:	5c 01       	movw	r10, r24
     72a:	21 96       	adiw	r28, 0x01	; 1
     72c:	e6 cf       	rjmp	.-52     	; 0x6fa <_Z5sumitPii+0x22>

	 return sum;
}
     72e:	c5 01       	movw	r24, r10
     730:	b4 01       	movw	r22, r8
     732:	df 91       	pop	r29
     734:	cf 91       	pop	r28
     736:	1f 91       	pop	r17
     738:	0f 91       	pop	r16
     73a:	ff 90       	pop	r15
     73c:	ef 90       	pop	r14
     73e:	bf 90       	pop	r11
     740:	af 90       	pop	r10
     742:	9f 90       	pop	r9
     744:	8f 90       	pop	r8
     746:	08 95       	ret

00000748 <_Z5xysumPii>:

double xysum(int data_points[],int length){
     748:	8f 92       	push	r8
     74a:	9f 92       	push	r9
     74c:	af 92       	push	r10
     74e:	bf 92       	push	r11
     750:	ef 92       	push	r14
     752:	ff 92       	push	r15
     754:	0f 93       	push	r16
     756:	1f 93       	push	r17
     758:	cf 93       	push	r28
     75a:	df 93       	push	r29
     75c:	7c 01       	movw	r14, r24
     75e:	8b 01       	movw	r16, r22
	 int i;
	 double sum=0;
	 for(int i=1;i<=length;i++)sum+=(i)*data_points[i];
     760:	c1 e0       	ldi	r28, 0x01	; 1
     762:	d0 e0       	ldi	r29, 0x00	; 0
	 return sum;
}

double xysum(int data_points[],int length){
	 int i;
	 double sum=0;
     764:	81 2c       	mov	r8, r1
     766:	91 2c       	mov	r9, r1
     768:	54 01       	movw	r10, r8
	 for(int i=1;i<=length;i++)sum+=(i)*data_points[i];
     76a:	0c 17       	cp	r16, r28
     76c:	1d 07       	cpc	r17, r29
     76e:	f4 f0       	brlt	.+60     	; 0x7ac <_Z5xysumPii+0x64>
     770:	fe 01       	movw	r30, r28
     772:	ee 0f       	add	r30, r30
     774:	ff 1f       	adc	r31, r31
     776:	ee 0d       	add	r30, r14
     778:	ff 1d       	adc	r31, r15
     77a:	80 81       	ld	r24, Z
     77c:	91 81       	ldd	r25, Z+1	; 0x01
     77e:	c8 9f       	mul	r28, r24
     780:	b0 01       	movw	r22, r0
     782:	c9 9f       	mul	r28, r25
     784:	70 0d       	add	r23, r0
     786:	d8 9f       	mul	r29, r24
     788:	70 0d       	add	r23, r0
     78a:	11 24       	eor	r1, r1
     78c:	07 2e       	mov	r0, r23
     78e:	00 0c       	add	r0, r0
     790:	88 0b       	sbc	r24, r24
     792:	99 0b       	sbc	r25, r25
     794:	0e 94 85 07 	call	0xf0a	; 0xf0a <__floatsisf>
     798:	9b 01       	movw	r18, r22
     79a:	ac 01       	movw	r20, r24
     79c:	c5 01       	movw	r24, r10
     79e:	b4 01       	movw	r22, r8
     7a0:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <__addsf3>
     7a4:	4b 01       	movw	r8, r22
     7a6:	5c 01       	movw	r10, r24
     7a8:	21 96       	adiw	r28, 0x01	; 1
     7aa:	df cf       	rjmp	.-66     	; 0x76a <_Z5xysumPii+0x22>

	 return sum;
}
     7ac:	c5 01       	movw	r24, r10
     7ae:	b4 01       	movw	r22, r8
     7b0:	df 91       	pop	r29
     7b2:	cf 91       	pop	r28
     7b4:	1f 91       	pop	r17
     7b6:	0f 91       	pop	r16
     7b8:	ff 90       	pop	r15
     7ba:	ef 90       	pop	r14
     7bc:	bf 90       	pop	r11
     7be:	af 90       	pop	r10
     7c0:	9f 90       	pop	r9
     7c2:	8f 90       	pop	r8
     7c4:	08 95       	ret

000007c6 <_Z10regressionPid>:

void regression(int data_points[],double n){
     7c6:	4f 92       	push	r4
     7c8:	5f 92       	push	r5
     7ca:	6f 92       	push	r6
     7cc:	7f 92       	push	r7
     7ce:	8f 92       	push	r8
     7d0:	9f 92       	push	r9
     7d2:	af 92       	push	r10
     7d4:	bf 92       	push	r11
     7d6:	cf 92       	push	r12
     7d8:	df 92       	push	r13
     7da:	ef 92       	push	r14
     7dc:	ff 92       	push	r15
     7de:	cf 93       	push	r28
     7e0:	df 93       	push	r29
     7e2:	cd b7       	in	r28, 0x3d	; 61
     7e4:	de b7       	in	r29, 0x3e	; 62
     7e6:	2a 97       	sbiw	r28, 0x0a	; 10
     7e8:	0f b6       	in	r0, 0x3f	; 63
     7ea:	f8 94       	cli
     7ec:	de bf       	out	0x3e, r29	; 62
     7ee:	0f be       	out	0x3f, r0	; 63
     7f0:	cd bf       	out	0x3d, r28	; 61
     7f2:	9a 87       	std	Y+10, r25	; 0x0a
     7f4:	89 87       	std	Y+9, r24	; 0x09
     7f6:	6a 01       	movw	r12, r20
     7f8:	7b 01       	movw	r14, r22
	double squarex= (n)*(n+1)*(2*n+1)/6.0;
     7fa:	20 e0       	ldi	r18, 0x00	; 0
     7fc:	30 e0       	ldi	r19, 0x00	; 0
     7fe:	40 e8       	ldi	r20, 0x80	; 128
     800:	5f e3       	ldi	r21, 0x3F	; 63
     802:	c7 01       	movw	r24, r14
     804:	b6 01       	movw	r22, r12
     806:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <__addsf3>
     80a:	4b 01       	movw	r8, r22
     80c:	5c 01       	movw	r10, r24
     80e:	9b 01       	movw	r18, r22
     810:	ac 01       	movw	r20, r24
     812:	c7 01       	movw	r24, r14
     814:	b6 01       	movw	r22, r12
     816:	0e 94 35 08 	call	0x106a	; 0x106a <__mulsf3>
     81a:	2b 01       	movw	r4, r22
     81c:	3c 01       	movw	r6, r24
     81e:	a7 01       	movw	r20, r14
     820:	96 01       	movw	r18, r12
     822:	c7 01       	movw	r24, r14
     824:	b6 01       	movw	r22, r12
     826:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <__addsf3>
     82a:	20 e0       	ldi	r18, 0x00	; 0
     82c:	30 e0       	ldi	r19, 0x00	; 0
     82e:	40 e8       	ldi	r20, 0x80	; 128
     830:	5f e3       	ldi	r21, 0x3F	; 63
     832:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <__addsf3>
     836:	9b 01       	movw	r18, r22
     838:	ac 01       	movw	r20, r24
     83a:	c3 01       	movw	r24, r6
     83c:	b2 01       	movw	r22, r4
     83e:	0e 94 35 08 	call	0x106a	; 0x106a <__mulsf3>
     842:	20 e0       	ldi	r18, 0x00	; 0
     844:	30 e0       	ldi	r19, 0x00	; 0
     846:	40 ec       	ldi	r20, 0xC0	; 192
     848:	50 e4       	ldi	r21, 0x40	; 64
     84a:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__divsf3>
     84e:	6d 83       	std	Y+5, r22	; 0x05
     850:	7e 83       	std	Y+6, r23	; 0x06
     852:	8f 83       	std	Y+7, r24	; 0x07
     854:	98 87       	std	Y+8, r25	; 0x08
	double xbar = (n+1)/2.0;
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	5f e3       	ldi	r21, 0x3F	; 63
     85e:	c5 01       	movw	r24, r10
     860:	b4 01       	movw	r22, r8
     862:	0e 94 35 08 	call	0x106a	; 0x106a <__mulsf3>
     866:	4b 01       	movw	r8, r22
     868:	5c 01       	movw	r10, r24
	double ybar = sumit(data_points,n)/n;
     86a:	c7 01       	movw	r24, r14
     86c:	b6 01       	movw	r22, r12
     86e:	0e 94 4d 07 	call	0xe9a	; 0xe9a <__fixsfsi>
     872:	69 83       	std	Y+1, r22	; 0x01
     874:	7a 83       	std	Y+2, r23	; 0x02
     876:	8b 83       	std	Y+3, r24	; 0x03
     878:	9c 83       	std	Y+4, r25	; 0x04
     87a:	69 81       	ldd	r22, Y+1	; 0x01
     87c:	7a 81       	ldd	r23, Y+2	; 0x02
     87e:	89 85       	ldd	r24, Y+9	; 0x09
     880:	9a 85       	ldd	r25, Y+10	; 0x0a
     882:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <_Z5sumitPii>
     886:	a7 01       	movw	r20, r14
     888:	96 01       	movw	r18, r12
     88a:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__divsf3>
     88e:	2b 01       	movw	r4, r22
     890:	3c 01       	movw	r6, r24

	m=(xysum(data_points,n)- n*xbar*ybar)/( squarex - n*xbar*xbar );
     892:	69 81       	ldd	r22, Y+1	; 0x01
     894:	7a 81       	ldd	r23, Y+2	; 0x02
     896:	89 85       	ldd	r24, Y+9	; 0x09
     898:	9a 85       	ldd	r25, Y+10	; 0x0a
     89a:	0e 94 a4 03 	call	0x748	; 0x748 <_Z5xysumPii>
     89e:	69 83       	std	Y+1, r22	; 0x01
     8a0:	7a 83       	std	Y+2, r23	; 0x02
     8a2:	8b 83       	std	Y+3, r24	; 0x03
     8a4:	9c 83       	std	Y+4, r25	; 0x04
     8a6:	a5 01       	movw	r20, r10
     8a8:	94 01       	movw	r18, r8
     8aa:	c7 01       	movw	r24, r14
     8ac:	b6 01       	movw	r22, r12
     8ae:	0e 94 35 08 	call	0x106a	; 0x106a <__mulsf3>
     8b2:	6b 01       	movw	r12, r22
     8b4:	7c 01       	movw	r14, r24
     8b6:	9b 01       	movw	r18, r22
     8b8:	ac 01       	movw	r20, r24
     8ba:	c3 01       	movw	r24, r6
     8bc:	b2 01       	movw	r22, r4
     8be:	0e 94 35 08 	call	0x106a	; 0x106a <__mulsf3>
     8c2:	9b 01       	movw	r18, r22
     8c4:	ac 01       	movw	r20, r24
     8c6:	69 81       	ldd	r22, Y+1	; 0x01
     8c8:	7a 81       	ldd	r23, Y+2	; 0x02
     8ca:	8b 81       	ldd	r24, Y+3	; 0x03
     8cc:	9c 81       	ldd	r25, Y+4	; 0x04
     8ce:	0e 94 69 06 	call	0xcd2	; 0xcd2 <__subsf3>
     8d2:	69 83       	std	Y+1, r22	; 0x01
     8d4:	7a 83       	std	Y+2, r23	; 0x02
     8d6:	8b 83       	std	Y+3, r24	; 0x03
     8d8:	9c 83       	std	Y+4, r25	; 0x04
     8da:	a7 01       	movw	r20, r14
     8dc:	96 01       	movw	r18, r12
     8de:	c5 01       	movw	r24, r10
     8e0:	b4 01       	movw	r22, r8
     8e2:	0e 94 35 08 	call	0x106a	; 0x106a <__mulsf3>
     8e6:	9b 01       	movw	r18, r22
     8e8:	ac 01       	movw	r20, r24
     8ea:	6d 81       	ldd	r22, Y+5	; 0x05
     8ec:	7e 81       	ldd	r23, Y+6	; 0x06
     8ee:	8f 81       	ldd	r24, Y+7	; 0x07
     8f0:	98 85       	ldd	r25, Y+8	; 0x08
     8f2:	0e 94 69 06 	call	0xcd2	; 0xcd2 <__subsf3>
     8f6:	9b 01       	movw	r18, r22
     8f8:	ac 01       	movw	r20, r24
     8fa:	69 81       	ldd	r22, Y+1	; 0x01
     8fc:	7a 81       	ldd	r23, Y+2	; 0x02
     8fe:	8b 81       	ldd	r24, Y+3	; 0x03
     900:	9c 81       	ldd	r25, Y+4	; 0x04
     902:	0e 94 db 06 	call	0xdb6	; 0xdb6 <__divsf3>
     906:	9b 01       	movw	r18, r22
     908:	ac 01       	movw	r20, r24
     90a:	60 93 d0 00 	sts	0x00D0, r22	; 0x8000d0 <m>
     90e:	70 93 d1 00 	sts	0x00D1, r23	; 0x8000d1 <m+0x1>
     912:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <m+0x2>
     916:	90 93 d3 00 	sts	0x00D3, r25	; 0x8000d3 <m+0x3>
	c=ybar-m*xbar;
     91a:	c5 01       	movw	r24, r10
     91c:	b4 01       	movw	r22, r8
     91e:	0e 94 35 08 	call	0x106a	; 0x106a <__mulsf3>
     922:	9b 01       	movw	r18, r22
     924:	ac 01       	movw	r20, r24
     926:	c3 01       	movw	r24, r6
     928:	b2 01       	movw	r22, r4
     92a:	0e 94 69 06 	call	0xcd2	; 0xcd2 <__subsf3>
     92e:	60 93 cc 00 	sts	0x00CC, r22	; 0x8000cc <__data_end>
     932:	70 93 cd 00 	sts	0x00CD, r23	; 0x8000cd <__data_end+0x1>
     936:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__data_end+0x2>
     93a:	90 93 cf 00 	sts	0x00CF, r25	; 0x8000cf <__data_end+0x3>
}
     93e:	2a 96       	adiw	r28, 0x0a	; 10
     940:	0f b6       	in	r0, 0x3f	; 63
     942:	f8 94       	cli
     944:	de bf       	out	0x3e, r29	; 62
     946:	0f be       	out	0x3f, r0	; 63
     948:	cd bf       	out	0x3d, r28	; 61
     94a:	df 91       	pop	r29
     94c:	cf 91       	pop	r28
     94e:	ff 90       	pop	r15
     950:	ef 90       	pop	r14
     952:	df 90       	pop	r13
     954:	cf 90       	pop	r12
     956:	bf 90       	pop	r11
     958:	af 90       	pop	r10
     95a:	9f 90       	pop	r9
     95c:	8f 90       	pop	r8
     95e:	7f 90       	pop	r7
     960:	6f 90       	pop	r6
     962:	5f 90       	pop	r5
     964:	4f 90       	pop	r4
     966:	08 95       	ret

00000968 <main>:
/*************** end threshold ***************/


int main(void){
     968:	8f 92       	push	r8
     96a:	9f 92       	push	r9
     96c:	af 92       	push	r10
     96e:	bf 92       	push	r11
     970:	cf 92       	push	r12
     972:	df 92       	push	r13
     974:	ef 92       	push	r14
     976:	ff 92       	push	r15
     978:	0f 93       	push	r16
     97a:	1f 93       	push	r17
     97c:	cf 93       	push	r28
     97e:	df 93       	push	r29
     980:	cd b7       	in	r28, 0x3d	; 61
     982:	de b7       	in	r29, 0x3e	; 62
     984:	c6 58       	subi	r28, 0x86	; 134
     986:	d1 09       	sbc	r29, r1
     988:	0f b6       	in	r0, 0x3f	; 63
     98a:	f8 94       	cli
     98c:	de bf       	out	0x3e, r29	; 62
     98e:	0f be       	out	0x3f, r0	; 63
     990:	cd bf       	out	0x3d, r28	; 61
    DDRD = 0xFF;  // #
     992:	8f ef       	ldi	r24, 0xFF	; 255
     994:	81 bb       	out	0x11, r24	; 17
	DDRC = 0xFF;  //for lcd
     996:	84 bb       	out	0x14, r24	; 20
	DDRA = 0x00;  //Analog input
     998:	1a ba       	out	0x1a, r1	; 26
	
	
	ADC_Init();
     99a:	0e 94 51 03 	call	0x6a2	; 0x6a2 <_Z8ADC_Initv>

	Lcd4_Init(); //Initializing the LCD screen
     99e:	0e 94 a1 02 	call	0x542	; 0x542 <_Z9Lcd4_Initv>
	lcd_disp("Starting Pulse ~)",1,0,"");
     9a2:	27 e7       	ldi	r18, 0x77	; 119
     9a4:	30 e0       	ldi	r19, 0x00	; 0
     9a6:	40 e0       	ldi	r20, 0x00	; 0
     9a8:	50 e0       	ldi	r21, 0x00	; 0
     9aa:	61 e0       	ldi	r22, 0x01	; 1
     9ac:	70 e0       	ldi	r23, 0x00	; 0
     9ae:	86 e6       	ldi	r24, 0x66	; 102
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	0e 94 39 03 	call	0x672	; 0x672 <_Z8lcd_dispPciiS_>
	lcd_disp("Sensor *_*",2,0,"");
     9b6:	27 e7       	ldi	r18, 0x77	; 119
     9b8:	30 e0       	ldi	r19, 0x00	; 0
     9ba:	40 e0       	ldi	r20, 0x00	; 0
     9bc:	50 e0       	ldi	r21, 0x00	; 0
     9be:	62 e0       	ldi	r22, 0x02	; 2
     9c0:	70 e0       	ldi	r23, 0x00	; 0
     9c2:	88 e7       	ldi	r24, 0x78	; 120
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	0e 94 39 03 	call	0x672	; 0x672 <_Z8lcd_dispPciiS_>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     9ca:	2f e3       	ldi	r18, 0x3F	; 63
     9cc:	3d e0       	ldi	r19, 0x0D	; 13
     9ce:	83 e0       	ldi	r24, 0x03	; 3
     9d0:	21 50       	subi	r18, 0x01	; 1
     9d2:	30 40       	sbci	r19, 0x00	; 0
     9d4:	80 40       	sbci	r24, 0x00	; 0
     9d6:	e1 f7       	brne	.-8      	; 0x9d0 <main+0x68>
     9d8:	00 c0       	rjmp	.+0      	; 0x9da <main+0x72>
     9da:	00 00       	nop

	_delay_ms(1000);
	
	lcd_disp("Place your",1,0,"clear");
     9dc:	20 e6       	ldi	r18, 0x60	; 96
     9de:	30 e0       	ldi	r19, 0x00	; 0
     9e0:	40 e0       	ldi	r20, 0x00	; 0
     9e2:	50 e0       	ldi	r21, 0x00	; 0
     9e4:	61 e0       	ldi	r22, 0x01	; 1
     9e6:	70 e0       	ldi	r23, 0x00	; 0
     9e8:	83 e8       	ldi	r24, 0x83	; 131
     9ea:	90 e0       	ldi	r25, 0x00	; 0
     9ec:	0e 94 39 03 	call	0x672	; 0x672 <_Z8lcd_dispPciiS_>
	lcd_disp("fingertip",2,0,"");
     9f0:	27 e7       	ldi	r18, 0x77	; 119
     9f2:	30 e0       	ldi	r19, 0x00	; 0
     9f4:	40 e0       	ldi	r20, 0x00	; 0
     9f6:	50 e0       	ldi	r21, 0x00	; 0
     9f8:	62 e0       	ldi	r22, 0x02	; 2
     9fa:	70 e0       	ldi	r23, 0x00	; 0
     9fc:	82 ea       	ldi	r24, 0xA2	; 162
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	0e 94 39 03 	call	0x672	; 0x672 <_Z8lcd_dispPciiS_>
     a04:	9f e7       	ldi	r25, 0x7F	; 127
     a06:	aa e1       	ldi	r26, 0x1A	; 26
     a08:	b6 e0       	ldi	r27, 0x06	; 6
     a0a:	91 50       	subi	r25, 0x01	; 1
     a0c:	a0 40       	sbci	r26, 0x00	; 0
     a0e:	b0 40       	sbci	r27, 0x00	; 0
     a10:	e1 f7       	brne	.-8      	; 0xa0a <main+0xa2>
     a12:	00 c0       	rjmp	.+0      	; 0xa14 <main+0xac>
     a14:	00 00       	nop
	_delay_ms(2000);
	
	lcd_disp("Keep placing ~",1,0,"clear");
     a16:	20 e6       	ldi	r18, 0x60	; 96
     a18:	30 e0       	ldi	r19, 0x00	; 0
     a1a:	40 e0       	ldi	r20, 0x00	; 0
     a1c:	50 e0       	ldi	r21, 0x00	; 0
     a1e:	61 e0       	ldi	r22, 0x01	; 1
     a20:	70 e0       	ldi	r23, 0x00	; 0
     a22:	8e e8       	ldi	r24, 0x8E	; 142
     a24:	90 e0       	ldi	r25, 0x00	; 0
     a26:	0e 94 39 03 	call	0x672	; 0x672 <_Z8lcd_dispPciiS_>
	lcd_disp("your fingertip",2,0,"");
     a2a:	27 e7       	ldi	r18, 0x77	; 119
     a2c:	30 e0       	ldi	r19, 0x00	; 0
     a2e:	40 e0       	ldi	r20, 0x00	; 0
     a30:	50 e0       	ldi	r21, 0x00	; 0
     a32:	62 e0       	ldi	r22, 0x02	; 2
     a34:	70 e0       	ldi	r23, 0x00	; 0
     a36:	8d e9       	ldi	r24, 0x9D	; 157
     a38:	90 e0       	ldi	r25, 0x00	; 0
     a3a:	0e 94 39 03 	call	0x672	; 0x672 <_Z8lcd_dispPciiS_>
     a3e:	ef eb       	ldi	r30, 0xBF	; 191
     a40:	f7 e2       	ldi	r31, 0x27	; 39
     a42:	29 e0       	ldi	r18, 0x09	; 9
     a44:	e1 50       	subi	r30, 0x01	; 1
     a46:	f0 40       	sbci	r31, 0x00	; 0
     a48:	20 40       	sbci	r18, 0x00	; 0
     a4a:	e1 f7       	brne	.-8      	; 0xa44 <main+0xdc>
     a4c:	00 c0       	rjmp	.+0      	; 0xa4e <main+0xe6>
     a4e:	00 00       	nop
		double sampling_rate = 0.100 ;	   	// actually this is the _delay_ms val
		int time_limit = 10 ;  				 //in seconds
		int se=time_limit/(sampling_rate*2);
		int data_points[se+1];

	data_points[0]=0;
     a50:	1a 8a       	std	Y+18, r1	; 0x12
     a52:	19 8a       	std	Y+17, r1	; 0x11
	int l=1023;
	
	char val[6]; //temporary variable for itoa

	
	for(i=0;i<time_limit/(sampling_rate*2);i++){	
     a54:	00 e0       	ldi	r16, 0x00	; 0
     a56:	10 e0       	ldi	r17, 0x00	; 0
     a58:	b8 01       	movw	r22, r16
     a5a:	01 2e       	mov	r0, r17
     a5c:	00 0c       	add	r0, r0
     a5e:	88 0b       	sbc	r24, r24
     a60:	99 0b       	sbc	r25, r25
     a62:	0e 94 85 07 	call	0xf0a	; 0xf0a <__floatsisf>
     a66:	20 e0       	ldi	r18, 0x00	; 0
     a68:	30 e0       	ldi	r19, 0x00	; 0
     a6a:	48 e4       	ldi	r20, 0x48	; 72
     a6c:	52 e4       	ldi	r21, 0x42	; 66
     a6e:	0e 94 d6 06 	call	0xdac	; 0xdac <__cmpsf2>
     a72:	88 23       	and	r24, r24
     a74:	0c f0       	brlt	.+2      	; 0xa78 <main+0x110>
     a76:	64 c0       	rjmp	.+200    	; 0xb40 <main+0x1d8>
		data_points[i+1]=ADC_Read(0);
     a78:	0f 5f       	subi	r16, 0xFF	; 255
     a7a:	1f 4f       	sbci	r17, 0xFF	; 255
     a7c:	80 e0       	ldi	r24, 0x00	; 0
     a7e:	0e 94 57 03 	call	0x6ae	; 0x6ae <_Z8ADC_Readc>
     a82:	78 01       	movw	r14, r16
     a84:	ee 0c       	add	r14, r14
     a86:	ff 1c       	adc	r15, r15
     a88:	a1 e0       	ldi	r26, 0x01	; 1
     a8a:	b0 e0       	ldi	r27, 0x00	; 0
     a8c:	ac 0f       	add	r26, r28
     a8e:	bd 1f       	adc	r27, r29
     a90:	ea 0e       	add	r14, r26
     a92:	fb 1e       	adc	r15, r27
     a94:	f7 01       	movw	r30, r14
     a96:	91 8b       	std	Z+17, r25	; 0x11
     a98:	80 8b       	std	Z+16, r24	; 0x10
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     a9a:	4a e0       	ldi	r20, 0x0A	; 10
     a9c:	bd 01       	movw	r22, r26
     a9e:	0e 94 ca 08 	call	0x1194	; 0x1194 <__itoa_ncheck>
		
		itoa(data_points[i+1],val,10);
		lcd_disp("Measuring.. *_*",1,0,"clear");
     aa2:	20 e6       	ldi	r18, 0x60	; 96
     aa4:	30 e0       	ldi	r19, 0x00	; 0
     aa6:	40 e0       	ldi	r20, 0x00	; 0
     aa8:	50 e0       	ldi	r21, 0x00	; 0
     aaa:	61 e0       	ldi	r22, 0x01	; 1
     aac:	70 e0       	ldi	r23, 0x00	; 0
     aae:	8c ea       	ldi	r24, 0xAC	; 172
     ab0:	90 e0       	ldi	r25, 0x00	; 0
     ab2:	0e 94 39 03 	call	0x672	; 0x672 <_Z8lcd_dispPciiS_>
		
		int k=16*(data_points[i+1]-200)/375;
     ab6:	d7 01       	movw	r26, r14
     ab8:	50 96       	adiw	r26, 0x10	; 16
     aba:	8d 91       	ld	r24, X+
     abc:	9c 91       	ld	r25, X
     abe:	51 97       	sbiw	r26, 0x11	; 17
     ac0:	88 5c       	subi	r24, 0xC8	; 200
     ac2:	91 09       	sbc	r25, r1
     ac4:	82 95       	swap	r24
     ac6:	92 95       	swap	r25
     ac8:	90 7f       	andi	r25, 0xF0	; 240
     aca:	98 27       	eor	r25, r24
     acc:	80 7f       	andi	r24, 0xF0	; 240
     ace:	98 27       	eor	r25, r24
     ad0:	67 e7       	ldi	r22, 0x77	; 119
     ad2:	71 e0       	ldi	r23, 0x01	; 1
     ad4:	0e 94 a2 08 	call	0x1144	; 0x1144 <__divmodhi4>
     ad8:	86 2f       	mov	r24, r22
     ada:	97 2f       	mov	r25, r23
		
		char anim[16]="";
     adc:	fe 01       	movw	r30, r28
     ade:	e9 58       	subi	r30, 0x89	; 137
     ae0:	ff 4f       	sbci	r31, 0xFF	; 255
     ae2:	11 92       	st	Z+, r1
     ae4:	11 92       	st	Z+, r1
     ae6:	2e e0       	ldi	r18, 0x0E	; 14
     ae8:	df 01       	movw	r26, r30
     aea:	1d 92       	st	X+, r1
     aec:	2a 95       	dec	r18
     aee:	e9 f7       	brne	.-6      	; 0xaea <main+0x182>
		
		int h=0;
		for(h=0;h<k;h++){
     af0:	20 e0       	ldi	r18, 0x00	; 0
     af2:	30 e0       	ldi	r19, 0x00	; 0
     af4:	26 17       	cp	r18, r22
     af6:	37 07       	cpc	r19, r23
     af8:	5c f4       	brge	.+22     	; 0xb10 <main+0x1a8>
			anim[h]='~';
     afa:	e7 e7       	ldi	r30, 0x77	; 119
     afc:	f0 e0       	ldi	r31, 0x00	; 0
     afe:	ec 0f       	add	r30, r28
     b00:	fd 1f       	adc	r31, r29
     b02:	e2 0f       	add	r30, r18
     b04:	f3 1f       	adc	r31, r19
     b06:	4e e7       	ldi	r20, 0x7E	; 126
     b08:	40 83       	st	Z, r20
		int k=16*(data_points[i+1]-200)/375;
		
		char anim[16]="";
		
		int h=0;
		for(h=0;h<k;h++){
     b0a:	2f 5f       	subi	r18, 0xFF	; 255
     b0c:	3f 4f       	sbci	r19, 0xFF	; 255
     b0e:	f2 cf       	rjmp	.-28     	; 0xaf4 <main+0x18c>
     b10:	4a e0       	ldi	r20, 0x0A	; 10
     b12:	be 01       	movw	r22, r28
     b14:	6f 5f       	subi	r22, 0xFF	; 255
     b16:	7f 4f       	sbci	r23, 0xFF	; 255
     b18:	0e 94 ca 08 	call	0x1194	; 0x1194 <__itoa_ncheck>
			anim[h]='~';
		}
		itoa(k,val,10);
		lcd_disp(anim,2,0,"");
     b1c:	27 e7       	ldi	r18, 0x77	; 119
     b1e:	30 e0       	ldi	r19, 0x00	; 0
     b20:	40 e0       	ldi	r20, 0x00	; 0
     b22:	50 e0       	ldi	r21, 0x00	; 0
     b24:	62 e0       	ldi	r22, 0x02	; 2
     b26:	70 e0       	ldi	r23, 0x00	; 0
     b28:	ce 01       	movw	r24, r28
     b2a:	89 58       	subi	r24, 0x89	; 137
     b2c:	9f 4f       	sbci	r25, 0xFF	; 255
     b2e:	0e 94 39 03 	call	0x672	; 0x672 <_Z8lcd_dispPciiS_>
     b32:	e7 ea       	ldi	r30, 0xA7	; 167
     b34:	f1 e6       	ldi	r31, 0x61	; 97
     b36:	31 97       	sbiw	r30, 0x01	; 1
     b38:	f1 f7       	brne	.-4      	; 0xb36 <main+0x1ce>
     b3a:	00 c0       	rjmp	.+0      	; 0xb3c <main+0x1d4>
     b3c:	00 00       	nop
	int l=1023;
	
	char val[6]; //temporary variable for itoa

	
	for(i=0;i<time_limit/(sampling_rate*2);i++){	
     b3e:	8c cf       	rjmp	.-232    	; 0xa58 <main+0xf0>
		lcd_disp(anim,2,0,"");
		_delay_ms(sampling_rate*1000);
	
	}

	regression(data_points,se);
     b40:	40 e0       	ldi	r20, 0x00	; 0
     b42:	50 e0       	ldi	r21, 0x00	; 0
     b44:	68 e4       	ldi	r22, 0x48	; 72
     b46:	72 e4       	ldi	r23, 0x42	; 66
     b48:	ce 01       	movw	r24, r28
     b4a:	41 96       	adiw	r24, 0x11	; 17
     b4c:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <_Z10regressionPid>


	
	/* for debugging purposes -> h and l records the peaks */
	int h=0;
	int l=1023;
     b50:	0f 2e       	mov	r0, r31
     b52:	aa 24       	eor	r10, r10
     b54:	aa 94       	dec	r10
     b56:	f3 e0       	ldi	r31, 0x03	; 3
     b58:	bf 2e       	mov	r11, r31
     b5a:	f0 2d       	mov	r31, r0
	/* /timing data */


	
	/* for debugging purposes -> h and l records the peaks */
	int h=0;
     b5c:	c1 2c       	mov	r12, r1
     b5e:	d1 2c       	mov	r13, r1
	
	_delay_ms(3000);
	int i;
	int thresh=300;
	int count=0;
	int count2=0; //modified peak counting algo
     b60:	81 2c       	mov	r8, r1
     b62:	91 2c       	mov	r9, r1
	}

	regression(data_points,se);

	//recorded wave form
	for(i=0;i<time_limit/(sampling_rate*2);i++){	
     b64:	00 e0       	ldi	r16, 0x00	; 0
     b66:	10 e0       	ldi	r17, 0x00	; 0
     b68:	b8 01       	movw	r22, r16
     b6a:	01 2e       	mov	r0, r17
     b6c:	00 0c       	add	r0, r0
     b6e:	88 0b       	sbc	r24, r24
     b70:	99 0b       	sbc	r25, r25
     b72:	0e 94 85 07 	call	0xf0a	; 0xf0a <__floatsisf>
     b76:	20 e0       	ldi	r18, 0x00	; 0
     b78:	30 e0       	ldi	r19, 0x00	; 0
     b7a:	48 e4       	ldi	r20, 0x48	; 72
     b7c:	52 e4       	ldi	r21, 0x42	; 66
     b7e:	0e 94 d6 06 	call	0xdac	; 0xdac <__cmpsf2>
     b82:	88 23       	and	r24, r24
     b84:	0c f0       	brlt	.+2      	; 0xb88 <main+0x220>
     b86:	59 c0       	rjmp	.+178    	; 0xc3a <main+0x2d2>
		thresh=(i+2)*m+c;
     b88:	78 01       	movw	r14, r16
     b8a:	f2 e0       	ldi	r31, 0x02	; 2
     b8c:	ef 0e       	add	r14, r31
     b8e:	f1 1c       	adc	r15, r1
     b90:	b7 01       	movw	r22, r14
     b92:	0f 2c       	mov	r0, r15
     b94:	00 0c       	add	r0, r0
     b96:	88 0b       	sbc	r24, r24
     b98:	99 0b       	sbc	r25, r25
     b9a:	0e 94 85 07 	call	0xf0a	; 0xf0a <__floatsisf>
     b9e:	20 91 d0 00 	lds	r18, 0x00D0	; 0x8000d0 <m>
     ba2:	30 91 d1 00 	lds	r19, 0x00D1	; 0x8000d1 <m+0x1>
     ba6:	40 91 d2 00 	lds	r20, 0x00D2	; 0x8000d2 <m+0x2>
     baa:	50 91 d3 00 	lds	r21, 0x00D3	; 0x8000d3 <m+0x3>
     bae:	0e 94 35 08 	call	0x106a	; 0x106a <__mulsf3>
     bb2:	20 91 cc 00 	lds	r18, 0x00CC	; 0x8000cc <__data_end>
     bb6:	30 91 cd 00 	lds	r19, 0x00CD	; 0x8000cd <__data_end+0x1>
     bba:	40 91 ce 00 	lds	r20, 0x00CE	; 0x8000ce <__data_end+0x2>
     bbe:	50 91 cf 00 	lds	r21, 0x00CF	; 0x8000cf <__data_end+0x3>
     bc2:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <__addsf3>
     bc6:	0e 94 4d 07 	call	0xe9a	; 0xe9a <__fixsfsi>

		int a=data_points[i+1];//current value
     bca:	98 01       	movw	r18, r16
     bcc:	2f 5f       	subi	r18, 0xFF	; 255
     bce:	3f 4f       	sbci	r19, 0xFF	; 255
     bd0:	f9 01       	movw	r30, r18
     bd2:	ee 0f       	add	r30, r30
     bd4:	ff 1f       	adc	r31, r31
     bd6:	81 e0       	ldi	r24, 0x01	; 1
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	8c 0f       	add	r24, r28
     bdc:	9d 1f       	adc	r25, r29
     bde:	e8 0f       	add	r30, r24
     be0:	f9 1f       	adc	r31, r25
     be2:	80 89       	ldd	r24, Z+16	; 0x10
     be4:	91 89       	ldd	r25, Z+17	; 0x11
		char temp[11]="";
		char ccount[3];

		if(a>h)h=a; //max peak
     be6:	c8 16       	cp	r12, r24
     be8:	d9 06       	cpc	r13, r25
     bea:	0c f4       	brge	.+2      	; 0xbee <main+0x286>
     bec:	6c 01       	movw	r12, r24
		if(a<l)l=a; //min peak
     bee:	8a 15       	cp	r24, r10
     bf0:	9b 05       	cpc	r25, r11
     bf2:	0c f4       	brge	.+2      	; 0xbf6 <main+0x28e>
     bf4:	5c 01       	movw	r10, r24
		
		if(a>thresh){
     bf6:	68 17       	cp	r22, r24
     bf8:	79 07       	cpc	r23, r25
     bfa:	ec f4       	brge	.+58     	; 0xc36 <main+0x2ce>
			count+=1; //peak counting]
			if(a>data_points[i] && a>data_points[i+2]){
     bfc:	00 0f       	add	r16, r16
     bfe:	11 1f       	adc	r17, r17
     c00:	e1 e0       	ldi	r30, 0x01	; 1
     c02:	f0 e0       	ldi	r31, 0x00	; 0
     c04:	ec 0f       	add	r30, r28
     c06:	fd 1f       	adc	r31, r29
     c08:	e0 0f       	add	r30, r16
     c0a:	f1 1f       	adc	r31, r17
     c0c:	40 89       	ldd	r20, Z+16	; 0x10
     c0e:	51 89       	ldd	r21, Z+17	; 0x11
     c10:	48 17       	cp	r20, r24
     c12:	59 07       	cpc	r21, r25
     c14:	84 f4       	brge	.+32     	; 0xc36 <main+0x2ce>
     c16:	ee 0c       	add	r14, r14
     c18:	ff 1c       	adc	r15, r15
     c1a:	e1 e0       	ldi	r30, 0x01	; 1
     c1c:	f0 e0       	ldi	r31, 0x00	; 0
     c1e:	ec 0f       	add	r30, r28
     c20:	fd 1f       	adc	r31, r29
     c22:	ee 0d       	add	r30, r14
     c24:	ff 1d       	adc	r31, r15
     c26:	40 89       	ldd	r20, Z+16	; 0x10
     c28:	51 89       	ldd	r21, Z+17	; 0x11
     c2a:	48 17       	cp	r20, r24
     c2c:	59 07       	cpc	r21, r25
     c2e:	1c f4       	brge	.+6      	; 0xc36 <main+0x2ce>
				count2+=1;
     c30:	9f ef       	ldi	r25, 0xFF	; 255
     c32:	89 1a       	sub	r8, r25
     c34:	99 0a       	sbc	r9, r25
	}

	regression(data_points,se);

	//recorded wave form
	for(i=0;i<time_limit/(sampling_rate*2);i++){	
     c36:	89 01       	movw	r16, r18
     c38:	97 cf       	rjmp	.-210    	; 0xb68 <main+0x200>
			
		}
	}

	//displaying the heart rate
	char bpm[10]="HeartRate";
     c3a:	8a e0       	ldi	r24, 0x0A	; 10
     c3c:	e1 ec       	ldi	r30, 0xC1	; 193
     c3e:	f0 e0       	ldi	r31, 0x00	; 0
     c40:	de 01       	movw	r26, r28
     c42:	17 96       	adiw	r26, 0x07	; 7
     c44:	01 90       	ld	r0, Z+
     c46:	0d 92       	st	X+, r0
     c48:	8a 95       	dec	r24
     c4a:	e1 f7       	brne	.-8      	; 0xc44 <main+0x2dc>
	lcd_disp(bpm,1,0,"clear");
     c4c:	20 e6       	ldi	r18, 0x60	; 96
     c4e:	30 e0       	ldi	r19, 0x00	; 0
     c50:	40 e0       	ldi	r20, 0x00	; 0
     c52:	50 e0       	ldi	r21, 0x00	; 0
     c54:	61 e0       	ldi	r22, 0x01	; 1
     c56:	70 e0       	ldi	r23, 0x00	; 0
     c58:	ce 01       	movw	r24, r28
     c5a:	07 96       	adiw	r24, 0x07	; 7
     c5c:	0e 94 39 03 	call	0x672	; 0x672 <_Z8lcd_dispPciiS_>
	
	itoa(count2*(60/time_limit),val,10);
     c60:	c4 01       	movw	r24, r8
     c62:	88 0f       	add	r24, r24
     c64:	99 1f       	adc	r25, r25
     c66:	88 0d       	add	r24, r8
     c68:	99 1d       	adc	r25, r9
     c6a:	88 0f       	add	r24, r24
     c6c:	99 1f       	adc	r25, r25
     c6e:	4a e0       	ldi	r20, 0x0A	; 10
     c70:	8e 01       	movw	r16, r28
     c72:	0f 5f       	subi	r16, 0xFF	; 255
     c74:	1f 4f       	sbci	r17, 0xFF	; 255
     c76:	b8 01       	movw	r22, r16
     c78:	0e 94 ca 08 	call	0x1194	; 0x1194 <__itoa_ncheck>

	strcat(val," bpm");
     c7c:	d8 01       	movw	r26, r16
     c7e:	0d 90       	ld	r0, X+
     c80:	00 20       	and	r0, r0
     c82:	e9 f7       	brne	.-6      	; 0xc7e <main+0x316>
     c84:	11 97       	sbiw	r26, 0x01	; 1
     c86:	85 e0       	ldi	r24, 0x05	; 5
     c88:	ec eb       	ldi	r30, 0xBC	; 188
     c8a:	f0 e0       	ldi	r31, 0x00	; 0
     c8c:	01 90       	ld	r0, Z+
     c8e:	0d 92       	st	X+, r0
     c90:	8a 95       	dec	r24
     c92:	e1 f7       	brne	.-8      	; 0xc8c <main+0x324>
	lcd_disp(val,2,4,"");
     c94:	27 e7       	ldi	r18, 0x77	; 119
     c96:	30 e0       	ldi	r19, 0x00	; 0
     c98:	44 e0       	ldi	r20, 0x04	; 4
     c9a:	50 e0       	ldi	r21, 0x00	; 0
     c9c:	62 e0       	ldi	r22, 0x02	; 2
     c9e:	70 e0       	ldi	r23, 0x00	; 0
     ca0:	c8 01       	movw	r24, r16
     ca2:	0e 94 39 03 	call	0x672	; 0x672 <_Z8lcd_dispPciiS_>


}
     ca6:	80 e0       	ldi	r24, 0x00	; 0
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	ca 57       	subi	r28, 0x7A	; 122
     cac:	df 4f       	sbci	r29, 0xFF	; 255
     cae:	0f b6       	in	r0, 0x3f	; 63
     cb0:	f8 94       	cli
     cb2:	de bf       	out	0x3e, r29	; 62
     cb4:	0f be       	out	0x3f, r0	; 63
     cb6:	cd bf       	out	0x3d, r28	; 61
     cb8:	df 91       	pop	r29
     cba:	cf 91       	pop	r28
     cbc:	1f 91       	pop	r17
     cbe:	0f 91       	pop	r16
     cc0:	ff 90       	pop	r15
     cc2:	ef 90       	pop	r14
     cc4:	df 90       	pop	r13
     cc6:	cf 90       	pop	r12
     cc8:	bf 90       	pop	r11
     cca:	af 90       	pop	r10
     ccc:	9f 90       	pop	r9
     cce:	8f 90       	pop	r8
     cd0:	08 95       	ret

00000cd2 <__subsf3>:
     cd2:	50 58       	subi	r21, 0x80	; 128

00000cd4 <__addsf3>:
     cd4:	bb 27       	eor	r27, r27
     cd6:	aa 27       	eor	r26, r26
     cd8:	0e 94 81 06 	call	0xd02	; 0xd02 <__addsf3x>
     cdc:	0c 94 fb 07 	jmp	0xff6	; 0xff6 <__fp_round>
     ce0:	0e 94 ed 07 	call	0xfda	; 0xfda <__fp_pscA>
     ce4:	38 f0       	brcs	.+14     	; 0xcf4 <__addsf3+0x20>
     ce6:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <__fp_pscB>
     cea:	20 f0       	brcs	.+8      	; 0xcf4 <__addsf3+0x20>
     cec:	39 f4       	brne	.+14     	; 0xcfc <__addsf3+0x28>
     cee:	9f 3f       	cpi	r25, 0xFF	; 255
     cf0:	19 f4       	brne	.+6      	; 0xcf8 <__addsf3+0x24>
     cf2:	26 f4       	brtc	.+8      	; 0xcfc <__addsf3+0x28>
     cf4:	0c 94 ea 07 	jmp	0xfd4	; 0xfd4 <__fp_nan>
     cf8:	0e f4       	brtc	.+2      	; 0xcfc <__addsf3+0x28>
     cfa:	e0 95       	com	r30
     cfc:	e7 fb       	bst	r30, 7
     cfe:	0c 94 e4 07 	jmp	0xfc8	; 0xfc8 <__fp_inf>

00000d02 <__addsf3x>:
     d02:	e9 2f       	mov	r30, r25
     d04:	0e 94 0c 08 	call	0x1018	; 0x1018 <__fp_split3>
     d08:	58 f3       	brcs	.-42     	; 0xce0 <__addsf3+0xc>
     d0a:	ba 17       	cp	r27, r26
     d0c:	62 07       	cpc	r22, r18
     d0e:	73 07       	cpc	r23, r19
     d10:	84 07       	cpc	r24, r20
     d12:	95 07       	cpc	r25, r21
     d14:	20 f0       	brcs	.+8      	; 0xd1e <__addsf3x+0x1c>
     d16:	79 f4       	brne	.+30     	; 0xd36 <__addsf3x+0x34>
     d18:	a6 f5       	brtc	.+104    	; 0xd82 <__addsf3x+0x80>
     d1a:	0c 94 2e 08 	jmp	0x105c	; 0x105c <__fp_zero>
     d1e:	0e f4       	brtc	.+2      	; 0xd22 <__addsf3x+0x20>
     d20:	e0 95       	com	r30
     d22:	0b 2e       	mov	r0, r27
     d24:	ba 2f       	mov	r27, r26
     d26:	a0 2d       	mov	r26, r0
     d28:	0b 01       	movw	r0, r22
     d2a:	b9 01       	movw	r22, r18
     d2c:	90 01       	movw	r18, r0
     d2e:	0c 01       	movw	r0, r24
     d30:	ca 01       	movw	r24, r20
     d32:	a0 01       	movw	r20, r0
     d34:	11 24       	eor	r1, r1
     d36:	ff 27       	eor	r31, r31
     d38:	59 1b       	sub	r21, r25
     d3a:	99 f0       	breq	.+38     	; 0xd62 <__addsf3x+0x60>
     d3c:	59 3f       	cpi	r21, 0xF9	; 249
     d3e:	50 f4       	brcc	.+20     	; 0xd54 <__addsf3x+0x52>
     d40:	50 3e       	cpi	r21, 0xE0	; 224
     d42:	68 f1       	brcs	.+90     	; 0xd9e <__addsf3x+0x9c>
     d44:	1a 16       	cp	r1, r26
     d46:	f0 40       	sbci	r31, 0x00	; 0
     d48:	a2 2f       	mov	r26, r18
     d4a:	23 2f       	mov	r18, r19
     d4c:	34 2f       	mov	r19, r20
     d4e:	44 27       	eor	r20, r20
     d50:	58 5f       	subi	r21, 0xF8	; 248
     d52:	f3 cf       	rjmp	.-26     	; 0xd3a <__addsf3x+0x38>
     d54:	46 95       	lsr	r20
     d56:	37 95       	ror	r19
     d58:	27 95       	ror	r18
     d5a:	a7 95       	ror	r26
     d5c:	f0 40       	sbci	r31, 0x00	; 0
     d5e:	53 95       	inc	r21
     d60:	c9 f7       	brne	.-14     	; 0xd54 <__addsf3x+0x52>
     d62:	7e f4       	brtc	.+30     	; 0xd82 <__addsf3x+0x80>
     d64:	1f 16       	cp	r1, r31
     d66:	ba 0b       	sbc	r27, r26
     d68:	62 0b       	sbc	r22, r18
     d6a:	73 0b       	sbc	r23, r19
     d6c:	84 0b       	sbc	r24, r20
     d6e:	ba f0       	brmi	.+46     	; 0xd9e <__addsf3x+0x9c>
     d70:	91 50       	subi	r25, 0x01	; 1
     d72:	a1 f0       	breq	.+40     	; 0xd9c <__addsf3x+0x9a>
     d74:	ff 0f       	add	r31, r31
     d76:	bb 1f       	adc	r27, r27
     d78:	66 1f       	adc	r22, r22
     d7a:	77 1f       	adc	r23, r23
     d7c:	88 1f       	adc	r24, r24
     d7e:	c2 f7       	brpl	.-16     	; 0xd70 <__addsf3x+0x6e>
     d80:	0e c0       	rjmp	.+28     	; 0xd9e <__addsf3x+0x9c>
     d82:	ba 0f       	add	r27, r26
     d84:	62 1f       	adc	r22, r18
     d86:	73 1f       	adc	r23, r19
     d88:	84 1f       	adc	r24, r20
     d8a:	48 f4       	brcc	.+18     	; 0xd9e <__addsf3x+0x9c>
     d8c:	87 95       	ror	r24
     d8e:	77 95       	ror	r23
     d90:	67 95       	ror	r22
     d92:	b7 95       	ror	r27
     d94:	f7 95       	ror	r31
     d96:	9e 3f       	cpi	r25, 0xFE	; 254
     d98:	08 f0       	brcs	.+2      	; 0xd9c <__addsf3x+0x9a>
     d9a:	b0 cf       	rjmp	.-160    	; 0xcfc <__addsf3+0x28>
     d9c:	93 95       	inc	r25
     d9e:	88 0f       	add	r24, r24
     da0:	08 f0       	brcs	.+2      	; 0xda4 <__addsf3x+0xa2>
     da2:	99 27       	eor	r25, r25
     da4:	ee 0f       	add	r30, r30
     da6:	97 95       	ror	r25
     da8:	87 95       	ror	r24
     daa:	08 95       	ret

00000dac <__cmpsf2>:
     dac:	0e 94 c0 07 	call	0xf80	; 0xf80 <__fp_cmp>
     db0:	08 f4       	brcc	.+2      	; 0xdb4 <__cmpsf2+0x8>
     db2:	81 e0       	ldi	r24, 0x01	; 1
     db4:	08 95       	ret

00000db6 <__divsf3>:
     db6:	0e 94 ef 06 	call	0xdde	; 0xdde <__divsf3x>
     dba:	0c 94 fb 07 	jmp	0xff6	; 0xff6 <__fp_round>
     dbe:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <__fp_pscB>
     dc2:	58 f0       	brcs	.+22     	; 0xdda <__divsf3+0x24>
     dc4:	0e 94 ed 07 	call	0xfda	; 0xfda <__fp_pscA>
     dc8:	40 f0       	brcs	.+16     	; 0xdda <__divsf3+0x24>
     dca:	29 f4       	brne	.+10     	; 0xdd6 <__divsf3+0x20>
     dcc:	5f 3f       	cpi	r21, 0xFF	; 255
     dce:	29 f0       	breq	.+10     	; 0xdda <__divsf3+0x24>
     dd0:	0c 94 e4 07 	jmp	0xfc8	; 0xfc8 <__fp_inf>
     dd4:	51 11       	cpse	r21, r1
     dd6:	0c 94 2f 08 	jmp	0x105e	; 0x105e <__fp_szero>
     dda:	0c 94 ea 07 	jmp	0xfd4	; 0xfd4 <__fp_nan>

00000dde <__divsf3x>:
     dde:	0e 94 0c 08 	call	0x1018	; 0x1018 <__fp_split3>
     de2:	68 f3       	brcs	.-38     	; 0xdbe <__divsf3+0x8>

00000de4 <__divsf3_pse>:
     de4:	99 23       	and	r25, r25
     de6:	b1 f3       	breq	.-20     	; 0xdd4 <__divsf3+0x1e>
     de8:	55 23       	and	r21, r21
     dea:	91 f3       	breq	.-28     	; 0xdd0 <__divsf3+0x1a>
     dec:	95 1b       	sub	r25, r21
     dee:	55 0b       	sbc	r21, r21
     df0:	bb 27       	eor	r27, r27
     df2:	aa 27       	eor	r26, r26
     df4:	62 17       	cp	r22, r18
     df6:	73 07       	cpc	r23, r19
     df8:	84 07       	cpc	r24, r20
     dfa:	38 f0       	brcs	.+14     	; 0xe0a <__divsf3_pse+0x26>
     dfc:	9f 5f       	subi	r25, 0xFF	; 255
     dfe:	5f 4f       	sbci	r21, 0xFF	; 255
     e00:	22 0f       	add	r18, r18
     e02:	33 1f       	adc	r19, r19
     e04:	44 1f       	adc	r20, r20
     e06:	aa 1f       	adc	r26, r26
     e08:	a9 f3       	breq	.-22     	; 0xdf4 <__divsf3_pse+0x10>
     e0a:	35 d0       	rcall	.+106    	; 0xe76 <__divsf3_pse+0x92>
     e0c:	0e 2e       	mov	r0, r30
     e0e:	3a f0       	brmi	.+14     	; 0xe1e <__divsf3_pse+0x3a>
     e10:	e0 e8       	ldi	r30, 0x80	; 128
     e12:	32 d0       	rcall	.+100    	; 0xe78 <__divsf3_pse+0x94>
     e14:	91 50       	subi	r25, 0x01	; 1
     e16:	50 40       	sbci	r21, 0x00	; 0
     e18:	e6 95       	lsr	r30
     e1a:	00 1c       	adc	r0, r0
     e1c:	ca f7       	brpl	.-14     	; 0xe10 <__divsf3_pse+0x2c>
     e1e:	2b d0       	rcall	.+86     	; 0xe76 <__divsf3_pse+0x92>
     e20:	fe 2f       	mov	r31, r30
     e22:	29 d0       	rcall	.+82     	; 0xe76 <__divsf3_pse+0x92>
     e24:	66 0f       	add	r22, r22
     e26:	77 1f       	adc	r23, r23
     e28:	88 1f       	adc	r24, r24
     e2a:	bb 1f       	adc	r27, r27
     e2c:	26 17       	cp	r18, r22
     e2e:	37 07       	cpc	r19, r23
     e30:	48 07       	cpc	r20, r24
     e32:	ab 07       	cpc	r26, r27
     e34:	b0 e8       	ldi	r27, 0x80	; 128
     e36:	09 f0       	breq	.+2      	; 0xe3a <__divsf3_pse+0x56>
     e38:	bb 0b       	sbc	r27, r27
     e3a:	80 2d       	mov	r24, r0
     e3c:	bf 01       	movw	r22, r30
     e3e:	ff 27       	eor	r31, r31
     e40:	93 58       	subi	r25, 0x83	; 131
     e42:	5f 4f       	sbci	r21, 0xFF	; 255
     e44:	3a f0       	brmi	.+14     	; 0xe54 <__divsf3_pse+0x70>
     e46:	9e 3f       	cpi	r25, 0xFE	; 254
     e48:	51 05       	cpc	r21, r1
     e4a:	78 f0       	brcs	.+30     	; 0xe6a <__divsf3_pse+0x86>
     e4c:	0c 94 e4 07 	jmp	0xfc8	; 0xfc8 <__fp_inf>
     e50:	0c 94 2f 08 	jmp	0x105e	; 0x105e <__fp_szero>
     e54:	5f 3f       	cpi	r21, 0xFF	; 255
     e56:	e4 f3       	brlt	.-8      	; 0xe50 <__divsf3_pse+0x6c>
     e58:	98 3e       	cpi	r25, 0xE8	; 232
     e5a:	d4 f3       	brlt	.-12     	; 0xe50 <__divsf3_pse+0x6c>
     e5c:	86 95       	lsr	r24
     e5e:	77 95       	ror	r23
     e60:	67 95       	ror	r22
     e62:	b7 95       	ror	r27
     e64:	f7 95       	ror	r31
     e66:	9f 5f       	subi	r25, 0xFF	; 255
     e68:	c9 f7       	brne	.-14     	; 0xe5c <__divsf3_pse+0x78>
     e6a:	88 0f       	add	r24, r24
     e6c:	91 1d       	adc	r25, r1
     e6e:	96 95       	lsr	r25
     e70:	87 95       	ror	r24
     e72:	97 f9       	bld	r25, 7
     e74:	08 95       	ret
     e76:	e1 e0       	ldi	r30, 0x01	; 1
     e78:	66 0f       	add	r22, r22
     e7a:	77 1f       	adc	r23, r23
     e7c:	88 1f       	adc	r24, r24
     e7e:	bb 1f       	adc	r27, r27
     e80:	62 17       	cp	r22, r18
     e82:	73 07       	cpc	r23, r19
     e84:	84 07       	cpc	r24, r20
     e86:	ba 07       	cpc	r27, r26
     e88:	20 f0       	brcs	.+8      	; 0xe92 <__divsf3_pse+0xae>
     e8a:	62 1b       	sub	r22, r18
     e8c:	73 0b       	sbc	r23, r19
     e8e:	84 0b       	sbc	r24, r20
     e90:	ba 0b       	sbc	r27, r26
     e92:	ee 1f       	adc	r30, r30
     e94:	88 f7       	brcc	.-30     	; 0xe78 <__divsf3_pse+0x94>
     e96:	e0 95       	com	r30
     e98:	08 95       	ret

00000e9a <__fixsfsi>:
     e9a:	0e 94 54 07 	call	0xea8	; 0xea8 <__fixunssfsi>
     e9e:	68 94       	set
     ea0:	b1 11       	cpse	r27, r1
     ea2:	0c 94 2f 08 	jmp	0x105e	; 0x105e <__fp_szero>
     ea6:	08 95       	ret

00000ea8 <__fixunssfsi>:
     ea8:	0e 94 14 08 	call	0x1028	; 0x1028 <__fp_splitA>
     eac:	88 f0       	brcs	.+34     	; 0xed0 <__fixunssfsi+0x28>
     eae:	9f 57       	subi	r25, 0x7F	; 127
     eb0:	98 f0       	brcs	.+38     	; 0xed8 <__fixunssfsi+0x30>
     eb2:	b9 2f       	mov	r27, r25
     eb4:	99 27       	eor	r25, r25
     eb6:	b7 51       	subi	r27, 0x17	; 23
     eb8:	b0 f0       	brcs	.+44     	; 0xee6 <__fixunssfsi+0x3e>
     eba:	e1 f0       	breq	.+56     	; 0xef4 <__fixunssfsi+0x4c>
     ebc:	66 0f       	add	r22, r22
     ebe:	77 1f       	adc	r23, r23
     ec0:	88 1f       	adc	r24, r24
     ec2:	99 1f       	adc	r25, r25
     ec4:	1a f0       	brmi	.+6      	; 0xecc <__fixunssfsi+0x24>
     ec6:	ba 95       	dec	r27
     ec8:	c9 f7       	brne	.-14     	; 0xebc <__fixunssfsi+0x14>
     eca:	14 c0       	rjmp	.+40     	; 0xef4 <__fixunssfsi+0x4c>
     ecc:	b1 30       	cpi	r27, 0x01	; 1
     ece:	91 f0       	breq	.+36     	; 0xef4 <__fixunssfsi+0x4c>
     ed0:	0e 94 2e 08 	call	0x105c	; 0x105c <__fp_zero>
     ed4:	b1 e0       	ldi	r27, 0x01	; 1
     ed6:	08 95       	ret
     ed8:	0c 94 2e 08 	jmp	0x105c	; 0x105c <__fp_zero>
     edc:	67 2f       	mov	r22, r23
     ede:	78 2f       	mov	r23, r24
     ee0:	88 27       	eor	r24, r24
     ee2:	b8 5f       	subi	r27, 0xF8	; 248
     ee4:	39 f0       	breq	.+14     	; 0xef4 <__fixunssfsi+0x4c>
     ee6:	b9 3f       	cpi	r27, 0xF9	; 249
     ee8:	cc f3       	brlt	.-14     	; 0xedc <__fixunssfsi+0x34>
     eea:	86 95       	lsr	r24
     eec:	77 95       	ror	r23
     eee:	67 95       	ror	r22
     ef0:	b3 95       	inc	r27
     ef2:	d9 f7       	brne	.-10     	; 0xeea <__fixunssfsi+0x42>
     ef4:	3e f4       	brtc	.+14     	; 0xf04 <__fixunssfsi+0x5c>
     ef6:	90 95       	com	r25
     ef8:	80 95       	com	r24
     efa:	70 95       	com	r23
     efc:	61 95       	neg	r22
     efe:	7f 4f       	sbci	r23, 0xFF	; 255
     f00:	8f 4f       	sbci	r24, 0xFF	; 255
     f02:	9f 4f       	sbci	r25, 0xFF	; 255
     f04:	08 95       	ret

00000f06 <__floatunsisf>:
     f06:	e8 94       	clt
     f08:	09 c0       	rjmp	.+18     	; 0xf1c <__floatsisf+0x12>

00000f0a <__floatsisf>:
     f0a:	97 fb       	bst	r25, 7
     f0c:	3e f4       	brtc	.+14     	; 0xf1c <__floatsisf+0x12>
     f0e:	90 95       	com	r25
     f10:	80 95       	com	r24
     f12:	70 95       	com	r23
     f14:	61 95       	neg	r22
     f16:	7f 4f       	sbci	r23, 0xFF	; 255
     f18:	8f 4f       	sbci	r24, 0xFF	; 255
     f1a:	9f 4f       	sbci	r25, 0xFF	; 255
     f1c:	99 23       	and	r25, r25
     f1e:	a9 f0       	breq	.+42     	; 0xf4a <__floatsisf+0x40>
     f20:	f9 2f       	mov	r31, r25
     f22:	96 e9       	ldi	r25, 0x96	; 150
     f24:	bb 27       	eor	r27, r27
     f26:	93 95       	inc	r25
     f28:	f6 95       	lsr	r31
     f2a:	87 95       	ror	r24
     f2c:	77 95       	ror	r23
     f2e:	67 95       	ror	r22
     f30:	b7 95       	ror	r27
     f32:	f1 11       	cpse	r31, r1
     f34:	f8 cf       	rjmp	.-16     	; 0xf26 <__floatsisf+0x1c>
     f36:	fa f4       	brpl	.+62     	; 0xf76 <__floatsisf+0x6c>
     f38:	bb 0f       	add	r27, r27
     f3a:	11 f4       	brne	.+4      	; 0xf40 <__floatsisf+0x36>
     f3c:	60 ff       	sbrs	r22, 0
     f3e:	1b c0       	rjmp	.+54     	; 0xf76 <__floatsisf+0x6c>
     f40:	6f 5f       	subi	r22, 0xFF	; 255
     f42:	7f 4f       	sbci	r23, 0xFF	; 255
     f44:	8f 4f       	sbci	r24, 0xFF	; 255
     f46:	9f 4f       	sbci	r25, 0xFF	; 255
     f48:	16 c0       	rjmp	.+44     	; 0xf76 <__floatsisf+0x6c>
     f4a:	88 23       	and	r24, r24
     f4c:	11 f0       	breq	.+4      	; 0xf52 <__floatsisf+0x48>
     f4e:	96 e9       	ldi	r25, 0x96	; 150
     f50:	11 c0       	rjmp	.+34     	; 0xf74 <__floatsisf+0x6a>
     f52:	77 23       	and	r23, r23
     f54:	21 f0       	breq	.+8      	; 0xf5e <__floatsisf+0x54>
     f56:	9e e8       	ldi	r25, 0x8E	; 142
     f58:	87 2f       	mov	r24, r23
     f5a:	76 2f       	mov	r23, r22
     f5c:	05 c0       	rjmp	.+10     	; 0xf68 <__floatsisf+0x5e>
     f5e:	66 23       	and	r22, r22
     f60:	71 f0       	breq	.+28     	; 0xf7e <__floatsisf+0x74>
     f62:	96 e8       	ldi	r25, 0x86	; 134
     f64:	86 2f       	mov	r24, r22
     f66:	70 e0       	ldi	r23, 0x00	; 0
     f68:	60 e0       	ldi	r22, 0x00	; 0
     f6a:	2a f0       	brmi	.+10     	; 0xf76 <__floatsisf+0x6c>
     f6c:	9a 95       	dec	r25
     f6e:	66 0f       	add	r22, r22
     f70:	77 1f       	adc	r23, r23
     f72:	88 1f       	adc	r24, r24
     f74:	da f7       	brpl	.-10     	; 0xf6c <__floatsisf+0x62>
     f76:	88 0f       	add	r24, r24
     f78:	96 95       	lsr	r25
     f7a:	87 95       	ror	r24
     f7c:	97 f9       	bld	r25, 7
     f7e:	08 95       	ret

00000f80 <__fp_cmp>:
     f80:	99 0f       	add	r25, r25
     f82:	00 08       	sbc	r0, r0
     f84:	55 0f       	add	r21, r21
     f86:	aa 0b       	sbc	r26, r26
     f88:	e0 e8       	ldi	r30, 0x80	; 128
     f8a:	fe ef       	ldi	r31, 0xFE	; 254
     f8c:	16 16       	cp	r1, r22
     f8e:	17 06       	cpc	r1, r23
     f90:	e8 07       	cpc	r30, r24
     f92:	f9 07       	cpc	r31, r25
     f94:	c0 f0       	brcs	.+48     	; 0xfc6 <__fp_cmp+0x46>
     f96:	12 16       	cp	r1, r18
     f98:	13 06       	cpc	r1, r19
     f9a:	e4 07       	cpc	r30, r20
     f9c:	f5 07       	cpc	r31, r21
     f9e:	98 f0       	brcs	.+38     	; 0xfc6 <__fp_cmp+0x46>
     fa0:	62 1b       	sub	r22, r18
     fa2:	73 0b       	sbc	r23, r19
     fa4:	84 0b       	sbc	r24, r20
     fa6:	95 0b       	sbc	r25, r21
     fa8:	39 f4       	brne	.+14     	; 0xfb8 <__fp_cmp+0x38>
     faa:	0a 26       	eor	r0, r26
     fac:	61 f0       	breq	.+24     	; 0xfc6 <__fp_cmp+0x46>
     fae:	23 2b       	or	r18, r19
     fb0:	24 2b       	or	r18, r20
     fb2:	25 2b       	or	r18, r21
     fb4:	21 f4       	brne	.+8      	; 0xfbe <__fp_cmp+0x3e>
     fb6:	08 95       	ret
     fb8:	0a 26       	eor	r0, r26
     fba:	09 f4       	brne	.+2      	; 0xfbe <__fp_cmp+0x3e>
     fbc:	a1 40       	sbci	r26, 0x01	; 1
     fbe:	a6 95       	lsr	r26
     fc0:	8f ef       	ldi	r24, 0xFF	; 255
     fc2:	81 1d       	adc	r24, r1
     fc4:	81 1d       	adc	r24, r1
     fc6:	08 95       	ret

00000fc8 <__fp_inf>:
     fc8:	97 f9       	bld	r25, 7
     fca:	9f 67       	ori	r25, 0x7F	; 127
     fcc:	80 e8       	ldi	r24, 0x80	; 128
     fce:	70 e0       	ldi	r23, 0x00	; 0
     fd0:	60 e0       	ldi	r22, 0x00	; 0
     fd2:	08 95       	ret

00000fd4 <__fp_nan>:
     fd4:	9f ef       	ldi	r25, 0xFF	; 255
     fd6:	80 ec       	ldi	r24, 0xC0	; 192
     fd8:	08 95       	ret

00000fda <__fp_pscA>:
     fda:	00 24       	eor	r0, r0
     fdc:	0a 94       	dec	r0
     fde:	16 16       	cp	r1, r22
     fe0:	17 06       	cpc	r1, r23
     fe2:	18 06       	cpc	r1, r24
     fe4:	09 06       	cpc	r0, r25
     fe6:	08 95       	ret

00000fe8 <__fp_pscB>:
     fe8:	00 24       	eor	r0, r0
     fea:	0a 94       	dec	r0
     fec:	12 16       	cp	r1, r18
     fee:	13 06       	cpc	r1, r19
     ff0:	14 06       	cpc	r1, r20
     ff2:	05 06       	cpc	r0, r21
     ff4:	08 95       	ret

00000ff6 <__fp_round>:
     ff6:	09 2e       	mov	r0, r25
     ff8:	03 94       	inc	r0
     ffa:	00 0c       	add	r0, r0
     ffc:	11 f4       	brne	.+4      	; 0x1002 <__fp_round+0xc>
     ffe:	88 23       	and	r24, r24
    1000:	52 f0       	brmi	.+20     	; 0x1016 <__fp_round+0x20>
    1002:	bb 0f       	add	r27, r27
    1004:	40 f4       	brcc	.+16     	; 0x1016 <__fp_round+0x20>
    1006:	bf 2b       	or	r27, r31
    1008:	11 f4       	brne	.+4      	; 0x100e <__fp_round+0x18>
    100a:	60 ff       	sbrs	r22, 0
    100c:	04 c0       	rjmp	.+8      	; 0x1016 <__fp_round+0x20>
    100e:	6f 5f       	subi	r22, 0xFF	; 255
    1010:	7f 4f       	sbci	r23, 0xFF	; 255
    1012:	8f 4f       	sbci	r24, 0xFF	; 255
    1014:	9f 4f       	sbci	r25, 0xFF	; 255
    1016:	08 95       	ret

00001018 <__fp_split3>:
    1018:	57 fd       	sbrc	r21, 7
    101a:	90 58       	subi	r25, 0x80	; 128
    101c:	44 0f       	add	r20, r20
    101e:	55 1f       	adc	r21, r21
    1020:	59 f0       	breq	.+22     	; 0x1038 <__fp_splitA+0x10>
    1022:	5f 3f       	cpi	r21, 0xFF	; 255
    1024:	71 f0       	breq	.+28     	; 0x1042 <__fp_splitA+0x1a>
    1026:	47 95       	ror	r20

00001028 <__fp_splitA>:
    1028:	88 0f       	add	r24, r24
    102a:	97 fb       	bst	r25, 7
    102c:	99 1f       	adc	r25, r25
    102e:	61 f0       	breq	.+24     	; 0x1048 <__fp_splitA+0x20>
    1030:	9f 3f       	cpi	r25, 0xFF	; 255
    1032:	79 f0       	breq	.+30     	; 0x1052 <__fp_splitA+0x2a>
    1034:	87 95       	ror	r24
    1036:	08 95       	ret
    1038:	12 16       	cp	r1, r18
    103a:	13 06       	cpc	r1, r19
    103c:	14 06       	cpc	r1, r20
    103e:	55 1f       	adc	r21, r21
    1040:	f2 cf       	rjmp	.-28     	; 0x1026 <__fp_split3+0xe>
    1042:	46 95       	lsr	r20
    1044:	f1 df       	rcall	.-30     	; 0x1028 <__fp_splitA>
    1046:	08 c0       	rjmp	.+16     	; 0x1058 <__fp_splitA+0x30>
    1048:	16 16       	cp	r1, r22
    104a:	17 06       	cpc	r1, r23
    104c:	18 06       	cpc	r1, r24
    104e:	99 1f       	adc	r25, r25
    1050:	f1 cf       	rjmp	.-30     	; 0x1034 <__fp_splitA+0xc>
    1052:	86 95       	lsr	r24
    1054:	71 05       	cpc	r23, r1
    1056:	61 05       	cpc	r22, r1
    1058:	08 94       	sec
    105a:	08 95       	ret

0000105c <__fp_zero>:
    105c:	e8 94       	clt

0000105e <__fp_szero>:
    105e:	bb 27       	eor	r27, r27
    1060:	66 27       	eor	r22, r22
    1062:	77 27       	eor	r23, r23
    1064:	cb 01       	movw	r24, r22
    1066:	97 f9       	bld	r25, 7
    1068:	08 95       	ret

0000106a <__mulsf3>:
    106a:	0e 94 48 08 	call	0x1090	; 0x1090 <__mulsf3x>
    106e:	0c 94 fb 07 	jmp	0xff6	; 0xff6 <__fp_round>
    1072:	0e 94 ed 07 	call	0xfda	; 0xfda <__fp_pscA>
    1076:	38 f0       	brcs	.+14     	; 0x1086 <__mulsf3+0x1c>
    1078:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <__fp_pscB>
    107c:	20 f0       	brcs	.+8      	; 0x1086 <__mulsf3+0x1c>
    107e:	95 23       	and	r25, r21
    1080:	11 f0       	breq	.+4      	; 0x1086 <__mulsf3+0x1c>
    1082:	0c 94 e4 07 	jmp	0xfc8	; 0xfc8 <__fp_inf>
    1086:	0c 94 ea 07 	jmp	0xfd4	; 0xfd4 <__fp_nan>
    108a:	11 24       	eor	r1, r1
    108c:	0c 94 2f 08 	jmp	0x105e	; 0x105e <__fp_szero>

00001090 <__mulsf3x>:
    1090:	0e 94 0c 08 	call	0x1018	; 0x1018 <__fp_split3>
    1094:	70 f3       	brcs	.-36     	; 0x1072 <__mulsf3+0x8>

00001096 <__mulsf3_pse>:
    1096:	95 9f       	mul	r25, r21
    1098:	c1 f3       	breq	.-16     	; 0x108a <__mulsf3+0x20>
    109a:	95 0f       	add	r25, r21
    109c:	50 e0       	ldi	r21, 0x00	; 0
    109e:	55 1f       	adc	r21, r21
    10a0:	62 9f       	mul	r22, r18
    10a2:	f0 01       	movw	r30, r0
    10a4:	72 9f       	mul	r23, r18
    10a6:	bb 27       	eor	r27, r27
    10a8:	f0 0d       	add	r31, r0
    10aa:	b1 1d       	adc	r27, r1
    10ac:	63 9f       	mul	r22, r19
    10ae:	aa 27       	eor	r26, r26
    10b0:	f0 0d       	add	r31, r0
    10b2:	b1 1d       	adc	r27, r1
    10b4:	aa 1f       	adc	r26, r26
    10b6:	64 9f       	mul	r22, r20
    10b8:	66 27       	eor	r22, r22
    10ba:	b0 0d       	add	r27, r0
    10bc:	a1 1d       	adc	r26, r1
    10be:	66 1f       	adc	r22, r22
    10c0:	82 9f       	mul	r24, r18
    10c2:	22 27       	eor	r18, r18
    10c4:	b0 0d       	add	r27, r0
    10c6:	a1 1d       	adc	r26, r1
    10c8:	62 1f       	adc	r22, r18
    10ca:	73 9f       	mul	r23, r19
    10cc:	b0 0d       	add	r27, r0
    10ce:	a1 1d       	adc	r26, r1
    10d0:	62 1f       	adc	r22, r18
    10d2:	83 9f       	mul	r24, r19
    10d4:	a0 0d       	add	r26, r0
    10d6:	61 1d       	adc	r22, r1
    10d8:	22 1f       	adc	r18, r18
    10da:	74 9f       	mul	r23, r20
    10dc:	33 27       	eor	r19, r19
    10de:	a0 0d       	add	r26, r0
    10e0:	61 1d       	adc	r22, r1
    10e2:	23 1f       	adc	r18, r19
    10e4:	84 9f       	mul	r24, r20
    10e6:	60 0d       	add	r22, r0
    10e8:	21 1d       	adc	r18, r1
    10ea:	82 2f       	mov	r24, r18
    10ec:	76 2f       	mov	r23, r22
    10ee:	6a 2f       	mov	r22, r26
    10f0:	11 24       	eor	r1, r1
    10f2:	9f 57       	subi	r25, 0x7F	; 127
    10f4:	50 40       	sbci	r21, 0x00	; 0
    10f6:	9a f0       	brmi	.+38     	; 0x111e <__mulsf3_pse+0x88>
    10f8:	f1 f0       	breq	.+60     	; 0x1136 <__mulsf3_pse+0xa0>
    10fa:	88 23       	and	r24, r24
    10fc:	4a f0       	brmi	.+18     	; 0x1110 <__mulsf3_pse+0x7a>
    10fe:	ee 0f       	add	r30, r30
    1100:	ff 1f       	adc	r31, r31
    1102:	bb 1f       	adc	r27, r27
    1104:	66 1f       	adc	r22, r22
    1106:	77 1f       	adc	r23, r23
    1108:	88 1f       	adc	r24, r24
    110a:	91 50       	subi	r25, 0x01	; 1
    110c:	50 40       	sbci	r21, 0x00	; 0
    110e:	a9 f7       	brne	.-22     	; 0x10fa <__mulsf3_pse+0x64>
    1110:	9e 3f       	cpi	r25, 0xFE	; 254
    1112:	51 05       	cpc	r21, r1
    1114:	80 f0       	brcs	.+32     	; 0x1136 <__mulsf3_pse+0xa0>
    1116:	0c 94 e4 07 	jmp	0xfc8	; 0xfc8 <__fp_inf>
    111a:	0c 94 2f 08 	jmp	0x105e	; 0x105e <__fp_szero>
    111e:	5f 3f       	cpi	r21, 0xFF	; 255
    1120:	e4 f3       	brlt	.-8      	; 0x111a <__mulsf3_pse+0x84>
    1122:	98 3e       	cpi	r25, 0xE8	; 232
    1124:	d4 f3       	brlt	.-12     	; 0x111a <__mulsf3_pse+0x84>
    1126:	86 95       	lsr	r24
    1128:	77 95       	ror	r23
    112a:	67 95       	ror	r22
    112c:	b7 95       	ror	r27
    112e:	f7 95       	ror	r31
    1130:	e7 95       	ror	r30
    1132:	9f 5f       	subi	r25, 0xFF	; 255
    1134:	c1 f7       	brne	.-16     	; 0x1126 <__mulsf3_pse+0x90>
    1136:	fe 2b       	or	r31, r30
    1138:	88 0f       	add	r24, r24
    113a:	91 1d       	adc	r25, r1
    113c:	96 95       	lsr	r25
    113e:	87 95       	ror	r24
    1140:	97 f9       	bld	r25, 7
    1142:	08 95       	ret

00001144 <__divmodhi4>:
    1144:	97 fb       	bst	r25, 7
    1146:	07 2e       	mov	r0, r23
    1148:	16 f4       	brtc	.+4      	; 0x114e <__divmodhi4+0xa>
    114a:	00 94       	com	r0
    114c:	07 d0       	rcall	.+14     	; 0x115c <__divmodhi4_neg1>
    114e:	77 fd       	sbrc	r23, 7
    1150:	09 d0       	rcall	.+18     	; 0x1164 <__divmodhi4_neg2>
    1152:	0e 94 b6 08 	call	0x116c	; 0x116c <__udivmodhi4>
    1156:	07 fc       	sbrc	r0, 7
    1158:	05 d0       	rcall	.+10     	; 0x1164 <__divmodhi4_neg2>
    115a:	3e f4       	brtc	.+14     	; 0x116a <__divmodhi4_exit>

0000115c <__divmodhi4_neg1>:
    115c:	90 95       	com	r25
    115e:	81 95       	neg	r24
    1160:	9f 4f       	sbci	r25, 0xFF	; 255
    1162:	08 95       	ret

00001164 <__divmodhi4_neg2>:
    1164:	70 95       	com	r23
    1166:	61 95       	neg	r22
    1168:	7f 4f       	sbci	r23, 0xFF	; 255

0000116a <__divmodhi4_exit>:
    116a:	08 95       	ret

0000116c <__udivmodhi4>:
    116c:	aa 1b       	sub	r26, r26
    116e:	bb 1b       	sub	r27, r27
    1170:	51 e1       	ldi	r21, 0x11	; 17
    1172:	07 c0       	rjmp	.+14     	; 0x1182 <__udivmodhi4_ep>

00001174 <__udivmodhi4_loop>:
    1174:	aa 1f       	adc	r26, r26
    1176:	bb 1f       	adc	r27, r27
    1178:	a6 17       	cp	r26, r22
    117a:	b7 07       	cpc	r27, r23
    117c:	10 f0       	brcs	.+4      	; 0x1182 <__udivmodhi4_ep>
    117e:	a6 1b       	sub	r26, r22
    1180:	b7 0b       	sbc	r27, r23

00001182 <__udivmodhi4_ep>:
    1182:	88 1f       	adc	r24, r24
    1184:	99 1f       	adc	r25, r25
    1186:	5a 95       	dec	r21
    1188:	a9 f7       	brne	.-22     	; 0x1174 <__udivmodhi4_loop>
    118a:	80 95       	com	r24
    118c:	90 95       	com	r25
    118e:	bc 01       	movw	r22, r24
    1190:	cd 01       	movw	r24, r26
    1192:	08 95       	ret

00001194 <__itoa_ncheck>:
    1194:	bb 27       	eor	r27, r27
    1196:	4a 30       	cpi	r20, 0x0A	; 10
    1198:	31 f4       	brne	.+12     	; 0x11a6 <__itoa_ncheck+0x12>
    119a:	99 23       	and	r25, r25
    119c:	22 f4       	brpl	.+8      	; 0x11a6 <__itoa_ncheck+0x12>
    119e:	bd e2       	ldi	r27, 0x2D	; 45
    11a0:	90 95       	com	r25
    11a2:	81 95       	neg	r24
    11a4:	9f 4f       	sbci	r25, 0xFF	; 255
    11a6:	0c 94 d6 08 	jmp	0x11ac	; 0x11ac <__utoa_common>

000011aa <__utoa_ncheck>:
    11aa:	bb 27       	eor	r27, r27

000011ac <__utoa_common>:
    11ac:	fb 01       	movw	r30, r22
    11ae:	55 27       	eor	r21, r21
    11b0:	aa 27       	eor	r26, r26
    11b2:	88 0f       	add	r24, r24
    11b4:	99 1f       	adc	r25, r25
    11b6:	aa 1f       	adc	r26, r26
    11b8:	a4 17       	cp	r26, r20
    11ba:	10 f0       	brcs	.+4      	; 0x11c0 <__utoa_common+0x14>
    11bc:	a4 1b       	sub	r26, r20
    11be:	83 95       	inc	r24
    11c0:	50 51       	subi	r21, 0x10	; 16
    11c2:	b9 f7       	brne	.-18     	; 0x11b2 <__utoa_common+0x6>
    11c4:	a0 5d       	subi	r26, 0xD0	; 208
    11c6:	aa 33       	cpi	r26, 0x3A	; 58
    11c8:	08 f0       	brcs	.+2      	; 0x11cc <__utoa_common+0x20>
    11ca:	a9 5d       	subi	r26, 0xD9	; 217
    11cc:	a1 93       	st	Z+, r26
    11ce:	00 97       	sbiw	r24, 0x00	; 0
    11d0:	79 f7       	brne	.-34     	; 0x11b0 <__utoa_common+0x4>
    11d2:	b1 11       	cpse	r27, r1
    11d4:	b1 93       	st	Z+, r27
    11d6:	11 92       	st	Z+, r1
    11d8:	cb 01       	movw	r24, r22
    11da:	0c 94 ef 08 	jmp	0x11de	; 0x11de <strrev>

000011de <strrev>:
    11de:	dc 01       	movw	r26, r24
    11e0:	fc 01       	movw	r30, r24
    11e2:	67 2f       	mov	r22, r23
    11e4:	71 91       	ld	r23, Z+
    11e6:	77 23       	and	r23, r23
    11e8:	e1 f7       	brne	.-8      	; 0x11e2 <strrev+0x4>
    11ea:	32 97       	sbiw	r30, 0x02	; 2
    11ec:	04 c0       	rjmp	.+8      	; 0x11f6 <strrev+0x18>
    11ee:	7c 91       	ld	r23, X
    11f0:	6d 93       	st	X+, r22
    11f2:	70 83       	st	Z, r23
    11f4:	62 91       	ld	r22, -Z
    11f6:	ae 17       	cp	r26, r30
    11f8:	bf 07       	cpc	r27, r31
    11fa:	c8 f3       	brcs	.-14     	; 0x11ee <strrev+0x10>
    11fc:	08 95       	ret

000011fe <_exit>:
    11fe:	f8 94       	cli

00001200 <__stop_program>:
    1200:	ff cf       	rjmp	.-2      	; 0x1200 <__stop_program>
